<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>17066</ID>
      <Description>"&lt;--- Auto Attach / Compact Mode [Ctrl+Y] "</Description>
      <Options moHideChildren="1"/>
      <Color>4080FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
-----------------------
OpenProcess("Palworld-Win64-Shipping.exe")

-----------------------

{$asm}



LuaCall(function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel4.Visible    = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true))


[DISABLE]


LuaCall(cycleFullCompact(nil,false))


</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>89</Key>
          </Keys>
          <ID>0</ID>
          <ActivateSound TTS="EN">{Auto Attach} Activated</ActivateSound>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>108822</ID>
          <Description>"Cordinates"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-03
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(GetCoordinatesZa,$process,0F 10 81 70 02 00 00 F2 0F 11 44 24 30 EB 10 0F 11 5C) // should be unique
alloc(newmem,$1000,GetCoordinatesZa)

alloc(originalbytesHi,9)
registersymbol(originalbytesHi)

originalbytesHi:
readmem(GetCoordinatesZa,9)

label(code)
label(return)

label(seeCoords)
registersymbol(seeCoords)

newmem:

mov [seeCoords],rcx

code:
  movups xmm0,[rcx+00000270]
  jmp return

  seeCoords:
  dq 0

GetCoordinatesZa:
  jmp newmem
  nop 2
return:
registersymbol(GetCoordinatesZa)

[DISABLE]

GetCoordinatesZa:
readmem(originalbytesHi,9)
  //db 0F 10 81 70 02 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2B5B7D0

Palworld-Win64-Shipping.exe+2B5B79F: F2 0F 10 15 29 59 77 05  - movsd xmm2,[Palworld-Win64-Shipping.exe+82D10D0]
Palworld-Win64-Shipping.exe+2B5B7A7: 0F 10 1D 12 59 77 05     - movups xmm3,[Palworld-Win64-Shipping.exe+82D10C0]
Palworld-Win64-Shipping.exe+2B5B7AE: 66 90                    - nop 2
Palworld-Win64-Shipping.exe+2B5B7B0: 48 8B 02                 - mov rax,[rdx]
Palworld-Win64-Shipping.exe+2B5B7B3: 48 8B 88 98 01 00 00     - mov rcx,[rax+00000198]
Palworld-Win64-Shipping.exe+2B5B7BA: 48 85 C9                 - test rcx,rcx
Palworld-Win64-Shipping.exe+2B5B7BD: 74 20                    - je Palworld-Win64-Shipping.exe+2B5B7DF
Palworld-Win64-Shipping.exe+2B5B7BF: 0F 10 81 60 02 00 00     - movups xmm0,[rcx+00000260]
Palworld-Win64-Shipping.exe+2B5B7C6: 48 8D 44 24 20           - lea rax,[rsp+20]
Palworld-Win64-Shipping.exe+2B5B7CB: 0F 11 44 24 20           - movups [rsp+20],xmm0
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2B5B7D0: 0F 10 81 70 02 00 00     - movups xmm0,[rcx+00000270]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2B5B7D7: F2 0F 11 44 24 30        - movsd [rsp+30],xmm0
Palworld-Win64-Shipping.exe+2B5B7DD: EB 10                    - jmp Palworld-Win64-Shipping.exe+2B5B7EF
Palworld-Win64-Shipping.exe+2B5B7DF: 0F 11 5C 24 38           - movups [rsp+38],xmm3
Palworld-Win64-Shipping.exe+2B5B7E4: 48 8D 44 24 38           - lea rax,[rsp+38]
Palworld-Win64-Shipping.exe+2B5B7E9: F2 0F 11 54 24 48        - movsd [rsp+48],xmm2
Palworld-Win64-Shipping.exe+2B5B7EF: 0F 10 08                 - movups xmm1,[rax]
Palworld-Win64-Shipping.exe+2B5B7F2: 48 83 C2 08              - add rdx,08
Palworld-Win64-Shipping.exe+2B5B7F6: F2 0F 10 40 10           - movsd xmm0,[rax+10]
Palworld-Win64-Shipping.exe+2B5B7FB: F2 0F 11 44 24 48        - movsd [rsp+48],xmm0
Palworld-Win64-Shipping.exe+2B5B801: 0F 28 C1                 - movaps xmm0,xmm1
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>108814</ID>
              <Description>"X"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>408000</Color>
              <VariableType>Float</VariableType>
              <Address>seeCoords</Address>
              <Offsets>
                <Offset>26C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>108815</ID>
              <Description>"Y"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>408000</Color>
              <VariableType>Float</VariableType>
              <Address>seeCoords</Address>
              <Offsets>
                <Offset>264</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>108816</ID>
              <Description>"Z"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>408000</Color>
              <VariableType>Float</VariableType>
              <Address>seeCoords</Address>
              <Offsets>
                <Offset>274</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88156</ID>
          <Description>"Pal Stats [Tab then Party then Select a Pal]"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PalStatsA,$process,48 8B B1 C8 02 00 00 89 7A 08) // should be unique
alloc(newmem,$1000,PalStatsA)

alloc(originalbytesAk,9)
registersymbol(originalbytesAk)

originalbytesAk:
readmem(PalStatsA,9)

label(code)
label(return)

label(seePalStats)
registersymbol(seePalStats)

newmem:

mov [seePalStats],rcx

code:
  mov rsi,[rcx+000002C8]
  jmp return

  seePalStats:
  dq 0

PalStatsA:
  jmp newmem
  nop 2
return:
registersymbol(PalStatsA)

[DISABLE]

PalStatsA:
readmem(originalbytesAk,9)
  //db 48 8B B1 C8 02 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF62842F4EE

7FF62842F4CE: CC                    - int 3 
7FF62842F4CF: CC                    - int 3 
7FF62842F4D0: 48 89 5C 24 08        - mov [rsp+08],rbx
7FF62842F4D5: 48 89 74 24 10        - mov [rsp+10],rsi
7FF62842F4DA: 57                    - push rdi
7FF62842F4DB: 48 83 EC 20           - sub rsp,20
7FF62842F4DF: 33 C0                 - xor eax,eax
7FF62842F4E1: 48 8B DA              - mov rbx,rdx
7FF62842F4E4: 48 89 02              - mov [rdx],rax
7FF62842F4E7: 48 63 B9 D0 02 00 00  - movsxd  rdi,dword ptr [rcx+000002D0]
// ---------- INJECTING HERE ----------
7FF62842F4EE: 48 8B B1 C8 02 00 00  - mov rsi,[rcx+000002C8]
// ---------- DONE INJECTING  ----------
7FF62842F4F5: 89 7A 08              - mov [rdx+08],edi
7FF62842F4F8: 85 FF                 - test edi,edi
7FF62842F4FA: 75 16                 - jne 7FF62842F512
7FF62842F4FC: 89 42 0C              - mov [rdx+0C],eax
7FF62842F4FF: 48 8B C2              - mov rax,rdx
7FF62842F502: 48 8B 5C 24 30        - mov rbx,[rsp+30]
7FF62842F507: 48 8B 74 24 38        - mov rsi,[rsp+38]
7FF62842F50C: 48 83 C4 20           - add rsp,20
7FF62842F510: 5F                    - pop rdi
7FF62842F511: C3                    - ret 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>88050</ID>
              <Description>"Health"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>seePalStats</Address>
              <Offsets>
                <Offset>2E8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88051</ID>
              <Description>"Exp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seePalStats</Address>
              <Offsets>
                <Offset>2A8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88052</ID>
              <Description>"Level"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seePalStats</Address>
              <Offsets>
                <Offset>290</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88053</ID>
              <Description>"Rank"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seePalStats</Address>
              <Offsets>
                <Offset>294</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88054</ID>
              <Description>"Sanity"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>Float</VariableType>
              <Address>seePalStats</Address>
              <Offsets>
                <Offset>39C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88055</ID>
              <Description>"Melee Damage"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seePalStats</Address>
              <Offsets>
                <Offset>2F4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88056</ID>
              <Description>"Range Damage"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seePalStats</Address>
              <Offsets>
                <Offset>2F8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88057</ID>
              <Description>"Defence"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seePalStats</Address>
              <Offsets>
                <Offset>2FC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88058</ID>
              <Description>"Hunger Decrease Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>Float</VariableType>
              <Address>seePalStats</Address>
              <Offsets>
                <Offset>3E0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88147</ID>
          <Description>"Invulnerability"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InvincibleAa,$process,48 89 54 24 10 53 57 48 83 EC 48 48 8B D9) // should be unique
alloc(newmem,$1000,InvincibleAa)


alloc(originalbytesAa,9)
registersymbol(originalbytesAa)

originalbytesAa:
readmem(InvincibleAa,9)


label(code)
label(return)
label(My)

newmem:

code:
  cmp byte ptr[rcx+328],1
  je short My
  cmp qword ptr[rcx+330],0
  jne short My

  @@:
  mov [rsp+10],rdx
  jmp return

My:
  ret

InvincibleAa:
  jmp newmem
return:
registersymbol(InvincibleAa)

[DISABLE]

InvincibleAa:
readmem(originalbytesAa,9)
  //db 48 89 54 24 10

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF628443190

7FF628443182: 5F                 - pop rdi
7FF628443183: E9 78 2B FE FF     - jmp 7FF628425D00
7FF628443188: CC                 - int 3 
7FF628443189: CC                 - int 3 
7FF62844318A: CC                 - int 3 
7FF62844318B: CC                 - int 3 
7FF62844318C: CC                 - int 3 
7FF62844318D: CC                 - int 3 
7FF62844318E: CC                 - int 3 
7FF62844318F: CC                 - int 3 
// ---------- INJECTING HERE ----------
7FF628443190: 48 89 54 24 10     - mov [rsp+10],rdx
// ---------- DONE INJECTING  ----------
7FF628443195: 53                 - push rbx
7FF628443196: 57                 - push rdi
7FF628443197: 48 83 EC 48        - sub rsp,48
7FF62844319B: 48 8B D9           - mov rbx,rcx
7FF62844319E: 0F 29 74 24 30     - movaps [rsp+30],xmm6
7FF6284431A3: 48 8D 4C 24 68     - lea rcx,[rsp+68]
7FF6284431A8: 33 D2              - xor edx,edx
7FF6284431AA: E8 21 B7 1A 00     - call 7FF6285EE8D0
7FF6284431AF: 84 C0              - test al,al
7FF6284431B1: 0F 85 B6 00 00 00  - jne 7FF62844326D
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Infinite Stamina"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-19
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(StaminaZa,$process,48 8B 81 F0 02 00 00 48 89 02 48 8B C2) // should be unique
alloc(newmem,$1000,StaminaZa)

alloc(originalbytesAp,9)
registersymbol(originalbytesAp)

originalbytesAp:
readmem(StaminaZa,9)

label(code)
label(return)

newmem:

code:
mov [rcx+2F0],(int)1000000
  mov rax,[rcx+2F0]
  jmp return

StaminaZa:
  jmp newmem
  nop 2
return:
registersymbol(StaminaZa)

[DISABLE]

StaminaZa:
readmem(originalbytesAp,9)
  //db 48 8B 81 F0 02 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.UPalCharacterParameterComponent::GetSP

Palworld-Win64-Shipping.FDefaultGameMoviePlayer::IsInitialized: 0F B6 81 58 01 00 00  - movzx eax,byte ptr [rcx+00000158]
Palworld-Win64-Shipping.UGizmoElementGroup::GetConstantScale+7: C3                    - ret 
Palworld-Win64-Shipping.UGizmoElementGroup::GetConstantScale+8: CC                    - int 3 
Palworld-Win64-Shipping.exe+2878CC9: CC                    - int 3 
Palworld-Win64-Shipping.exe+2878CCA: CC                    - int 3 
Palworld-Win64-Shipping.exe+2878CCB: CC                    - int 3 
Palworld-Win64-Shipping.exe+2878CCC: CC                    - int 3 
Palworld-Win64-Shipping.exe+2878CCD: CC                    - int 3 
Palworld-Win64-Shipping.exe+2878CCE: CC                    - int 3 
Palworld-Win64-Shipping.exe+2878CCF: CC                    - int 3 
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.UPalCharacterParameterComponent::GetSP: 48 8B 81 F0 02 00 00  - mov rax,[rcx+Palworld-Win64-Shipping.GCurrentNumDrawCallsRHIPtr]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.UPalCharacterParameterComponent::GetSP+7: 48 89 02              - mov [rdx],rax
Palworld-Win64-Shipping.UPalCharacterParameterComponent::GetSP+A: 48 8B C2              - mov rax,rdx
Palworld-Win64-Shipping.UPalCharacterParameterComponent::GetSP+D: C3                    - ret 
Palworld-Win64-Shipping.exe+2878CDE: CC                    - int 3 
Palworld-Win64-Shipping.exe+2878CDF: CC                    - int 3 
Palworld-Win64-Shipping.UPalCharacterParameterComponent::GetSanity: 48 8B 89 08 01 00 00  - mov rcx,[rcx+00000108]
Palworld-Win64-Shipping.UPalCharacterParameterComponent::GetSanity+7: 48 85 C9              - test rcx,rcx
Palworld-Win64-Shipping.UPalCharacterParameterComponent::GetSanity+A: 75 04                 - jne Palworld-Win64-Shipping.UPalCharacterParameterComponent::GetSanity+10
Palworld-Win64-Shipping.UPalCharacterParameterComponent::GetSanity+C: 0F 57 C0              - xorps xmm0,xmm0
Palworld-Win64-Shipping.UPalCharacterParameterComponent::GetSanity+F: C3                    - ret 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>88136</ID>
          <Description>"Player Speed"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-27
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(WalkSpeedZa,$process,F3 0F 10 9B E8 01 00 00 F2) // should be unique
alloc(newmem,$1000,WalkSpeedZa)

alloc(originalbytesAb,9)
registersymbol(originalbytesAb)

originalbytesAb:
readmem(WalkSpeedZa,9)


alloc(SuperSpeed,8)
registersymbol(SuperSpeed)

SuperSpeed:
dd 0

label(code)
label(return)

label(seeWalkSpeed)
registersymbol(seeWalkSpeed)

newmem:

mov [seeWalkSpeed],rbx

cmp [SuperSpeed],1
jne code

mov [rbx+000001E8],(float)950
mov [rbx+00000FB0],(float)1700
  movss xmm3,[rbx+000001E8]
  jmp return

code:
  movss xmm3,[rbx+000001E8]
  jmp return

  seeWalkSpeed:
  dq 0

WalkSpeedZa:
  jmp newmem
  nop 3
return:
registersymbol(WalkSpeedZa)

[DISABLE]

WalkSpeedZa:
readmem(originalbytesAb,9)
  //db F3 0F 10 9B E8 01 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF67F169738

7FF67F169704: 48 8B D8                 - mov rbx,rax
7FF67F169707: 48 85 C0                 - test rax,rax
7FF67F16970A: 0F 84 F9 00 00 00        - je 7FF67F169809
7FF67F169710: 48 8B 88 90 00 00 00     - mov rcx,[rax+00000090]
7FF67F169717: 48 8D 54 24 20           - lea rdx,[rsp+20]
7FF67F16971C: 4C 8B 01                 - mov r8,[rcx]
7FF67F16971F: 41 FF 90 48 03 00 00     - call qword ptr [r8+00000348]
7FF67F169726: F2 0F 10 54 24 20        - movsd xmm2,[rsp+20]
7FF67F16972C: F2 0F 10 44 24 28        - movsd xmm0,[rsp+28]
7FF67F169732: F2 0F 10 4C 24 30        - movsd xmm1,[rsp+30]
// ---------- INJECTING HERE ----------
7FF67F169738: F3 0F 10 9B E8 01 00 00  - movss xmm3,[rbx+000001E8]
// ---------- DONE INJECTING  ----------
7FF67F169740: F2 0F 59 D2              - mulsd xmm2,xmm2
7FF67F169744: F2 0F 59 C9              - mulsd xmm1,xmm1
7FF67F169748: F2 0F 59 C0              - mulsd xmm0,xmm0
7FF67F16974C: F2 0F 58 D0              - addsd xmm2,xmm0
7FF67F169750: F2 0F 58 D1              - addsd xmm2,xmm1
7FF67F169754: F3 0F 10 8B B0 0F 00 00  - movss xmm1,[rbx+00000FB0]
7FF67F16975C: F3 0F 5C CB              - subss xmm1,xmm3
7FF67F169760: 66 0F 51 C2              - sqrtpd xmm0,xmm2
7FF67F169764: F3 0F 10 15 FC 68 58 03  - movss xmm2,[7FF6826F0068]
7FF67F16976C: 66 0F 5A E0              - cvtpd2ps xmm4,xmm0
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>88140</ID>
              <Description>"Super Speed"</Description>
              <Color>80FF80</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

SuperSpeed:
dd 1
 
[DISABLE]

SuperSpeed:
dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>88137</ID>
              <Description>"Current Walk Speed [ 350 = Normal Speed]"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>Float</VariableType>
              <Address>seeWalkSpeed</Address>
              <Offsets>
                <Offset>1E8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88139</ID>
              <Description>"Current Run Speed [500 = Normal Speed]"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>Float</VariableType>
              <Address>seeWalkSpeed</Address>
              <Offsets>
                <Offset>FB0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>106114</ID>
          <Description>"Animation Speed"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-03
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PlayerAnimationSpeedZA,$process,F3 0F 10 4B 64 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 48 8B 4E 28) // should be unique
alloc(newmem,$1000,PlayerAnimationSpeedZA)

alloc(originalbytesHe,9)
registersymbol(originalbytesHe)

originalbytesHe:
readmem(PlayerAnimationSpeedZA,9)

label(code)
label(return)

label(setPlayerAnimSpd)
registersymbol(setPlayerAnimSpd)

newmem:
{
BASE
off 0 my (int)3261060272
off 58 my (int)678718480
off 188 en (int)0
off 1DC my (int)16842752 en (int)0
off 200 en (int)0
off 224 my (int)1023 en (int)0
off 190 my (int)3261062784
off 298 my (int)80
off 618 my (int)1036831949
off 710 my (int)65536
}

cmp [rbx+1DC],(int)16842752
jne code

push r15
mov r15,setPlayerAnimSpd
mov r15d,dword ptr [r15]
mov [rbx+64],r15d
pop r15

code:
  movss xmm1,[rbx+64]
  jmp return

  setPlayerAnimSpd:
  dd (float)2.2


PlayerAnimationSpeedZA:
  jmp newmem
return:
registersymbol(PlayerAnimationSpeedZA)

[DISABLE]

PlayerAnimationSpeedZA:
readmem(originalbytesHe,9)
  //db F3 0F 10 4B 64

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+48FC2BA

Palworld-Win64-Shipping.exe+48FC29E: 75 15                    - jne Palworld-Win64-Shipping.exe+48FC2B5
Palworld-Win64-Shipping.exe+48FC2A0: 48 85 DB                 - test rbx,rbx
Palworld-Win64-Shipping.exe+48FC2A3: 74 3B                    - je Palworld-Win64-Shipping.exe+48FC2E0
Palworld-Win64-Shipping.exe+48FC2A5: 48 8B 03                 - mov rax,[rbx]
Palworld-Win64-Shipping.exe+48FC2A8: 48 8B CB                 - mov rcx,rbx
Palworld-Win64-Shipping.exe+48FC2AB: FF 90 D0 04 00 00        - call qword ptr [rax+000004D0]
Palworld-Win64-Shipping.exe+48FC2B1: 84 C0                    - test al,al
Palworld-Win64-Shipping.exe+48FC2B3: 74 2B                    - je Palworld-Win64-Shipping.exe+48FC2E0
Palworld-Win64-Shipping.exe+48FC2B5: 48 85 DB                 - test rbx,rbx
Palworld-Win64-Shipping.exe+48FC2B8: 74 07                    - je Palworld-Win64-Shipping.exe+48FC2C1
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+48FC2BA: F3 0F 10 4B 64           - movss xmm1,[rbx+64]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+48FC2BF: EB 08                    - jmp Palworld-Win64-Shipping.exe+48FC2C9
Palworld-Win64-Shipping.exe+48FC2C1: F3 0F 10 0D 9F 5D 52 01  - movss xmm1,[Palworld-Win64-Shipping.D3D12SDKVersion+2F1C]
Palworld-Win64-Shipping.exe+48FC2C9: 48 8B 4E 28              - mov rcx,[rsi+28]
Palworld-Win64-Shipping.exe+48FC2CD: 4C 8B CE                 - mov r9,rsi
Palworld-Win64-Shipping.exe+48FC2D0: F3 0F 59 CE              - mulss xmm1,xmm6
Palworld-Win64-Shipping.exe+48FC2D4: 44 8B C7                 - mov r8d,edi
Palworld-Win64-Shipping.exe+48FC2D7: 48 8B 01                 - mov rax,[rcx]
Palworld-Win64-Shipping.exe+48FC2DA: FF 90 A8 03 00 00        - call qword ptr [rax+000003A8]
Palworld-Win64-Shipping.exe+48FC2E0: 48 8B 5C 24 40           - mov rbx,[rsp+40]
Palworld-Win64-Shipping.exe+48FC2E5: 48 8B 6C 24 48           - mov rbp,[rsp+48]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>106115</ID>
              <Description>"set Animation Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808000</Color>
              <VariableType>Float</VariableType>
              <Address>setPlayerAnimSpd</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88165</ID>
          <Description>"0 Weight"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version:
  Date   : 2024-01-19
  Author : SilverRabbit90

  This script does blah blah blah
}


[ENABLE]

aobscanmodule(ItemWeight1Zaa,$process,F3 0F 11 B3 50 01 00 00 72) // should be unique
alloc(newmem,$1000,ItemWeight1Zaa)

alloc(originalbytesAq,9)
registersymbol(originalbytesAq)

originalbytesAq:
readmem(ItemWeight1Zaa,9)

alloc(setItemWeight,4)
registersymbol(setItemWeight)

label(code)
label(return)

newmem:

  movss xmm6,[setItemWeight]

code:

  movss [rbx+00000150],xmm6
  jmp return

setItemWeight:
dd (float)0

ItemWeight1Zaa:
  jmp newmem
  nop 3
return:
registersymbol(ItemWeight1Zaa)

[DISABLE]

ItemWeight1Zaa:
readmem(originalbytesAq,9)
  //db F3 0F 11 B3 50 01 00 00

unregistersymbol(*)
dealloc(*)


{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+29

Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight: 40 53                    - push rbx
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+2: 48 83 EC 30              - sub rsp,30
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+6: 0F 29 74 24 20           - movaps [rsp+20],xmm6
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+B: 48 8B D9                 - mov rbx,rcx
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+E: E8 DD B7 FD FF           - call Palworld-Win64-Shipping.UPalPlayerInventoryData::CalculateInventoryWeight
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+13: F3 0F 10 8B 50 01 00 00  - movss xmm1,[rbx+00000150]
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+1B: 0F 28 F0                 - movaps xmm6,xmm0
INJECT: E9 8D 7D 4F FD           - jmp 7FF732980000
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+23: 0F 1F 00                 - nop dword ptr [rax]
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+26: 0F 2F C8                 - comiss xmm1,xmm0
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+29: F3 0F 11 B3 50 01 00 00  - movss [rbx+00000150],xmm6
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+31: 72 0E                    - jb Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+41
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+33: 0F 2F F0                 - comiss xmm6,xmm0
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+36: 73 25                    - jae Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+5D
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+38: 48 8D 8B A0 00 00 00     - lea rcx,[rbx+Palworld-Win64-Shipping.LowLevelTasks::FSchedulerTls::ActiveScheduler]
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+3F: EB 0C                    - jmp Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+4D
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+41: 0F 2F F0                 - comiss xmm6,xmm0
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+44: 72 17                    - jb Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+5D
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+46: 48 8D 8B 90 00 00 00     - lea rcx,[rbx+Palworld-Win64-Shipping.LowLevelTasks::FSchedulerTls::WorkerType]
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+4D: 48 8D 54 24 40           - lea rdx,[rsp+40]
Palworld-Win64-Shipping.UPalPlayerInventoryData::UpdateCurrentInventoryWeight+52: F3 0F 11 74 24 40        - movss [rsp+40],xmm6
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103838</ID>
          <Description>"Damage Up"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-02
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(DamageUpA,$process,8B 97 60 01 00 00 48 8B CB) // should be unique
alloc(newmem,$1000,DamageUpA)

alloc(originalbytesHa,9)
registersymbol(originalbytesHa)

originalbytesHa:
readmem(DamageUpA,9)

label(code)
label(return)

label(mulDamage)
registersymbol(mulDamage)

newmem:

code:
  mov edx,[rdi+00000160]
    imul edx,[mulDamage]
  jmp return

  mulDamage:
  dd (int)10

DamageUpA:
  jmp newmem
  nop
return:
registersymbol(DamageUpA)

[DISABLE]

DamageUpA:
readmem(originalbytesHa,9)
  //db 8B 97 60 01 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2B9EF15

Palworld-Win64-Shipping.exe+2B9EEF2: E8 29 70 C6 FF     - call Palworld-Win64-Shipping.exe+2805F20
Palworld-Win64-Shipping.exe+2B9EEF7: 48 8B 4F 10        - mov rcx,[rdi+10]
Palworld-Win64-Shipping.exe+2B9EEFB: 4C 8D 40 30        - lea r8,[rax+30]
Palworld-Win64-Shipping.exe+2B9EEFF: 48 63 40 38        - movsxd  rax,dword ptr [rax+38]
Palworld-Win64-Shipping.exe+2B9EF03: 3B 41 38           - cmp eax,[rcx+38]
Palworld-Win64-Shipping.exe+2B9EF06: 7F 25              - jg Palworld-Win64-Shipping.exe+2B9EF2D
Palworld-Win64-Shipping.exe+2B9EF08: 48 8B D0           - mov rdx,rax
Palworld-Win64-Shipping.exe+2B9EF0B: 48 8B 41 30        - mov rax,[rcx+30]
Palworld-Win64-Shipping.exe+2B9EF0F: 4C 39 04 D0        - cmp [rax+rdx*8],r8
Palworld-Win64-Shipping.exe+2B9EF13: 75 18              - jne Palworld-Win64-Shipping.exe+2B9EF2D
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2B9EF15: 8B 97 60 01 00 00  - mov edx,[rdi+00000160]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2B9EF1B: 48 8B CB           - mov rcx,rbx
Palworld-Win64-Shipping.exe+2B9EF1E: 48 8B 5C 24 48     - mov rbx,[rsp+48]
Palworld-Win64-Shipping.exe+2B9EF23: 48 83 C4 30        - add rsp,30
Palworld-Win64-Shipping.exe+2B9EF27: 5F                 - pop rdi
Palworld-Win64-Shipping.exe+2B9EF28: E9 43 34 FF FF     - jmp Palworld-Win64-Shipping.exe+2B92370
Palworld-Win64-Shipping.exe+2B9EF2D: 48 8B 5C 24 48     - mov rbx,[rsp+48]
Palworld-Win64-Shipping.exe+2B9EF32: B8 01 00 00 00     - mov eax,00000001
Palworld-Win64-Shipping.exe+2B9EF37: 48 83 C4 30        - add rsp,30
Palworld-Win64-Shipping.exe+2B9EF3B: 5F                 - pop rdi
Palworld-Win64-Shipping.exe+2B9EF3C: C3                 - ret 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>103839</ID>
              <Description>"multiplier Damage"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>mulDamage</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>19322</ID>
          <Description>"Exp"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-27
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ExpOnGetAa,$process,89 87 A8 02 00 00 40 84) // should be unique
alloc(newmem,$1000,ExpOnGetAa)

//label(code)

alloc(originalbytesB,9)
registersymbol(originalbytesB)

originalbytesB:
readmem(ExpOnGetAa,9)

alloc(MoreExp,8)
registersymbol(MoreExp)

MoreExp:
dd 0

label(bkpExp)
label(return)

label(seeExp)
registersymbol(seeExp)

label(addExp)
registersymbol(addExp)

newmem:
{
RDI
off 70 my (int)2 en (int)0
off 74 my (int)4 en (int)0
off 84 my (int)4 en (int)0
off A0 my (int)4 en (int)1
off A4 my (int)0 en (int)4
off B0 my (int)1 en (int)0
off B4 my (int)4 en (int)0
off C0 my (int)1 en (int)0
off 568 my (int)1 en (int)0
off 454 my (int)2 en (int)0
off 400 my (int)3 en (int)0
off 3DC my (int)1120403456 en (int)1125515264
}

cmp [rdi+70],(int)2
jne bkpExp

mov [seeExp],rdi

cmp [MoreExp],1
jne bkpExp

add eax,[addExp]

bkpExp:
  readmem(ExpOnGetAa,6)

//code:
  //mov [rdi+000002A8],eax
  jmp return

align 10

addExp:
dd (int)100

seeExp:
dq 0

ExpOnGetAa:
  jmp newmem
  nop
return:
registersymbol(ExpOnGetAa)
registersymbol(bkpExp)

[DISABLE]

ExpOnGetAa:
readmem(originalbytesB,9)
  //db 89 87 A8 02 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+29B16EF

Palworld-Win64-Shipping.exe+29B16CF: 41 0F B6 F0        - movzx esi,r8b
Palworld-Win64-Shipping.exe+29B16D3: 8B DA              - mov ebx,edx
Palworld-Win64-Shipping.exe+29B16D5: 48 8B F9           - mov rdi,rcx
Palworld-Win64-Shipping.exe+29B16D8: E8 A3 2B 01 00     - call Palworld-Win64-Shipping.exe+29C4280
Palworld-Win64-Shipping.exe+29B16DD: 84 C0              - test al,al
Palworld-Win64-Shipping.exe+29B16DF: 75 2F              - jne Palworld-Win64-Shipping.exe+29B1710
Palworld-Win64-Shipping.exe+29B16E1: 83 FB 01           - cmp ebx,01
Palworld-Win64-Shipping.exe+29B16E4: 7C 2A              - jl Palworld-Win64-Shipping.exe+29B1710
Palworld-Win64-Shipping.exe+29B16E6: 8B 8F A8 02 00 00  - mov ecx,[rdi+000002A8]
Palworld-Win64-Shipping.exe+29B16EC: 8D 04 19           - lea eax,[rcx+rbx]
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+29B16EF: 89 87 A8 02 00 00  - mov [rdi+000002A8],eax
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+29B16F5: 40 84 F6           - test sil,sil
Palworld-Win64-Shipping.exe+29B16F8: 74 16              - je Palworld-Win64-Shipping.exe+29B1710
Palworld-Win64-Shipping.exe+29B16FA: 89 4C 24 4C        - mov [rsp+4C],ecx
Palworld-Win64-Shipping.exe+29B16FE: 48 8D 54 24 48     - lea rdx,[rsp+48]
Palworld-Win64-Shipping.exe+29B1703: 48 8D 4F 48        - lea rcx,[rdi+48]
Palworld-Win64-Shipping.exe+29B1707: 89 5C 24 48        - mov [rsp+48],ebx
Palworld-Win64-Shipping.exe+29B170B: E8 80 41 1C FE     - call Palworld-Win64-Shipping.exe+B75890
Palworld-Win64-Shipping.exe+29B1710: 48 8B 5C 24 30     - mov rbx,[rsp+30]
Palworld-Win64-Shipping.exe+29B1715: 48 8B 74 24 38     - mov rsi,[rsp+38]
Palworld-Win64-Shipping.exe+29B171A: 48 83 C4 20        - add rsp,20
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>19305</ID>
              <Description>"Current Exp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeExp</Address>
              <Offsets>
                <Offset>2A8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19323</ID>
              <Description>"More Exp"</Description>
              <Options moHideChildren="1"/>
              <Color>00FF00</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

MoreExp:
dd 1
 
 
[DISABLE]

MoreExp:
dd 0
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>19306</ID>
                  <Description>"add more Exp on Take"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>808000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>addExp</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88143</ID>
          <Description>"Player Level"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-27
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PlayerLevelOnTabA,$process,48 89 84 24 60 01 00 00 8B 92 90 02 00 00) // should be unique
alloc(newmem,$1000,PlayerLevelOnTabA)

alloc(originalbytesAc,9)
registersymbol(originalbytesAc)

originalbytesAc:
readmem(PlayerLevelOnTabA+08,9)

label(code)
label(return)

label(seePlayerLevel)
registersymbol(seePlayerLevel)

newmem:

mov [seePlayerLevel],rdx

code:
  mov edx,[rdx+00000290]
  jmp return

  seePlayerLevel:
  dq 0

PlayerLevelOnTabA+08:
  jmp newmem
  nop
return:
registersymbol(PlayerLevelOnTabA)

[DISABLE]

PlayerLevelOnTabA+08:
readmem(originalbytesAc,9)
  //db 8B 92 90 02 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF67F2999F4

7FF67F2999CD: CC                       - int 3 
7FF67F2999CE: CC                       - int 3 
7FF67F2999CF: CC                       - int 3 
7FF67F2999D0: 48 89 5C 24 18           - mov [rsp+18],rbx
7FF67F2999D5: 48 89 74 24 20           - mov [rsp+20],rsi
7FF67F2999DA: 57                       - push rdi
7FF67F2999DB: 48 81 EC 70 01 00 00     - sub rsp,00000170
7FF67F2999E2: 48 8B 05 FF A5 A1 05     - mov rax,[7FF684CB3FE8]
7FF67F2999E9: 48 33 C4                 - xor rax,rsp
7FF67F2999EC: 48 89 84 24 60 01 00 00  - mov [rsp+00000160],rax
// ---------- INJECTING HERE ----------
7FF67F2999F4: 8B 92 90 02 00 00        - mov edx,[rdx+00000290]
// ---------- DONE INJECTING  ----------
7FF67F2999FA: 48 8B D9                 - mov rbx,rcx
7FF67F2999FD: 33 F6                    - xor esi,esi
7FF67F2999FF: 48 8D 4C 24 20           - lea rcx,[rsp+20]
7FF67F299A04: 48 89 74 24 20           - mov [rsp+20],rsi
7FF67F299A09: 48 89 74 24 28           - mov [rsp+28],rsi
7FF67F299A0E: E8 ED B0 21 00           - call 7FF67F4B4B00
7FF67F299A13: 48 8B BB D0 00 00 00     - mov rdi,[rbx+000000D0]
7FF67F299A1A: 44 8D 4E 01              - lea r9d,[rsi+01]
7FF67F299A1E: 44 8D 46 3E              - lea r8d,[rsi+3E]
7FF67F299A22: 48 89 B4 24 40 01 00 00  - mov [rsp+00000140],rsi
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>88144</ID>
              <Description>"Current Level"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seePlayerLevel</Address>
              <Offsets>
                <Offset>290</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88146</ID>
              <Description>"Current Exp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seePlayerLevel</Address>
              <Offsets>
                <Offset>2A8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>19320</ID>
          <Description>"Some Stats [Based on Hunger]"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-27
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HungerOnDecreaseOrEatForStatsZaa,$process,F3 0F 11 87 00 03 00 00 48) // should be unique
alloc(newmem,$1000,HungerOnDecreaseOrEatForStatsZaa)

//label(code)

alloc(originalbytesA,9)
registersymbol(originalbytesA)

originalbytesA:
readmem(HungerOnDecreaseOrEatForStatsZaa,9)

alloc(Hunger,8)
registersymbol(Hunger)

Hunger:
dd 0

label(bkpHunger)
label(return)

label(seeSomeStats)
registersymbol(seeSomeStats)

label(seeSomePalStats)
registersymbol(seeSomePalStats)

label(setHunger)

newmem:
{
Base
off 60 my (int)4
off 70 my (int)2 en (int)0
off 74 my (int)4 en (int)0
off 80 my (int)2
off 98 my (int)0
off 9C my (int)0
off A0 my (int)0
off A4 my (int)0 en (int)4
off B0 my (int)1 en (int)0
off B4 my (int)4 en (int)0
off C0 my (int)1 en (int)0
off C4 my (int)4 en (int)0
off D0 my (int)2 en (int)0
off D4 my (int)4 en (int)0
off E0 my (int)2 en (int)0
off E4 my (int)4 en (int)0
off E8 my (int)0
off F0 my (int)0 en (int)1
off F4 my (int)0 en (int)4
off 100 my (int)2 en (int)0
}

cmp [rdi+70],(int)2
jne PalStats

mov [seeSomeStats],rdi

cmp [Hunger],1
jne bkpHunger

movss xmm0,[setHunger]

PalStats:
cmp [rdi+70],(int)2
je bkpHunger


mov [seeSomePalStats],rdi


bkpHunger:
  readmem(HungerOnDecreaseOrEatForStatsZaa,8)

//code:
  //movss [rdi+00000300],xmm0
  jmp return

align 10

setHunger:
dd (float)10000

seeSomePalStats:
dq 0

seeSomeStats:
dq 0

HungerOnDecreaseOrEatForStatsZaa:
  jmp newmem
  nop 3
return:
registersymbol(HungerOnDecreaseOrEatForStatsZaa)
registersymbol(bkpHunger)

[DISABLE]

HungerOnDecreaseOrEatForStatsZaa:
readmem(originalbytesA,9)
  //db F3 0F 11 87 00 03 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+29D15D6

Palworld-Win64-Shipping.exe+29D15AB: 0F 2F FE                 - comiss xmm7,xmm6
Palworld-Win64-Shipping.exe+29D15AE: 73 05                    - jae Palworld-Win64-Shipping.exe+29D15B5
Palworld-Win64-Shipping.exe+29D15B0: 0F 57 C0                 - xorps xmm0,xmm0
Palworld-Win64-Shipping.exe+29D15B3: EB 0C                    - jmp Palworld-Win64-Shipping.exe+29D15C1
Palworld-Win64-Shipping.exe+29D15B5: F3 0F 10 87 DC 03 00 00  - movss xmm0,[rdi+000003DC]
Palworld-Win64-Shipping.exe+29D15BD: F3 0F 5D C7              - minss xmm0,xmm7
Palworld-Win64-Shipping.exe+29D15C1: F3 0F 10 8F 00 03 00 00  - movss xmm1,[rdi+00000300]
Palworld-Win64-Shipping.exe+29D15C9: 0F 2E C8                 - ucomiss xmm1,xmm0
Palworld-Win64-Shipping.exe+29D15CC: 0F 84 4D 01 00 00        - je Palworld-Win64-Shipping.exe+29D171F
Palworld-Win64-Shipping.exe+29D15D2: 48 8D 4F 78              - lea rcx,[rdi+78]
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+29D15D6: F3 0F 11 87 00 03 00 00  - movss [rdi+00000300],xmm0
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+29D15DE: 48 8D 54 24 60           - lea rdx,[rsp+60]
Palworld-Win64-Shipping.exe+29D15E3: F3 0F 11 44 24 60        - movss [rsp+60],xmm0
Palworld-Win64-Shipping.exe+29D15E9: F3 0F 11 4C 24 64        - movss [rsp+64],xmm1
Palworld-Win64-Shipping.exe+29D15EF: E8 9C 42 1A FE           - call Palworld-Win64-Shipping.exe+B75890
Palworld-Win64-Shipping.exe+29D15F4: 48 8B CF                 - mov rcx,rdi
Palworld-Win64-Shipping.exe+29D15F7: E8 D4 C5 14 00           - call Palworld-Win64-Shipping.exe+2B1DBD0
Palworld-Win64-Shipping.exe+29D15FC: F3 0F 10 97 00 03 00 00  - movss xmm2,[rdi+00000300]
Palworld-Win64-Shipping.exe+29D1604: 0F 28 CA                 - movaps xmm1,xmm2
Palworld-Win64-Shipping.exe+29D1607: F3 0F 5E 8F DC 03 00 00  - divss xmm1,[rdi+000003DC]
Palworld-Win64-Shipping.exe+29D160F: 66 0F 6E 80 F8 02 00 00  - movd xmm0,[rax+000002F8]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>19321</ID>
              <Description>"Infinite Hunger"</Description>
              <Color>008800</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

Hunger:
dd 1
 
 
[DISABLE]

Hunger:
dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>19311</ID>
              <Description>"Stat Points"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>3E4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19312</ID>
              <Description>"Hp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>2E8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19313</ID>
              <Description>"Max Hp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>358</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19314</ID>
              <Description>"Hunger"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>Float</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>300</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88129</ID>
              <Description>"Max Hunger"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>Float</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>3DC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88128</ID>
              <Description>"Hunger Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>Float</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>3E0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19315</ID>
              <Description>"Stamina"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>390</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19316</ID>
              <Description>"Work Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>364</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88169</ID>
              <Description>"Used Pal Hp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomePalStats</Address>
              <Offsets>
                <Offset>2E8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88170</ID>
              <Description>"Used Pal Max Hp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomePalStats</Address>
              <Offsets>
                <Offset>358</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88171</ID>
              <Description>"Used Pal Hunger"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeSomePalStats</Address>
              <Offsets>
                <Offset>300</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88172</ID>
              <Description>"Used Pal Max Hunger"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeSomePalStats</Address>
              <Offsets>
                <Offset>3DC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88173</ID>
              <Description>"Used Pal Hunger Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeSomePalStats</Address>
              <Offsets>
                <Offset>3E0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88174</ID>
              <Description>"Used Pal Stamina"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomePalStats</Address>
              <Offsets>
                <Offset>390</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88176</ID>
              <Description>"Rank"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomePalStats</Address>
              <Offsets>
                <Offset>294</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88177</ID>
              <Description>"Sanity"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeSomePalStats</Address>
              <Offsets>
                <Offset>39C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88178</ID>
              <Description>"Melee Damage"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomePalStats</Address>
              <Offsets>
                <Offset>2F4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88179</ID>
              <Description>"Range Damage"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomePalStats</Address>
              <Offsets>
                <Offset>2F8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88180</ID>
              <Description>"Defence"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomePalStats</Address>
              <Offsets>
                <Offset>2FC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88175</ID>
              <Description>"Used Pal Work Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomePalStats</Address>
              <Offsets>
                <Offset>364</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88151</ID>
          <Description>"Technology Points"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(TechPointsA,$process,8B 88 40 01 00 00 89 8D) // should be unique
alloc(newmem,$1000,TechPointsA)

alloc(originalbytesAh,9)
registersymbol(originalbytesAh)

originalbytesAh:
readmem(TechPointsA,9)

label(code)
label(return)

label(seeTechpoints)
registersymbol(seeTechpoints)


newmem:

  mov [seeTechpoints],rax

code:
  mov ecx,[rax+00000140]
  jmp return

  seeTechpoints:
  dq 0

TechPointsA:
  jmp newmem
  nop
return:
registersymbol(TechPointsA)

[DISABLE]

TechPointsA:
readmem(originalbytesAh,9)
  //db 8B 88 40 01 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF6284EEC4E

7FF6284EEC18: 49 8B 8E B0 00 00 00  - mov rcx,[r14+000000B0]
7FF6284EEC1F: E8 8C 5F 03 00        - call 7FF628524BB0
7FF6284EEC24: 49 8B 8E B8 00 00 00  - mov rcx,[r14+000000B8]
7FF6284EEC2B: 48 8B D5              - mov rdx,rbp
7FF6284EEC2E: E8 5D 5E 03 00        - call 7FF628524A90
7FF6284EEC33: 49 8B 8E C0 00 00 00  - mov rcx,[r14+000000C0]
7FF6284EEC3A: 48 8B D5              - mov rdx,rbp
7FF6284EEC3D: E8 0E 5F 03 00        - call 7FF628524B50
7FF6284EEC42: 49 8B 86 D0 00 00 00  - mov rax,[r14+000000D0]
7FF6284EEC49: 48 8D 54 24 20        - lea rdx,[rsp+20]
// ---------- INJECTING HERE ----------
7FF6284EEC4E: 8B 88 40 01 00 00     - mov ecx,[rax+00000140]
// ---------- DONE INJECTING  ----------
7FF6284EEC54: 89 8D C8 01 00 00     - mov [rbp+000001C8],ecx
7FF6284EEC5A: 49 8B 86 D0 00 00 00  - mov rax,[r14+000000D0]
7FF6284EEC61: 8B 88 44 01 00 00     - mov ecx,[rax+00000144]
7FF6284EEC67: 89 8D CC 01 00 00     - mov [rbp+000001CC],ecx
7FF6284EEC6D: 49 8B 8E D0 00 00 00  - mov rcx,[r14+000000D0]
7FF6284EEC74: E8 C7 9D 06 00        - call 7FF628558A40
7FF6284EEC79: 48 8B 7C 24 20        - mov rdi,[rsp+20]
7FF6284EEC7E: 48 63 44 24 28        - movsxd  rax,dword ptr [rsp+28]
7FF6284EEC83: 4C 8D 3C C7           - lea r15,[rdi+rax*8]
7FF6284EEC87: 49 3B FF              - cmp rdi,r15
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>26</ID>
              <Description>"Current Tech Points"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeTechpoints</Address>
              <Offsets>
                <Offset>140</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88150</ID>
          <Description>"Infinite Ancient Technology Points"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AncientTechPointsOnTechMenuA,$process,8B 81 44 01 00 00 41 89 00) // should be unique
alloc(newmem,$1000,AncientTechPointsOnTechMenuA)

alloc(originalbytesAg,9)
registersymbol(originalbytesAg)

originalbytesAg:
readmem(AncientTechPointsOnTechMenuA,9)

label(code)
label(return)

newmem:

  mov dword ptr [rcx+00000144],(int)999

code:
  mov eax,[rcx+00000144]
  jmp return

AncientTechPointsOnTechMenuA:
  jmp newmem
  nop
return:
registersymbol(AncientTechPointsOnTechMenuA)

[DISABLE]

AncientTechPointsOnTechMenuA:
readmem(originalbytesAg,9)
  //db 8B 81 44 01 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF628251B95

7FF628251B7C: CC                 - int 3 
7FF628251B7D: CC                 - int 3 
7FF628251B7E: CC                 - int 3 
7FF628251B7F: CC                 - int 3 
7FF628251B80: 48 8B 42 20        - mov rax,[rdx+20]
7FF628251B84: 45 33 C9           - xor r9d,r9d
7FF628251B87: 48 85 C0           - test rax,rax
7FF628251B8A: 41 0F 95 C1        - setne r9b
7FF628251B8E: 4C 03 C8           - add r9,rax
7FF628251B91: 4C 89 4A 20        - mov [rdx+20],r9
// ---------- INJECTING HERE ----------
7FF628251B95: 8B 81 44 01 00 00  - mov eax,[rcx+00000144]
// ---------- DONE INJECTING  ----------
7FF628251B9B: 41 89 00           - mov [r8],eax
7FF628251B9E: C3                 - ret 
7FF628251B9F: CC                 - int 3 
7FF628251BA0: 48 89 5C 24 08     - mov [rsp+08],rbx
7FF628251BA5: 48 89 6C 24 18     - mov [rsp+18],rbp
7FF628251BAA: 48 89 74 24 20     - mov [rsp+20],rsi
7FF628251BAF: 57                 - push rdi
7FF628251BB0: 48 83 EC 20        - sub rsp,20
7FF628251BB4: 33 FF              - xor edi,edi
7FF628251BB6: 48 8B E9           - mov rbp,rcx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>90390</ID>
          <Description>"Stat Grades"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-01
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(StatGradesOnStsPtsUseAa,$process,44 89 7A 08 E9 6? FF FF FF) // should be unique
alloc(newmem,$1000,StatGradesOnStsPtsUseAa)

alloc(originalbytesCa,9)
registersymbol(originalbytesCa)

originalbytesCa:
readmem(StatGradesOnStsPtsUseAa,9)

//label(code)
label(return)

label(seeStatGrade)
registersymbol(seeStatGrade)

label(bkpStsGrades)
registersymbol(bkpStsGrades)

newmem:

mov [seeStatGrade],rdx

bkpStsGrades:
  readmem(StatGradesOnStsPtsUseAa,4)

//code:
  //mov [rdx+08],r15d
  //jmp Palworld-Win64-Shipping.exe+2A04AB3

  jmp return

align 10

  seeStatGrade:
  dq 0

StatGradesOnStsPtsUseAa:
  jmp newmem
  nop 4
return:
registersymbol(StatGradesOnStsPtsUseAa)

[DISABLE]

StatGradesOnStsPtsUseAa:
readmem(originalbytesCa,9)
  //db 44 89 7A 08 E9 6A FF FF FF

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: StatGradesOnStsPtsUseAa

Palworld-Win64-Shipping.exe+2A04B23: 4C 3B F7              - cmp r14,rdi
Palworld-Win64-Shipping.exe+2A04B26: 74 4C                 - je Palworld-Win64-Shipping.exe+2A04B74
Palworld-Win64-Shipping.exe+2A04B28: 48 8B 0B              - mov rcx,[rbx]
Palworld-Win64-Shipping.exe+2A04B2B: 0F 1F 44 00 00        - nop dword ptr [rax+rax+00]
Palworld-Win64-Shipping.exe+2A04B30: 48 3B 08              - cmp rcx,[rax]
Palworld-Win64-Shipping.exe+2A04B33: 74 14                 - je Palworld-Win64-Shipping.exe+2A04B49
Palworld-Win64-Shipping.exe+2A04B35: 48 83 C0 0C           - add rax,0C
Palworld-Win64-Shipping.exe+2A04B39: 48 3B C7              - cmp rax,rdi
Palworld-Win64-Shipping.exe+2A04B3C: 75 F2                 - jne Palworld-Win64-Shipping.exe+2A04B30
Palworld-Win64-Shipping.exe+2A04B3E: EB 34                 - jmp Palworld-Win64-Shipping.exe+2A04B74
// ---------- INJECTING HERE ----------
StatGradesOnStsPtsUseAa: 44 89 7A 08           - mov [rdx+08],r15d
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2A04B44: E9 6A FF FF FF        - jmp Palworld-Win64-Shipping.exe+2A04AB3
Palworld-Win64-Shipping.exe+2A04B49: 8B 53 08              - mov edx,[rbx+08]
Palworld-Win64-Shipping.exe+2A04B4C: 44 8B 40 08           - mov r8d,[rax+08]
Palworld-Win64-Shipping.exe+2A04B50: 41 3B D0              - cmp edx,r8d
Palworld-Win64-Shipping.exe+2A04B53: 74 1F                 - je Palworld-Win64-Shipping.exe+2A04B74
Palworld-Win64-Shipping.exe+2A04B55: 48 89 4C 24 20        - mov [rsp+20],rcx
Palworld-Win64-Shipping.exe+2A04B5A: 48 8D 8D 08 01 00 00  - lea rcx,[rbp+00000108]
Palworld-Win64-Shipping.exe+2A04B61: 89 54 24 2C           - mov [rsp+2C],edx
Palworld-Win64-Shipping.exe+2A04B65: 48 8D 54 24 20        - lea rdx,[rsp+20]
Palworld-Win64-Shipping.exe+2A04B6A: 44 89 44 24 28        - mov [rsp+28],r8d
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>90340</ID>
              <Description>"Current Improved Stat Grade"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeStatGrade</Address>
              <Offsets>
                <Offset>08</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>90338</ID>
          <Description>"Stat Grades [Tab then Upgrade a Stat]"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-29
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(StatGradesOnMenuA,$process,48 3B C1 75 F2 33 C0 C3 8B 4? 08 ?? ?? ?? ?? ?? ?? ?? ?? CC CC CC CC 48 8B C2) // should be unique
alloc(newmem,$1000,StatGradesOnMenuA)

alloc(originalbytesCe,9)
registersymbol(originalbytesCe)

originalbytesCe:
readmem(StatGradesOnMenuA+08,9)

//label(code)
label(return)

label(setSkillGrades)
registersymbol(setSkillGrades)

label(bkpStsGradesV2)
registersymbol(bkpStsGradesV2)

newmem:

push r15
mov r15,setSkillGrades
mov r15d,dword ptr [r15]
mov [rax+08],r15d
pop r15

bkpStsGradesV2:
  readmem(StatGradesOnMenuA+08,3)

//code:
 // mov eax,[rax+08]
  //ret 
  //int 3 
  jmp return

align 10

  setSkillGrades:
  dd (int)1000

StatGradesOnMenuA+08:
  jmp newmem
return:
registersymbol(StatGradesOnMenuA)

[DISABLE]

StatGradesOnMenuA+08:
readmem(originalbytesCe,9)
  //db 8B 40 08 C3 CC

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+29D2FD1

Palworld-Win64-Shipping.exe+29D2FB6: 48 3B C1        - cmp rax,rcx
Palworld-Win64-Shipping.exe+29D2FB9: 74 13           - je Palworld-Win64-Shipping.exe+29D2FCE
Palworld-Win64-Shipping.exe+29D2FBB: 0F 1F 44 00 00  - nop dword ptr [rax+rax+00]
Palworld-Win64-Shipping.exe+29D2FC0: 48 39 10        - cmp [rax],rdx
Palworld-Win64-Shipping.exe+29D2FC3: 74 0C           - je Palworld-Win64-Shipping.exe+29D2FD1
Palworld-Win64-Shipping.exe+29D2FC5: 48 83 C0 0C     - add rax,0C
Palworld-Win64-Shipping.exe+29D2FC9: 48 3B C1        - cmp rax,rcx
Palworld-Win64-Shipping.exe+29D2FCC: 75 F2           - jne Palworld-Win64-Shipping.exe+29D2FC0
Palworld-Win64-Shipping.exe+29D2FCE: 33 C0           - xor eax,eax
Palworld-Win64-Shipping.exe+29D2FD0: C3              - ret 
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+29D2FD1: 8B 40 08        - mov eax,[rax+08]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+29D2FD4: C3              - ret 
Palworld-Win64-Shipping.exe+29D2FD5: CC              - int 3 
Palworld-Win64-Shipping.exe+29D2FD6: CC              - int 3 
Palworld-Win64-Shipping.exe+29D2FD7: CC              - int 3 
Palworld-Win64-Shipping.exe+29D2FD8: CC              - int 3 
Palworld-Win64-Shipping.exe+29D2FD9: CC              - int 3 
Palworld-Win64-Shipping.exe+29D2FDA: CC              - int 3 
Palworld-Win64-Shipping.exe+29D2FDB: CC              - int 3 
Palworld-Win64-Shipping.exe+29D2FDC: CC              - int 3 
Palworld-Win64-Shipping.exe+29D2FDD: CC              - int 3 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>90388</ID>
              <Description>"set Stats Grade to"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>setSkillGrades</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88155</ID>
          <Description>"Instant Build / Craft"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(BuildSpeedA,$process,F3 0F 10 ?9 40 03 00 00 0F) // should be unique
                                   //F3 0F 10 99 40 03 00 00
alloc(newmem,$1000,BuildSpeedA)

alloc(originalbytesAj,9)
registersymbol(originalbytesAj)

originalbytesAj:
readmem(BuildSpeedA,9)

label(code)
label(return)

newmem:

code:
{
  push rbx
  mov rbx, rcx
  mov [rbx+00000340], (float)1
  movss xmm1,[rcx+00000340]
  pop rbx
}

  push rbx
  mov rbx, rcx
  mov [rcx+00000340], (float)1
  movss xmm3,[rcx+00000340]
  pop rbx
  jmp return

BuildSpeedA:
  jmp newmem
  nop 3
return:
registersymbol(BuildSpeedA)

[DISABLE]

BuildSpeedA:
readmem(originalbytesAj,9)
  //db F3 0F 10 89 40 03 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF6285D6B00

7FF6285D6AE8: 5F                       - pop rdi
7FF6285D6AE9: E9 B2 77 E5 FF           - jmp 7FF62842E2A0
7FF6285D6AEE: F3 0F 10 05 72 95 27 03  - movss xmm0,[7FF62B850068]
7FF6285D6AF6: 48 83 C4 20              - add rsp,20
7FF6285D6AFA: 5F                       - pop rdi
7FF6285D6AFB: C3                       - ret 
7FF6285D6AFC: CC                       - int 3 
7FF6285D6AFD: CC                       - int 3 
7FF6285D6AFE: CC                       - int 3 
7FF6285D6AFF: CC                       - int 3 
// ---------- INJECTING HERE ----------
7FF6285D6B00: F3 0F 10 89 40 03 00 00  - movss xmm1,[rcx+00000340]
// ---------- DONE INJECTING  ----------
7FF6285D6B08: 0F 28 C1                 - movaps xmm0,xmm1
7FF6285D6B0B: 0F 54 05 9E 8B 29 03     - andps xmm0,[7FF62B86F6B0]
7FF6285D6B12: 0F 2F 05 9F 87 29 03     - comiss xmm0,[7FF62B86F2B8]
7FF6285D6B19: 77 04                    - ja 7FF6285D6B1F
7FF6285D6B1B: 0F 57 C0                 - xorps xmm0,xmm0
7FF6285D6B1E: C3                       - ret 
7FF6285D6B1F: 80 B9 BC 01 00 00 01     - cmp byte ptr [rcx+000001BC],01
7FF6285D6B26: 75 33                    - jne 7FF6285D6B5B
7FF6285D6B28: F3 0F 10 99 48 03 00 00  - movss xmm3,[rcx+00000348]
7FF6285D6B30: 0F 57 C0                 - xorps xmm0,xmm0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>88157</ID>
          <Description>"No Decay"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(DecayA,$process,F3 0F 58 ?? ?? ?? 00 00 0F 2F ?? 73 05 0F 28 C7 EB 05 F3 41 0F 5D C0 48 8B CB) // should be unique
alloc(newmem,$1000,DecayA)

DecayA+0B:
  nop 2
registersymbol(DecayA)

[DISABLE]

DecayA+0B:
  db 73 05
unregistersymbol(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF62846EF78

7FF62846EF45: E8 96 75 0E 00           - call 7FF6285564E0
7FF62846EF4A: 48 85 C0                 - test rax,rax
7FF62846EF4D: 0F 84 A5 00 00 00        - je 7FF62846EFF8
7FF62846EF53: F3 0F 10 80 2C 01 00 00  - movss xmm0,[rax+0000012C]
7FF62846EF5B: 0F 2F C7                 - comiss xmm0,xmm7
7FF62846EF5E: 0F 86 94 00 00 00        - jbe 7FF62846EFF8
7FF62846EF64: F3 41 0F 59 C3           - mulss xmm0,xmm11
7FF62846EF69: F3 0F 59 C6              - mulss xmm0,xmm6
7FF62846EF6D: F3 0F 58 83 08 01 00 00  - addss xmm0,[rbx+00000108]
7FF62846EF75: 0F 2F C7                 - comiss xmm0,xmm7
// ---------- INJECTING HERE ----------
7FF62846EF78: 73 05                    - jae 7FF62846EF7F
// ---------- DONE INJECTING  ----------
7FF62846EF7A: 0F 28 C7                 - movaps xmm0,xmm7
7FF62846EF7D: EB 05                    - jmp 7FF62846EF84
7FF62846EF7F: F3 41 0F 5D C0           - minss xmm0,xmm8
7FF62846EF84: 48 8B CB                 - mov rcx,rbx
7FF62846EF87: F3 0F 11 83 08 01 00 00  - movss [rbx+00000108],xmm0
7FF62846EF8F: E8 AC F1 FF FF           - call 7FF62846E140
7FF62846EF94: 48 8D 4B 68              - lea rcx,[rbx+68]
7FF62846EF98: 48 89 9C 24 C0 00 00 00  - mov [rsp+000000C0],rbx
7FF62846EFA0: 48 8D 94 24 C0 00 00 00  - lea rdx,[rsp+000000C0]
7FF62846EFA8: E8 63 69 16 FE           - call 7FF6265D5910
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>109426</ID>
          <Description>"Captured Pal Quantity on Paldeck [Open Paldeck, you need Capture One ]"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-12
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CapturedPalsQuantityOnDexA,$process,A8 8B 00 48 8B 5C 24 30) // should be unique
alloc(newmem,$1000,CapturedPalsQuantityOnDexA)

label(code)
label(return)

label(setCapturedPalDex)
registersymbol(setCapturedPalDex)

newmem:

push r15
mov r15,setCapturedPalDex
mov r15d,dword ptr [r15]
mov [rax],r15d
pop r15

code:
  mov eax,[rax]
  mov rbx,[rsp+30]
  jmp return

  setCapturedPalDex:
  dd (int)10

CapturedPalsQuantityOnDexA+01:
  jmp newmem
  nop 2
return:
registersymbol(CapturedPalsQuantityOnDexA)

[DISABLE]

CapturedPalsQuantityOnDexA+01:
  db 8B 00 48 8B 5C 24 30

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2AC2466

Palworld-Win64-Shipping.exe+2AC244B: 48 83 C4 20     - add rsp,20
Palworld-Win64-Shipping.exe+2AC244F: 5F              - pop rdi
Palworld-Win64-Shipping.exe+2AC2450: C3              - ret 
Palworld-Win64-Shipping.exe+2AC2451: 48 8B C2        - mov rax,rdx
Palworld-Win64-Shipping.exe+2AC2454: 33 D2           - xor edx,edx
Palworld-Win64-Shipping.exe+2AC2456: 48 03 C1        - add rax,rcx
Palworld-Win64-Shipping.exe+2AC2459: 48 8D 40 08     - lea rax,[rax+08]
Palworld-Win64-Shipping.exe+2AC245D: 48 0F 44 C2     - cmove rax,rdx
Palworld-Win64-Shipping.exe+2AC2461: 48 85 C0        - test rax,rax
Palworld-Win64-Shipping.exe+2AC2464: 74 A8           - je Palworld-Win64-Shipping.exe+2AC240E
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2AC2466: 8B 00           - mov eax,[rax]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2AC2468: 48 8B 5C 24 30  - mov rbx,[rsp+30]
Palworld-Win64-Shipping.exe+2AC246D: 48 8B 74 24 40  - mov rsi,[rsp+40]
Palworld-Win64-Shipping.exe+2AC2472: 48 83 C4 20     - add rsp,20
Palworld-Win64-Shipping.exe+2AC2476: 5F              - pop rdi
Palworld-Win64-Shipping.exe+2AC2477: C3              - ret 
Palworld-Win64-Shipping.exe+2AC2478: 8B 40 14        - mov eax,[rax+14]
Palworld-Win64-Shipping.exe+2AC247B: 48 8B 5C 24 30  - mov rbx,[rsp+30]
Palworld-Win64-Shipping.exe+2AC2480: 48 8B 74 24 40  - mov rsi,[rsp+40]
Palworld-Win64-Shipping.exe+2AC2485: 48 83 C4 20     - add rsp,20
Palworld-Win64-Shipping.exe+2AC2489: 5F              - pop rdi
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>109428</ID>
              <Description>"set Captured Pal Quantity"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>setCapturedPalDex</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>109427</ID>
          <Description>"see Captured Pal Quantity when Capture"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-12
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CapturedPalsQuantityOnCaptureAa,$process,89 30 48 8B 44 24 50 48 89 44 24 20) // should be unique
alloc(newmem,$1000,CapturedPalsQuantityOnCaptureAa)

label(code)
label(return)

label(seeCapturedPalDex)
registersymbol(seeCapturedPalDex)

newmem:

mov [seeCapturedPalDex],rax

code:
  mov [rax],esi
  mov rax,[rsp+50]
  jmp return

  seeCapturedPalDex:
  dq 0

CapturedPalsQuantityOnCaptureAa:
  jmp newmem
  nop 2
return:
registersymbol(CapturedPalsQuantityOnCaptureAa)

[DISABLE]

CapturedPalsQuantityOnCaptureAa:
  db 89 30 48 8B 44 24 50

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2AD8312

Palworld-Win64-Shipping.exe+2AD82E3: 8B C8                 - mov ecx,eax
Palworld-Win64-Shipping.exe+2AD82E5: 48 C1 EB 20           - shr rbx,20
Palworld-Win64-Shipping.exe+2AD82E9: E8 F2 44 20 00        - call Palworld-Win64-Shipping.exe+2CDC7E0
Palworld-Win64-Shipping.exe+2AD82EE: 48 8D 8F 28 01 00 00  - lea rcx,[rdi+00000128]
Palworld-Win64-Shipping.exe+2AD82F5: 4C 8D 44 24 50        - lea r8,[rsp+50]
Palworld-Win64-Shipping.exe+2AD82FA: 8D 14 03              - lea edx,[rbx+rax]
Palworld-Win64-Shipping.exe+2AD82FD: E8 3E 33 F7 FF        - call Palworld-Win64-Shipping.exe+2A4B640
Palworld-Win64-Shipping.exe+2AD8302: 48 8D 8F 08 01 00 00  - lea rcx,[rdi+00000108]
Palworld-Win64-Shipping.exe+2AD8309: 89 74 24 28           - mov [rsp+28],esi
Palworld-Win64-Shipping.exe+2AD830D: 48 8D 54 24 20        - lea rdx,[rsp+20]
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2AD8312: 89 30                 - mov [rax],esi
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2AD8314: 48 8B 44 24 50        - mov rax,[rsp+50]
Palworld-Win64-Shipping.exe+2AD8319: 48 89 44 24 20        - mov [rsp+20],rax
Palworld-Win64-Shipping.exe+2AD831E: E8 CD E1 09 FE        - call Palworld-Win64-Shipping.exe+B764F0
Palworld-Win64-Shipping.exe+2AD8323: 48 8B 5C 24 40        - mov rbx,[rsp+40]
Palworld-Win64-Shipping.exe+2AD8328: 48 8B 74 24 48        - mov rsi,[rsp+48]
Palworld-Win64-Shipping.exe+2AD832D: 48 8B 7C 24 58        - mov rdi,[rsp+58]
Palworld-Win64-Shipping.exe+2AD8332: 48 83 C4 30           - add rsp,30
Palworld-Win64-Shipping.exe+2AD8336: 41 5E                 - pop r14
Palworld-Win64-Shipping.exe+2AD8338: C3                    - ret 
Palworld-Win64-Shipping.exe+2AD8339: 89 70 14              - mov [rax+14],esi
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>109429</ID>
              <Description>"Current Captured Pal Quantity"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeCapturedPalDex</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88152</ID>
          <Description>"100% Capture Rate"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CaptureRateA,$process,F3 0F 10 40 6C 48 83 C4 28) // should be unique
alloc(newmem,$1000,CaptureRateA)

alloc(originalbytesAi,9)
registersymbol(originalbytesAi)

originalbytesAi:
readmem(CaptureRateA,9)

label(code)
label(return)

registersymbol(setCaptureRate)

newmem:

code:
  movss xmm0,[rax+6C]
  mulss xmm0,[setCaptureRate]
  jmp return

  setCaptureRate:
  dd (float)20000001

CaptureRateA:
  jmp newmem
return:
registersymbol(CaptureRateA)

[DISABLE]

CaptureRateA:
readmem(originalbytesAi,9)
  //db F3 0F 10 40 6C

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF6283F932B

7FF6283F930D: CC                       - int 3 
7FF6283F930E: CC                       - int 3 
7FF6283F930F: CC                       - int 3 
7FF6283F9310: 48 83 EC 28              - sub rsp,28
7FF6283F9314: E8 A7 E6 FF FF           - call 7FF6283F79C0
7FF6283F9319: 48 85 C0                 - test rax,rax
7FF6283F931C: 75 0D                    - jne 7FF6283F932B
7FF6283F931E: F3 0F 10 05 42 6D 45 03  - movss xmm0,[7FF62B850068]
7FF6283F9326: 48 83 C4 28              - add rsp,28
7FF6283F932A: C3                       - ret 
// ---------- INJECTING HERE ----------
7FF6283F932B: F3 0F 10 40 6C           - movss xmm0,[rax+6C]
// ---------- DONE INJECTING  ----------
7FF6283F9330: 48 83 C4 28              - add rsp,28
7FF6283F9334: C3                       - ret 
7FF6283F9335: CC                       - int 3 
7FF6283F9336: CC                       - int 3 
7FF6283F9337: CC                       - int 3 
7FF6283F9338: CC                       - int 3 
7FF6283F9339: CC                       - int 3 
7FF6283F933A: CC                       - int 3 
7FF6283F933B: CC                       - int 3 
7FF6283F933C: CC                       - int 3 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>88153</ID>
              <Description>"set Capture Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808000</Color>
              <VariableType>Float</VariableType>
              <Address>setCaptureRate</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88163</ID>
          <Description>"Rare Pals"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RarePalsAa,$process,80 7C 24 40 00 0F 84 7C 00) // should be unique
alloc(newmem,$1000,RarePalsAa)

alloc(originalbytesAn,9)
registersymbol(originalbytesAn)

originalbytesAn:
readmem(RarePalsAa,9)

label(code)
label(return)

newmem:

  mov byte ptr [r15+50],1

code:
  cmp byte ptr [rsp+40],02
  jmp return

RarePalsAa:
  jmp newmem
return:
registersymbol(RarePalsAa)

[DISABLE]

RarePalsAa:
readmem(originalbytesAn,9)
  //db 80 7C 24 40 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF628592E3F

7FF628592E19: 48 89 44 24 78        - mov [rsp+78],rax
7FF628592E1E: 48 85 C0              - test rax,rax
7FF628592E21: 75 1C                 - jne 7FF628592E3F
7FF628592E23: 48 8B 85 88 02 00 00  - mov rax,[rbp+00000288]
7FF628592E2A: 48 8B 08              - mov rcx,[rax]
7FF628592E2D: 48 85 C9              - test rcx,rcx
7FF628592E30: 74 05                 - je 7FF628592E37
7FF628592E32: E8 E9 A0 0B 00        - call 7FF62864CF20
7FF628592E37: 48 8B 0E              - mov rcx,[rsi]
7FF628592E3A: E9 AC 04 00 00        - jmp 7FF6285932EB
// ---------- INJECTING HERE ----------
7FF628592E3F: 80 7C 24 40 00        - cmp byte ptr [rsp+40],00
// ---------- DONE INJECTING  ----------
7FF628592E44: 0F 84 7C 00 00 00     - je 7FF628592EC6
7FF628592E4A: 48 8D 54 24 50        - lea rdx,[rsp+50]
7FF628592E4F: 48 8B C8              - mov rcx,rax
7FF628592E52: 40 32 F6              - xor sil,sil
7FF628592E55: E8 46 49 F6 FF        - call 7FF6284F77A0
7FF628592E5A: 48 8B 0B              - mov rcx,[rbx]
7FF628592E5D: 4C 63 43 08           - movsxd  r8,dword ptr [rbx+08]
7FF628592E61: 48 8B 44 24 50        - mov rax,[rsp+50]
7FF628592E66: 4D 8B F0              - mov r14,r8
7FF628592E69: 4A 8D 14 C1           - lea rdx,[rcx+r8*8]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>88162</ID>
          <Description>"Always 4 Pal Passives"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PalsRollPassivesAa,$process,2B ?? ?? 3B ?? 0F 4C D0 85 D2 7E 77) // should be unique
alloc(newmem,$1000,PalsRollPassivesAa)

PalsRollPassivesAa+05:
  nop 3
registersymbol(PalsRollPassivesAa)

[DISABLE]
PalsRollPassivesAa+05:
  db 0F 4C D0
unregistersymbol(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF62859302A

7FF628593001: 48 8D 05 E8 82 D7 FF  - lea rax,[7FF62830B2F0]
7FF628593008: 4C 89 75 B8           - mov [rbp-48],r14
7FF62859300C: 48 89 45 90           - mov [rbp-70],rax
7FF628593010: 89 75 C0              - mov [rbp-40],esi
7FF628593013: E8 68 D7 D6 FF        - call 7FF628300780
7FF628593018: 85 C0                 - test eax,eax
7FF62859301A: 0F 88 88 00 00 00     - js 7FF6285930A8
7FF628593020: BA 04 00 00 00        - mov edx,00000004
7FF628593025: 2B 53 08              - sub edx,[rbx+08]
7FF628593028: 3B C2                 - cmp eax,edx
// ---------- INJECTING HERE ----------
7FF62859302A: 0F 4C D0              - cmovl edx,eax
// ---------- DONE INJECTING  ----------
7FF62859302D: 85 D2                 - test edx,edx
7FF62859302F: 7E 77                 - jle 7FF6285930A8
7FF628593031: 48 8B 4C 24 78        - mov rcx,[rsp+78]
7FF628593036: 4C 8D 44 24 48        - lea r8,[rsp+48]
7FF62859303B: 89 54 24 20           - mov [rsp+20],edx
7FF62859303F: 4C 8B CB              - mov r9,rbx
7FF628593042: 48 8D 54 24 50        - lea rdx,[rsp+50]
7FF628593047: E8 94 E8 F7 FF        - call 7FF6285118E0
7FF62859304C: 4C 8B F0              - mov r14,rax
7FF62859304F: 48 63 70 08           - movsxd  rsi,dword ptr [rax+08]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>88161</ID>
          <Description>"Always Max Att/Def for Pals"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PalsRollAa,$process,49 8B CC 33 DB E8 ?? ?? E6 FF 84 C0) // should be unique
alloc(newmem,$1000,PalsRollAa)

alloc(originalbytesAm,9)
registersymbol(originalbytesAm)

originalbytesAm:
readmem(PalsRollAa,9)

label(code)
label(return)

newmem:

code:
  mov rcx,r12
  mov ebx,(int)100
  jmp return

PalsRollAa:
  jmp newmem
return:
registersymbol(PalsRollAa)

[DISABLE]

PalsRollAa:
readmem(originalbytesAm,9)
  //db 49 8B CC 33 DB

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF628593163

7FF628593139: 4C 8B 44 24 48        - mov r8,[rsp+48]
7FF62859313E: 48 8D 54 24 78        - lea rdx,[rsp+78]
7FF628593143: 4C 8B CF              - mov r9,rdi
7FF628593146: E8 C5 0A F6 FF        - call 7FF6284F3C10
7FF62859314B: 48 8B 10              - mov rdx,[rax]
7FF62859314E: 48 89 54 24 48        - mov [rsp+48],rdx
7FF628593153: EB 05                 - jmp 7FF62859315A
7FF628593155: 48 8B 54 24 48        - mov rdx,[rsp+48]
7FF62859315A: 45 84 F6              - test r14b,r14b
7FF62859315D: 0F 85 54 01 00 00     - jne 7FF6285932B7
// ---------- INJECTING HERE ----------
7FF628593163: 49 8B CC              - mov rcx,r12
// ---------- DONE INJECTING  ----------
7FF628593166: 33 DB                 - xor ebx,ebx
7FF628593168: E8 A3 89 E6 FF        - call 7FF6283FBB10
7FF62859316D: 84 C0                 - test al,al
7FF62859316F: 74 41                 - je 7FF6285931B2
7FF628593171: 49 8B CD              - mov rcx,r13
7FF628593174: E8 C7 85 E6 FF        - call 7FF6283FB740
7FF628593179: 48 85 C0              - test rax,rax
7FF62859317C: 74 0C                 - je 7FF62859318A
7FF62859317E: 48 8B 80 C8 03 00 00  - mov rax,[rax+000003C8]
7FF628593185: 48 85 C0              - test rax,rax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>88164</ID>
          <Description>"Big Rare Pals"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(BigRarePalsAa,$process,0F 2F F0 0F 28 B4 24 00 03 00 00) // should be unique
alloc(newmem,$1000,BigRarePalsAa)

alloc(originalbytesAo,9)
registersymbol(originalbytesAo)

originalbytesAo:
readmem(BigRarePalsAa,9)

label(code)
label(return)

newmem:

  movss xmm0,xmm6

code:
  comiss xmm6,xmm0
  movaps xmm6,[rsp+00000300]
  jmp return

BigRarePalsAa:
  jmp newmem
  nop 6
return:
registersymbol(BigRarePalsAa)

[DISABLE]

BigRarePalsAa:
readmem(originalbytesAo,9)
  //db 0F 2F F0 0F 28 B4 24 00 03 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF628592C21

7FF628592BEE: 49 8B CD                 - mov rcx,r13
7FF628592BF1: 0F 29 B4 24 00 03 00 00  - movaps [rsp+00000300],xmm6
7FF628592BF9: E8 B2 F0 FF FF           - call 7FF628591CB0
7FF628592BFE: F3 0F 10 70 54           - movss xmm6,[rax+54]
7FF628592C03: F3 0F 59 35 51 D4 2B 03  - mulss xmm6,[7FF62B85005C]
7FF628592C0B: FF 15 AF E2 28 03        - call qword ptr [7FF62B820EC0]
7FF628592C11: 25 FF 7F 00 00           - and eax,00007FFF
7FF628592C16: 66 0F 6E C0              - movd xmm0,eax
7FF628592C1A: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
7FF628592C1D: F3 0F 59 C7              - mulss xmm0,xmm7
// ---------- INJECTING HERE ----------
7FF628592C21: 0F 2F F0                 - comiss xmm6,xmm0
// ---------- DONE INJECTING  ----------
7FF628592C24: 0F 28 B4 24 00 03 00 00  - movaps xmm6,[rsp+00000300]
7FF628592C2C: 0F 82 D0 00 00 00        - jb 7FF628592D02
7FF628592C32: 4C 8B 85 58 02 00 00     - mov r8,[rbp+00000258]
7FF628592C39: 48 8D 54 24 78           - lea rdx,[rsp+78]
7FF628592C3E: 49 8B CC                 - mov rcx,r12
7FF628592C41: E8 6A 4B E6 FF           - call 7FF6283F77B0
7FF628592C46: 48 8B 18                 - mov rbx,[rax]
7FF628592C49: 85 DB                    - test ebx,ebx
7FF628592C4B: 0F 85 A5 00 00 00        - jne 7FF628592CF6
7FF628592C51: 48 8B C3                 - mov rax,rbx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>108812</ID>
          <Description>"Pal Skills no Cooldown [for All Pals]"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-03
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PlasSkillsCooldownAa,Palworld-Win64-Shipping.exe,C7 41 5C 00 00 00 00 C6) // should be unique
alloc(newmem,$1000,PlasSkillsCooldownAa)

alloc(originalbytesHf,9)
registersymbol(originalbytesHf)

originalbytesHf:
readmem(PlasSkillsCooldownAa,9)

label(code)
label(return)

newmem:

jmp return

code:
  mov [rcx+5C],00000000
  jmp return

PlasSkillsCooldownAa:
  jmp newmem
  nop 2
return:
registersymbol(PlasSkillsCooldownAa)

[DISABLE]

PlasSkillsCooldownAa:
readmem(originalbytesHf,9)
  //db C7 41 5C 00 00 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2905A43

Palworld-Win64-Shipping.exe+2905A23: 48 8D 14 49           - lea rdx,[rcx+rcx*2]
Palworld-Win64-Shipping.exe+2905A27: 41 39 3C D0           - cmp [r8+rdx*8],edi
Palworld-Win64-Shipping.exe+2905A2B: 74 35                 - je Palworld-Win64-Shipping.exe+2905A62
Palworld-Win64-Shipping.exe+2905A2D: 41 8B 44 D0 10        - mov eax,[r8+rdx*8+10]
Palworld-Win64-Shipping.exe+2905A32: 83 F8 FF              - cmp eax,-01
Palworld-Win64-Shipping.exe+2905A35: 75 E9                 - jne Palworld-Win64-Shipping.exe+2905A20
Palworld-Win64-Shipping.exe+2905A37: 33 C9                 - xor ecx,ecx
Palworld-Win64-Shipping.exe+2905A39: 48 8B 49 08           - mov rcx,[rcx+08]
Palworld-Win64-Shipping.exe+2905A3D: 33 D2                 - xor edx,edx
Palworld-Win64-Shipping.exe+2905A3F: C6 41 61 00           - mov byte ptr [rcx+61],00
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2905A43: C7 41 5C 00 00 00 00  - mov [rcx+5C],00000000
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2905A4A: C6 41 58 01           - mov byte ptr [rcx+58],01
Palworld-Win64-Shipping.exe+2905A4E: 48 83 C1 38           - add rcx,38
Palworld-Win64-Shipping.exe+2905A52: E8 99 FE 26 FE        - call Palworld-Win64-Shipping.exe+B758F0
Palworld-Win64-Shipping.exe+2905A57: 48 8B 5C 24 30        - mov rbx,[rsp+30]
Palworld-Win64-Shipping.exe+2905A5C: 48 83 C4 20           - add rsp,20
Palworld-Win64-Shipping.exe+2905A60: 5F                    - pop rdi
Palworld-Win64-Shipping.exe+2905A61: C3                    - ret 
Palworld-Win64-Shipping.exe+2905A62: 49 8D 0C D0           - lea rcx,[r8+rdx*8]
Palworld-Win64-Shipping.exe+2905A66: EB D1                 - jmp Palworld-Win64-Shipping.exe+2905A39
Palworld-Win64-Shipping.exe+2905A68: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>88158</ID>
          <Description>"Instant Incubation"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(EggTimeAa,$process,F3 0F 58 ?? ?? ?? 00 00 F3 0F 5D ?? EB 08 F3 0F 10 B3) // should be unique
alloc(newmem,$1000,EggTimeAa)

EggTimeAa+08:
  db F3 0F 10
registersymbol(EggTimeAa)

[DISABLE]
EggTimeAa+08:
  db F3 0F 5D
unregistersymbol(*)


{
// ORIGINAL CODE - INJECTION POINT: 7FF6285C69E6

7FF6285C69C0: 48 8B CD                 - mov rcx,rbp
7FF6285C69C3: 48 85 F6                 - test rsi,rsi
7FF6285C69C6: 48 8B 74 24 60           - mov rsi,[rsp+60]
7FF6285C69CB: 48 0F 44 CD              - cmove rcx,rbp
7FF6285C69CF: 48 85 C9                 - test rcx,rcx
7FF6285C69D2: 74 0A                    - je 7FF6285C69DE
7FF6285C69D4: 48 8B 01                 - mov rax,[rcx]
7FF6285C69D7: FF 50 18                 - call qword ptr [rax+18]
7FF6285C69DA: F3 0F 59 F8              - mulss xmm7,xmm0
7FF6285C69DE: F3 0F 58 B3 44 03 00 00  - addss xmm6,[rbx+00000344]
// ---------- INJECTING HERE ----------
7FF6285C69E6: F3 0F 5D F7              - minss xmm6,xmm7
// ---------- DONE INJECTING  ----------
7FF6285C69EA: EB 08                    - jmp 7FF6285C69F4
7FF6285C69EC: F3 0F 10 B3 44 03 00 00  - movss xmm6,[rbx+00000344]
7FF6285C69F4: 0F 28 7C 24 20           - movaps xmm7,[rsp+20]
7FF6285C69F9: F3 0F 11 77 08           - movss [rdi+08],xmm6
7FF6285C69FE: 0F 28 74 24 30           - movaps xmm6,[rsp+30]
7FF6285C6A03: C6 47 0C 01              - mov byte ptr [rdi+0C],01
7FF6285C6A07: 48 8B 6C 24 58           - mov rbp,[rsp+58]
7FF6285C6A0C: 48 8B 7C 24 68           - mov rdi,[rsp+68]
7FF6285C6A11: 48 83 C4 40              - add rsp,40
7FF6285C6A15: 5B                       - pop rbx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>106112</ID>
          <Description>"Incubator Interact Speed "</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-02
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SpeedIncubatorInteractAa,$process,F3 0F 11 83 34 01 00 00 66) // should be unique
alloc(newmem,$1000,SpeedIncubatorInteractAa)

alloc(originalbytesHd,9)
registersymbol(originalbytesHd)

originalbytesHd:
readmem(SpeedIncubatorInteractAa,9)

//label(code)
label(bkpIncubInterSpd)
label(return)

label(addSpeedInteract)
registersymbol(addSpeedInteract)

newmem:

addss xmm0,[addSpeedInteract]

bkpIncubInterSpd:
  readmem(SpeedIncubatorInteractAa,8)

//code:
  //movss [rbx+00000134],xmm0
  jmp return

align 10

  addSpeedInteract:
  dd (float)10

SpeedIncubatorInteractAa:
  jmp newmem
  nop 3
return:
registersymbol(SpeedIncubatorInteractAa)

[DISABLE]

SpeedIncubatorInteractAa:
readmem(originalbytesHd,9)
  //db F3 0F 11 83 34 01 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+28B5FAD

Palworld-Win64-Shipping.exe+28B5F7E: 48 89 45 1F              - mov [rbp+1F],rax
Palworld-Win64-Shipping.exe+28B5F82: 48 89 45 2B              - mov [rbp+2B],rax
Palworld-Win64-Shipping.exe+28B5F86: 48 89 45 17              - mov [rbp+17],rax
Palworld-Win64-Shipping.exe+28B5F8A: 48 89 45 23              - mov [rbp+23],rax
Palworld-Win64-Shipping.exe+28B5F8E: 48 89 45 2F              - mov [rbp+2F],rax
Palworld-Win64-Shipping.exe+28B5F92: 48 89 45 07              - mov [rbp+07],rax
Palworld-Win64-Shipping.exe+28B5F96: 48 89 45 0B              - mov [rbp+0B],rax
Palworld-Win64-Shipping.exe+28B5F9A: 0F 29 7C 24 70           - movaps [rsp+70],xmm7
Palworld-Win64-Shipping.exe+28B5F9F: 0F 10 BB F0 00 00 00     - movups xmm7,[rbx+000000F0]
Palworld-Win64-Shipping.exe+28B5FA6: C7 45 EF 00 00 00 00     - mov [rbp-11],00000000
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+28B5FAD: F3 0F 11 83 34 01 00 00  - movss [rbx+00000134],xmm0
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+28B5FB5: 66 48 0F 7E FE           - movq rsi,xmm7
Palworld-Win64-Shipping.exe+28B5FBA: 66 C7 45 0F 01 00        - mov word ptr [rbp+0F],0001
Palworld-Win64-Shipping.exe+28B5FC0: C6 45 11 01              - mov byte ptr [rbp+11],01
Palworld-Win64-Shipping.exe+28B5FC4: 48 85 F6                 - test rsi,rsi
Palworld-Win64-Shipping.exe+28B5FC7: 66 89 45 13              - mov [rbp+13],ax
Palworld-Win64-Shipping.exe+28B5FCB: 48 0F 45 CF              - cmovne rcx,rdi
Palworld-Win64-Shipping.exe+28B5FCF: 66 C7 45 1B 01 00        - mov word ptr [rbp+1B],0001
Palworld-Win64-Shipping.exe+28B5FD5: C6 45 1D 01              - mov byte ptr [rbp+1D],01
Palworld-Win64-Shipping.exe+28B5FD9: 66 89 45 1F              - mov [rbp+1F],ax
Palworld-Win64-Shipping.exe+28B5FDD: 66 C7 45 27 01 00        - mov word ptr [rbp+27],0001
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>106113</ID>
              <Description>"add more Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808000</Color>
              <VariableType>Float</VariableType>
              <Address>addSpeedInteract</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>90408</ID>
          <Description>"Breeding at Ranch Time "</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-01
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RanchTimeZaa,$process,F3 0F 11 81 40 02 00 00 8B) // should be unique
alloc(newmem,$1000,RanchTimeZaa)

alloc(originalbytesDa,9)
registersymbol(originalbytesDa)

originalbytesDa:
readmem(RanchTimeZaa,9)

label(code)
label(return)

label(addRanchTime)
registersymbol(addRanchTime)

newmem:

addss xmm0,[addRanchTime]

code:
  movss [rcx+00000240],xmm0
  jmp return

  addRanchTime:
  dd (float)11

RanchTimeZaa:
  jmp newmem
  nop 3
return:
registersymbol(RanchTimeZaa)

[DISABLE]

RanchTimeZaa:
readmem(originalbytesDa,9)
  //db F3 0F 11 81 40 02 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2A30562

Palworld-Win64-Shipping.exe+2A30537: F3 0F 10 91 3C 02 00 00  - movss xmm2,[rcx+0000023C]
Palworld-Win64-Shipping.exe+2A3053F: 0F 57 C0                 - xorps xmm0,xmm0
Palworld-Win64-Shipping.exe+2A30542: 48 8B F1                 - mov rsi,rcx
Palworld-Win64-Shipping.exe+2A30545: 0F 2F C8                 - comiss xmm1,xmm0
Palworld-Win64-Shipping.exe+2A30548: 72 07                    - jb Palworld-Win64-Shipping.exe+2A30551
Palworld-Win64-Shipping.exe+2A3054A: 0F 28 C2                 - movaps xmm0,xmm2
Palworld-Win64-Shipping.exe+2A3054D: F3 0F 5D C1              - minss xmm0,xmm1
Palworld-Win64-Shipping.exe+2A30551: 44 8B B9 30 02 00 00     - mov r15d,[rcx+00000230]
Palworld-Win64-Shipping.exe+2A30558: 44 8B A1 38 02 00 00     - mov r12d,[rcx+00000238]
Palworld-Win64-Shipping.exe+2A3055F: 0F 2F C2                 - comiss xmm0,xmm2
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2A30562: F3 0F 11 81 40 02 00 00  - movss [rcx+00000240],xmm0
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2A3056A: 8B B9 50 02 00 00        - mov edi,[rcx+00000250]
Palworld-Win64-Shipping.exe+2A30570: 48 8B 99 48 02 00 00     - mov rbx,[rcx+00000248]
Palworld-Win64-Shipping.exe+2A30577: 41 0F 93 C5              - setae r13b
Palworld-Win64-Shipping.exe+2A3057B: 85 FF                    - test edi,edi
Palworld-Win64-Shipping.exe+2A3057D: 74 1A                    - je Palworld-Win64-Shipping.exe+2A30599
Palworld-Win64-Shipping.exe+2A3057F: 48 83 C3 20              - add rbx,20
Palworld-Win64-Shipping.exe+2A30583: 48 8B 0B                 - mov rcx,[rbx]
Palworld-Win64-Shipping.exe+2A30586: 48 85 C9                 - test rcx,rcx
Palworld-Win64-Shipping.exe+2A30589: 74 05                    - je Palworld-Win64-Shipping.exe+2A30590
Palworld-Win64-Shipping.exe+2A3058B: E8 20 37 1E 00           - call Palworld-Win64-Shipping.exe+2C13CB0
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>90409</ID>
              <Description>"add more Time"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>addRanchTime</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>109419</ID>
          <Description>"Item On Pick Up"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-07
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ItemOnPickUpH,$process,8B 82 04 01 00 00 41 0F) // should be unique
alloc(newmem,$1000,ItemOnPickUpH)

alloc(originalbytesAt,9)
registersymbol(originalbytesAt)

originalbytesAt:
readmem(ItemOnPickUpH,9)

label(code)
label(return)

label(addItemV2)
registersymbol(addItemV2)

newmem:

push r15
mov r15,addItemV2
mov r15d,dword ptr [r15]
add [rdx+00000104],r15d
pop r15

//add esi,[addItemV2]

code:
  mov eax,[rdx+00000104]
  jmp return

  addItemV2:
  dd (int)1

ItemOnPickUpH:
  jmp newmem
  nop
return:
registersymbol(ItemOnPickUpH)

[DISABLE]

ItemOnPickUpH:
readmem(originalbytesAt,9)
  //db 8B 82 04 01 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+28820E6

Palworld-Win64-Shipping.exe+28820CD: CC                    - int 3 
Palworld-Win64-Shipping.exe+28820CE: CC                    - int 3 
Palworld-Win64-Shipping.exe+28820CF: CC                    - int 3 
Palworld-Win64-Shipping.exe+28820D0: 48 85 D2              - test rdx,rdx
Palworld-Win64-Shipping.exe+28820D3: 0F 84 7D 01 00 00     - je Palworld-Win64-Shipping.exe+2882256
Palworld-Win64-Shipping.exe+28820D9: 4C 8B DC              - mov r11,rsp
Palworld-Win64-Shipping.exe+28820DC: 55                    - push rbp
Palworld-Win64-Shipping.exe+28820DD: 56                    - push rsi
Palworld-Win64-Shipping.exe+28820DE: 57                    - push rdi
Palworld-Win64-Shipping.exe+28820DF: 48 81 EC B0 00 00 00  - sub rsp,000000B0
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+28820E6: 8B 82 04 01 00 00     - mov eax,[rdx+00000104]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+28820EC: 41 0F B6 E8           - movzx ebp,r8b
Palworld-Win64-Shipping.exe+28820F0: 49 89 5B 08           - mov [r11+08],rbx
Palworld-Win64-Shipping.exe+28820F4: 48 8B FA              - mov rdi,rdx
Palworld-Win64-Shipping.exe+28820F7: 48 8B F1              - mov rsi,rcx
Palworld-Win64-Shipping.exe+28820FA: 45 84 C0              - test r8b,r8b
Palworld-Win64-Shipping.exe+28820FD: 0F 85 54 01 00 00     - jne Palworld-Win64-Shipping.exe+2882257
Palworld-Win64-Shipping.exe+2882103: 85 C0                 - test eax,eax
Palworld-Win64-Shipping.exe+2882105: 0F 84 39 01 00 00     - je Palworld-Win64-Shipping.exe+2882244
Palworld-Win64-Shipping.exe+288210B: 48 8B 82 DC 00 00 00  - mov rax,[rdx+000000DC]
Palworld-Win64-Shipping.exe+2882112: 48 3B 05 1F E5 E1 05  - cmp rax,[Palworld-Win64-Shipping.exe+86A0638]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>7</ID>
              <Description>"add more Item On PIck Up"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>addItemV2</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88190</ID>
          <Description>"Item Quantity on Mouse Pointer [in Inventory]"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MoneyOnMousePointerA,$process,8B 81 04 01 00 00 41 89 00) // should be unique
alloc(newmem,$1000,MoneyOnMousePointerA)

alloc(originalbytesBa,9)
registersymbol(originalbytesBa)

originalbytesBa:
readmem(MoneyOnMousePointerA,9)

label(code)
label(return)

label(seeItemQuan)
registersymbol(seeItemQuan)

newmem:

mov [seeItemQuan],rcx

code:
  mov eax,[rcx+00000104]
  jmp return

  seeItemQuan:
  dq 0

MoneyOnMousePointerA:
  jmp newmem
  nop
return:
registersymbol(MoneyOnMousePointerA)

[DISABLE]

MoneyOnMousePointerA:
readmem(originalbytesBa,9)
  //db 8B 81 04 01 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2720B55

Palworld-Win64-Shipping.exe+2720B3C: CC                 - int 3 
Palworld-Win64-Shipping.exe+2720B3D: CC                 - int 3 
Palworld-Win64-Shipping.exe+2720B3E: CC                 - int 3 
Palworld-Win64-Shipping.exe+2720B3F: CC                 - int 3 
Palworld-Win64-Shipping.exe+2720B40: 48 8B 42 20        - mov rax,[rdx+20]
Palworld-Win64-Shipping.exe+2720B44: 45 33 C9           - xor r9d,r9d
Palworld-Win64-Shipping.exe+2720B47: 48 85 C0           - test rax,rax
Palworld-Win64-Shipping.exe+2720B4A: 41 0F 95 C1        - setne r9b
Palworld-Win64-Shipping.exe+2720B4E: 4C 03 C8           - add r9,rax
Palworld-Win64-Shipping.exe+2720B51: 4C 89 4A 20        - mov [rdx+20],r9
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2720B55: 8B 81 04 01 00 00  - mov eax,[rcx+00000104]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2720B5B: 41 89 00           - mov [r8],eax
Palworld-Win64-Shipping.exe+2720B5E: C3                 - ret 
Palworld-Win64-Shipping.exe+2720B5F: CC                 - int 3 
Palworld-Win64-Shipping.exe+2720B60: 48 89 5C 24 08     - mov [rsp+08],rbx
Palworld-Win64-Shipping.exe+2720B65: 48 89 6C 24 18     - mov [rsp+18],rbp
Palworld-Win64-Shipping.exe+2720B6A: 48 89 74 24 20     - mov [rsp+20],rsi
Palworld-Win64-Shipping.exe+2720B6F: 57                 - push rdi
Palworld-Win64-Shipping.exe+2720B70: 48 83 EC 20        - sub rsp,20
Palworld-Win64-Shipping.exe+2720B74: 33 FF              - xor edi,edi
Palworld-Win64-Shipping.exe+2720B76: 49 8B F0           - mov rsi,r8
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>88191</ID>
              <Description>"Current Item Quantity"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008800</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeItemQuan</Address>
              <Offsets>
                <Offset>104</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>108811</ID>
          <Description>"Don't Consume Item on Craft/Build"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-03
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ItemOnConsumeA,$process,45 8B F8 4C 8B EA 48 8B D9 E8 ?F ?? 05 00) // should be unique
alloc(newmem,$1000,ItemOnConsumeA)

alloc(originalbytesHg,9)
registersymbol(originalbytesHg)

originalbytesHg:
readmem(ItemOnConsumeA,9)

label(code)
label(return)

newmem:

mov r8d,(int)0

code:
  mov r15d,r8d
  mov r13,rdx
  jmp return

ItemOnConsumeA:
  jmp newmem
  nop
return:
registersymbol(ItemOnConsumeA)

[DISABLE]

ItemOnConsumeA:
readmem(originalbytesHg,9)
  //db 45 8B F8 4C 8B EA

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2AFFB63

Palworld-Win64-Shipping.exe+2AFFB4C: CC                    - int 3 
Palworld-Win64-Shipping.exe+2AFFB4D: CC                    - int 3 
Palworld-Win64-Shipping.exe+2AFFB4E: CC                    - int 3 
Palworld-Win64-Shipping.exe+2AFFB4F: CC                    - int 3 
Palworld-Win64-Shipping.exe+2AFFB50: 40 55                 - push rbp
Palworld-Win64-Shipping.exe+2AFFB52: 53                    - push rbx
Palworld-Win64-Shipping.exe+2AFFB53: 41 55                 - push r13
Palworld-Win64-Shipping.exe+2AFFB55: 41 57                 - push r15
Palworld-Win64-Shipping.exe+2AFFB57: 48 8D 6C 24 C1        - lea rbp,[rsp-3F]
Palworld-Win64-Shipping.exe+2AFFB5C: 48 81 EC C8 00 00 00  - sub rsp,000000C8
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2AFFB63: 45 8B F8              - mov r15d,r8d
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2AFFB66: 4C 8B EA              - mov r13,rdx
Palworld-Win64-Shipping.exe+2AFFB69: 48 8B D9              - mov rbx,rcx
Palworld-Win64-Shipping.exe+2AFFB6C: E8 2F 9D 05 00        - call Palworld-Win64-Shipping.exe+2B598A0
Palworld-Win64-Shipping.exe+2AFFB71: 48 85 C0              - test rax,rax
Palworld-Win64-Shipping.exe+2AFFB74: 75 06                 - jne Palworld-Win64-Shipping.exe+2AFFB7C
Palworld-Win64-Shipping.exe+2AFFB76: 44 8D 48 06           - lea r9d,[rax+06]
Palworld-Win64-Shipping.exe+2AFFB7A: EB 27                 - jmp Palworld-Win64-Shipping.exe+2AFFBA3
Palworld-Win64-Shipping.exe+2AFFB7C: 49 8B 55 00           - mov rdx,[r13+00]
Palworld-Win64-Shipping.exe+2AFFB80: 48 8B C8              - mov rcx,rax
Palworld-Win64-Shipping.exe+2AFFB83: E8 88 64 F2 FF        - call Palworld-Win64-Shipping.exe+2A26010
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>88149</ID>
          <Description>"Max Building Durability"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(BuildingDurabilityA,$process,8B 81 18 02 00 00 39 81 14 02 00 00 0F) // should be unique
alloc(newmem,$1000,BuildingDurabilityA)

alloc(originalbytesAf,9)
registersymbol(originalbytesAf)

originalbytesAf:
readmem(BuildingDurabilityA,9)

label(code)
label(return)

newmem:

  mov eax,[rcx+00000218]
  mov [rcx+00000214],eax

code:
  mov eax,[rcx+00000218]
  jmp return

BuildingDurabilityA:
  jmp newmem
  nop
return:
registersymbol(BuildingDurabilityA)

[DISABLE]

BuildingDurabilityA:
readmem(originalbytesAf,9)
  //db 8B 81 18 02 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF6284C5F60

7FF6284C5F56: 5F                    - pop rdi
7FF6284C5F57: C3                    - ret 
7FF6284C5F58: CC                    - int 3 
7FF6284C5F59: CC                    - int 3 
7FF6284C5F5A: CC                    - int 3 
7FF6284C5F5B: CC                    - int 3 
7FF6284C5F5C: CC                    - int 3 
7FF6284C5F5D: CC                    - int 3 
7FF6284C5F5E: CC                    - int 3 
7FF6284C5F5F: CC                    - int 3 
// ---------- INJECTING HERE ----------
7FF6284C5F60: 8B 81 18 02 00 00     - mov eax,[rcx+00000218]
// ---------- DONE INJECTING  ----------
7FF6284C5F66: 39 81 14 02 00 00     - cmp [rcx+00000214],eax
7FF6284C5F6C: 0F 9C C0              - setl al
7FF6284C5F6F: C3                    - ret 
7FF6284C5F70: 48 81 C1 18 03 00 00  - add rcx,00000318
7FF6284C5F77: E9 F4 D8 12 00        - jmp 7FF6285F3870
7FF6284C5F7C: CC                    - int 3 
7FF6284C5F7D: CC                    - int 3 
7FF6284C5F7E: CC                    - int 3 
7FF6284C5F7F: CC                    - int 3 
7FF6284C5F80: 88 54 24 10           - mov [rsp+10],dl
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>88148</ID>
          <Description>"Max Item Durability"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(DurabilityAa,$process,F3 0F 5F D0 F3 0F 10 41 08 0F 2E) // should be unique
alloc(newmem,$1000,DurabilityAa)

alloc(originalbytesAe,9)
registersymbol(originalbytesAe)

originalbytesAe:
readmem(DurabilityAa,9)

label(code)
label(return)

newmem:

  movss xmm0,[rcx+0C]

code:
  maxss xmm2,xmm0
  movss xmm0,[rcx+08]
  jmp return

DurabilityAa:
  jmp newmem
  nop 4
return:
registersymbol(DurabilityAa)

[DISABLE]

DurabilityAa:
readmem(originalbytesAe,9)
  //db F3 0F 5F D0 F3 0F 10 41 08

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF628412A15

7FF6284129FC: CC              - int 3 
7FF6284129FD: CC              - int 3 
7FF6284129FE: CC              - int 3 
7FF6284129FF: CC              - int 3 
7FF628412A00: 40 53           - push rbx
7FF628412A02: 48 83 EC 20     - sub rsp,20
7FF628412A06: F3 0F 10 51 0C  - movss xmm2,[rcx+0C]
7FF628412A0B: 0F 57 C0        - xorps xmm0,xmm0
7FF628412A0E: F3 0F 5D D1     - minss xmm2,xmm1
7FF628412A12: 48 8B D9        - mov rbx,rcx
// ---------- INJECTING HERE ----------
7FF628412A15: F3 0F 5F D0     - maxss xmm2,xmm0
// ---------- DONE INJECTING  ----------
7FF628412A19: F3 0F 10 41 08  - movss xmm0,[rcx+08]
7FF628412A1E: 0F 2E C2        - ucomiss xmm0,xmm2
7FF628412A21: 74 33           - je 7FF628412A56
7FF628412A23: F3 0F 11 41 10  - movss [rcx+10],xmm0
7FF628412A28: F3 0F 11 51 08  - movss [rcx+08],xmm2
7FF628412A2D: 48 83 C1 C0     - add rcx,-40
7FF628412A31: E8 FA 51 1A FE  - call 7FF6265B7C30
7FF628412A36: 48 8B 03        - mov rax,[rbx]
7FF628412A39: 48 8B CB        - mov rcx,rbx
7FF628412A3C: FF 50 28        - call qword ptr [rax+28]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>88166</ID>
          <Description>"Instant Take Mineral "</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-19
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MineralHpOnHitB,$process,8B 8B 14 02 00 00 45) // should be unique
alloc(newmem,$1000,MineralHpOnHitB)

alloc(originalbytesAs,9)
registersymbol(originalbytesAs)

originalbytesAs:
readmem(MineralHpOnHitB,9)

label(code)
label(return)

newmem:

code:
mov [rbx+00000214],(int)0
  mov ecx,[rbx+00000214]
  jmp return

MineralHpOnHitB:
  jmp newmem
  nop
return:
registersymbol(MineralHpOnHitB)

[DISABLE]

MineralHpOnHitB:
readmem(originalbytesAs,9)
  db 8B 8B 14 02 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+30

Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+A: 41 55                    - push r13
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+C: 41 56                    - push r14
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+E: 41 57                    - push r15
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+10: 48 8D AC 24 F0 FE FF FF  - lea rbp,[rsp-00000110]
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+18: 48 81 EC 10 02 00 00     - sub rsp,Palworld-Win64-Shipping.FWindowsTimeInternal::CurrentThreadCPUStats+10
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+1F: 41 8B F9                 - mov edi,r9d
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+22: 4D 8B F8                 - mov r15,r8
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+25: 48 8B DA                 - mov rbx,rdx
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+28: 48 8B F1                 - mov rsi,rcx
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+2B: E8 80 5C 0F 00           - call Palworld-Win64-Shipping.UPalUtility::GetGameSetting
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+30: 8B 8B 14 02 00 00        - mov ecx,[rbx+00000214]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+36: 45 32 F6                 - xor r14b,r14b
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+39: 89 4C 24 50              - mov [rsp+50],ecx
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+3D: 4C 8B E0                 - mov r12,rax
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+40: 8B 8B 18 02 00 00        - mov ecx,[rbx+00000218]
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+46: 89 4C 24 58              - mov [rsp+58],ecx
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+4A: 48 8B CE                 - mov rcx,rsi
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+4D: 48 89 45 88              - mov [rbp-78],rax
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+51: 89 7C 24 54              - mov [rsp+54],edi
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+55: 44 88 74 24 40           - mov [rsp+40],r14b
Palworld-Win64-Shipping.UPalMapObjectItemDropOnDamagModel::OnDamage_ServerInternal+5A: E8 31 83 0F 00           - call Palworld-Win64-Shipping.UPalUtility::GetMapObjectManager
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>105</ID>
          <Description>"Instant Take Wood "</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-19
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(WoodHpAa,$process,89 91 D0 00 00 00 48 8B D9 0F 9F C0 ) // should be unique
alloc(newmem,$1000,WoodHpAa)

alloc(originalbytesAr,9)
registersymbol(originalbytesAr)

originalbytesAr:
readmem(WoodHpAa,9)

label(code)
label(return)

newmem:

code:
mov edx,(int)0
  mov [rcx+000000D0],edx
  jmp return

WoodHpAa:
  jmp newmem
  nop
return:
registersymbol(WoodHpAa)

[DISABLE]

WoodHpAa:
readmem(originalbytesAr,9)
  //db 89 91 D0 00 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+15

Palworld-Win64-Shipping.exe+29B80BC: CC                    - int 3 
Palworld-Win64-Shipping.exe+29B80BD: CC                    - int 3 
Palworld-Win64-Shipping.exe+29B80BE: CC                    - int 3 
Palworld-Win64-Shipping.exe+29B80BF: CC                    - int 3 
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp: 48 89 5C 24 10        - mov [rsp+10],rbx
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+5: 57                    - push rdi
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+6: 48 83 EC 20           - sub rsp,20
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+A: 0F B6 B9 D4 00 00 00  - movzx edi,byte ptr [rcx+000000D4]
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+11: 33 C0                 - xor eax,eax
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+13: 85 D2                 - test edx,edx
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+15: 89 91 D0 00 00 00     - mov [rcx+000000D0],edx
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+1B: 48 8B D9              - mov rbx,rcx
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+1E: 0F 9F C0              - setg al
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+21: 3B F8                 - cmp edi,eax
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+23: 74 05                 - je Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+2A
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+25: E8 06 5C FD FF        - call Palworld-Win64-Shipping.UPalFoliageInstance::BroadcastUpdateToClient_ServerInternal
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+2A: 8B 8B D0 00 00 00     - mov ecx,[rbx+000000D0]
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+30: 85 C9                 - test ecx,ecx
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+32: 0F 9F C0              - setg al
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+35: 88 83 D4 00 00 00     - mov [rbx+000000D4],al
Palworld-Win64-Shipping.UPalFoliageInstance::UpdateHp+3B: 40 3A C7              - cmp al,dil
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>88160</ID>
          <Description>"Increase Pal Shop Inventory"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(PalShopA,$process,8B ?? 0C 89 ?? 0C 48 8D ?? ?? 48 3B ?? 74 ?? 44) // should be unique
alloc(newmem,$1000,PalShopA)

//label(code)
label(return)

label(bkpPalShop)

newmem:

  mov eax,(int)100
  mov [rdi+08],eax
  mov [rsi+0C],eax
  //mov [rdi+0C],eax
  jmp return

bkpPalShop:
  readmem(PalShopA,6)

{
code:
  mov eax,[rbx+0C]
  mov [rdi+0C],eax
}
  jmp return

PalShopA:
  jmp newmem
  nop
return:
registersymbol(PalShopA)
registersymbol(bkpPalShop)

[DISABLE]

PalShopA:
  readmem(bkpPalShop,6)
  //db 8B 43 0C 89 47 0C

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF6285585F3

7FF6285585CB: E8 F0 8F 05 FE           - call 7FF6265B15C0
7FF6285585D0: 48 8B 4C 24 40           - mov rcx,[rsp+40]
7FF6285585D5: 48 85 C9                 - test rcx,rcx
7FF6285585D8: 74 05                    - je 7FF6285585DF
7FF6285585DA: E8 41 49 0F 00           - call 7FF62864CF20
7FF6285585DF: 48 8B 4C 24 50           - mov rcx,[rsp+50]
7FF6285585E4: E9 EC 00 00 00           - jmp 7FF6285586D5
7FF6285585E9: 8B 40 08                 - mov eax,[rax+08]
7FF6285585EC: 48 8D 77 10              - lea rsi,[rdi+10]
7FF6285585F0: 89 47 08                 - mov [rdi+08],eax
// ---------- INJECTING HERE ----------
7FF6285585F3: 8B 43 0C                 - mov eax,[rbx+0C]
// ---------- DONE INJECTING  ----------
7FF6285585F6: 89 47 0C                 - mov [rdi+0C],eax
7FF6285585F9: 48 8D 43 10              - lea rax,[rbx+10]
7FF6285585FD: 48 3B F0                 - cmp rsi,rax
7FF628558600: 74 59                    - je 7FF62855865B
7FF628558602: 44 8B 46 0C              - mov r8d,[rsi+0C]
7FF628558606: 48 89 AC 24 80 00 00 00  - mov [rsp+00000080],rbp
7FF62855860E: 48 63 68 08              - movsxd  rbp,dword ptr [rax+08]
7FF628558612: 4C 89 B4 24 88 00 00 00  - mov [rsp+00000088],r14
7FF62855861A: 4C 8B 30                 - mov r14,[rax]
7FF62855861D: 89 6E 08                 - mov [rsi+08],ebp
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>88186</ID>
          <Description>"Money [On Sort even If 0]"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MoneyOnSortAa,$process,48 89 57 50 48 89 54 24 30) // should be unique
alloc(newmem,$1000,MoneyOnSortAa)

alloc(originalbytesBb,9)
registersymbol(originalbytesBb)

originalbytesBb:
readmem(MoneyOnSortAa,9)

label(code)
label(return)

label(setMoney)
registersymbol(setMoney)

newmem:

mov rdx,[setMoney]

code:
  mov [rdi+50],rdx
  mov [rsp+30],rdx
  jmp return

  setMoney:
  dd (int)50000

MoneyOnSortAa:
  jmp newmem
  nop 4
return:
registersymbol(MoneyOnSortAa)

[DISABLE]

MoneyOnSortAa:
readmem(originalbytesBb,9)
  //db 48 89 57 50 48 89 54 24 30

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2A8A90C

Palworld-Win64-Shipping.exe+2A8A8DE: 48 8D 15 C3 CF F0 03  - lea rdx,[Palworld-Win64-Shipping.exe+69978A8]
Palworld-Win64-Shipping.exe+2A8A8E5: 48 8B F9              - mov rdi,rcx
Palworld-Win64-Shipping.exe+2A8A8E8: 41 B8 01 00 00 00     - mov r8d,00000001
Palworld-Win64-Shipping.exe+2A8A8EE: 48 8D 4C 24 30        - lea rcx,[rsp+30]
Palworld-Win64-Shipping.exe+2A8A8F3: E8 48 DB 24 00        - call Palworld-Win64-Shipping.exe+2CD8440
Palworld-Win64-Shipping.exe+2A8A8F8: 48 8D 54 24 30        - lea rdx,[rsp+30]
Palworld-Win64-Shipping.exe+2A8A8FD: 48 8B CB              - mov rcx,rbx
Palworld-Win64-Shipping.exe+2A8A900: E8 CB B5 03 00        - call Palworld-Win64-Shipping.exe+2AC5ED0
Palworld-Win64-Shipping.exe+2A8A905: 48 63 D0              - movsxd  rdx,eax
Palworld-Win64-Shipping.exe+2A8A908: 48 8D 4F 28           - lea rcx,[rdi+28]
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2A8A90C: 48 89 57 50           - mov [rdi+50],rdx
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2A8A910: 48 89 54 24 30        - mov [rsp+30],rdx
Palworld-Win64-Shipping.exe+2A8A915: 48 8D 54 24 30        - lea rdx,[rsp+30]
Palworld-Win64-Shipping.exe+2A8A91A: E8 F1 AF 0E FE        - call Palworld-Win64-Shipping.exe+B75910
Palworld-Win64-Shipping.exe+2A8A91F: 48 8B 5C 24 38        - mov rbx,[rsp+38]
Palworld-Win64-Shipping.exe+2A8A924: 48 83 C4 20           - add rsp,20
Palworld-Win64-Shipping.exe+2A8A928: 5F                    - pop rdi
Palworld-Win64-Shipping.exe+2A8A929: C3                    - ret 
Palworld-Win64-Shipping.exe+2A8A92A: CC                    - int 3 
Palworld-Win64-Shipping.exe+2A8A92B: CC                    - int 3 
Palworld-Win64-Shipping.exe+2A8A92C: CC                    - int 3 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>88187</ID>
              <Description>"set Money"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>setMoney</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>90382</ID>
          <Description>"Lifmunk [to see Wait]"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-31
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(LifmunkZa,$process,8B 83 E8 07 00 00 48 8D) // should be unique
alloc(newmem,$1000,LifmunkZa)

alloc(originalbytesCb,9)
registersymbol(originalbytesCb)

originalbytesCb:
readmem(LifmunkZa,9)

label(code)
label(return)

label(seeLifmunk)
registersymbol(seeLifmunk)

newmem:

mov [seeLifmunk],rbx

code:
  mov eax,[rbx+000007E8]
  jmp return

  seeLifmunk:
  dq 0

LifmunkZa:
  jmp newmem
  nop
return:
registersymbol(LifmunkZa)

[DISABLE]

LifmunkZa:
readmem(originalbytesCb,9)
  //db 8B 83 E8 07 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2AC4C7B

Palworld-Win64-Shipping.exe+2AC4C3F: E8 DC 5C 87 FE        - call Palworld-Win64-Shipping.exe+133A920
Palworld-Win64-Shipping.exe+2AC4C44: 8B 83 60 06 00 00     - mov eax,[rbx+00000660]
Palworld-Win64-Shipping.exe+2AC4C4A: 48 8D 93 98 07 00 00  - lea rdx,[rbx+00000798]
Palworld-Win64-Shipping.exe+2AC4C51: 89 87 38 03 00 00     - mov [rdi+00000338],eax
Palworld-Win64-Shipping.exe+2AC4C57: 48 8D 8F 48 03 00 00  - lea rcx,[rdi+00000348]
Palworld-Win64-Shipping.exe+2AC4C5E: 8B 83 64 06 00 00     - mov eax,[rbx+00000664]
Palworld-Win64-Shipping.exe+2AC4C64: 89 87 3C 03 00 00     - mov [rdi+0000033C],eax
Palworld-Win64-Shipping.exe+2AC4C6A: 8B 83 68 06 00 00     - mov eax,[rbx+00000668]
Palworld-Win64-Shipping.exe+2AC4C70: 89 87 40 03 00 00     - mov [rdi+00000340],eax
Palworld-Win64-Shipping.exe+2AC4C76: E8 A5 5C 87 FE        - call Palworld-Win64-Shipping.exe+133A920
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2AC4C7B: 8B 83 E8 07 00 00     - mov eax,[rbx+000007E8]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2AC4C81: 48 8D 93 18 09 00 00  - lea rdx,[rbx+00000918]
Palworld-Win64-Shipping.exe+2AC4C88: 48 8D 8F A0 03 00 00  - lea rcx,[rdi+000003A0]
Palworld-Win64-Shipping.exe+2AC4C8F: 89 87 98 03 00 00     - mov [rdi+00000398],eax
Palworld-Win64-Shipping.exe+2AC4C95: E8 86 5C 87 FE        - call Palworld-Win64-Shipping.exe+133A920
Palworld-Win64-Shipping.exe+2AC4C9A: 48 8D 93 90 0A 00 00  - lea rdx,[rbx+00000A90]
Palworld-Win64-Shipping.exe+2AC4CA1: 48 8D 8F 40 04 00 00  - lea rcx,[rdi+00000440]
Palworld-Win64-Shipping.exe+2AC4CA8: E8 73 5C 87 FE        - call Palworld-Win64-Shipping.exe+133A920
Palworld-Win64-Shipping.exe+2AC4CAD: 48 8D 93 F8 0A 00 00  - lea rdx,[rbx+00000AF8]
Palworld-Win64-Shipping.exe+2AC4CB4: 48 8D 8F 90 04 00 00  - lea rcx,[rdi+00000490]
Palworld-Win64-Shipping.exe+2AC4CBB: E8 F0 20 24 FE        - call Palworld-Win64-Shipping.exe+D06DB0
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>90384</ID>
              <Description>"Current Lifmunk quantity"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeLifmunk</Address>
              <Offsets>
                <Offset>7E8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>90383</ID>
          <Description>"999 Lifmunk on Use"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-31
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(LifmunkOnUseAa,&amp;process,89 ?? E8 07 00 00 33 D2) // should be unique
alloc(newmem,$1000,LifmunkOnUseAa)

alloc(originalbytesCd,9)
registersymbol(originalbytesCd)

originalbytesCd:
readmem(LifmunkOnUseAa,9)

label(code)
label(return)

newmem:

mov edi,(int)999

code:
  mov [rbx+000007E8],edi
  jmp return

LifmunkOnUseAa:
  jmp newmem
  nop
return:
registersymbol(LifmunkOnUseAa)

[DISABLE]

LifmunkOnUseAa:
readmem(originalbytesCd,9)
  //db 89 BB E8 07 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2AE6A53

Palworld-Win64-Shipping.exe+2AE6A2F: 8B 89 E8 07 00 00  - mov ecx,[rcx+000007E8]
Palworld-Win64-Shipping.exe+2AE6A35: 3B D1              - cmp edx,ecx
Palworld-Win64-Shipping.exe+2AE6A37: 7E 16              - jle Palworld-Win64-Shipping.exe+2AE6A4F
Palworld-Win64-Shipping.exe+2AE6A39: 8B C2              - mov eax,edx
Palworld-Win64-Shipping.exe+2AE6A3B: 48 8D 54 24 38     - lea rdx,[rsp+38]
Palworld-Win64-Shipping.exe+2AE6A40: 2B C1              - sub eax,ecx
Palworld-Win64-Shipping.exe+2AE6A42: 48 8D 4B 38        - lea rcx,[rbx+38]
Palworld-Win64-Shipping.exe+2AE6A46: 89 44 24 38        - mov [rsp+38],eax
Palworld-Win64-Shipping.exe+2AE6A4A: E8 C1 EE 08 FE     - call Palworld-Win64-Shipping.exe+B75910
Palworld-Win64-Shipping.exe+2AE6A4F: 48 8D 4B 28        - lea rcx,[rbx+28]
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2AE6A53: 89 BB E8 07 00 00  - mov [rbx+000007E8],edi
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2AE6A59: 33 D2              - xor edx,edx
Palworld-Win64-Shipping.exe+2AE6A5B: 48 8B 5C 24 30     - mov rbx,[rsp+30]
Palworld-Win64-Shipping.exe+2AE6A60: 48 83 C4 20        - add rsp,20
Palworld-Win64-Shipping.exe+2AE6A64: 5F                 - pop rdi
Palworld-Win64-Shipping.exe+2AE6A65: E9 A6 EE 08 FE     - jmp Palworld-Win64-Shipping.exe+B75910
Palworld-Win64-Shipping.exe+2AE6A6A: CC                 - int 3 
Palworld-Win64-Shipping.exe+2AE6A6B: CC                 - int 3 
Palworld-Win64-Shipping.exe+2AE6A6C: CC                 - int 3 
Palworld-Win64-Shipping.exe+2AE6A6D: CC                 - int 3 
Palworld-Win64-Shipping.exe+2AE6A6E: CC                 - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>105827</ID>
          <Description>"Day Time"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-02
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(WorldTimeZa,$process,48 8B 89 E0 00 00 00 49 B9) // should be unique
alloc(newmem,$1000,WorldTimeZa)

alloc(originalbytesHb,9)
registersymbol(originalbytesHb)

originalbytesHb:
readmem(WorldTimeZa,9)

//label(code)
label(bkpDayTime)
label(return)

label(seeDayTime)
registersymbol(seeDayTime)

newmem:

mov [seeDayTime],rcx

bkpDayTime:
  readmem(WorldTimeZa,7)

//code:
  //mov rcx,[rcx+000000E0]
  jmp return

align 10

  seeDayTime:
  dq 0

WorldTimeZa:
  jmp newmem
  nop 2
return:
registersymbol(WorldTimeZa)

[DISABLE]

WorldTimeZa:
readmem(originalbytesHb,9)
  //db 48 8B 89 E0 00 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2B54F50

Palworld-Win64-Shipping.exe+2B54F46: CC                             - int 3 
Palworld-Win64-Shipping.exe+2B54F47: CC                             - int 3 
Palworld-Win64-Shipping.exe+2B54F48: CC                             - int 3 
Palworld-Win64-Shipping.exe+2B54F49: CC                             - int 3 
Palworld-Win64-Shipping.exe+2B54F4A: CC                             - int 3 
Palworld-Win64-Shipping.exe+2B54F4B: CC                             - int 3 
Palworld-Win64-Shipping.exe+2B54F4C: CC                             - int 3 
Palworld-Win64-Shipping.exe+2B54F4D: CC                             - int 3 
Palworld-Win64-Shipping.exe+2B54F4E: CC                             - int 3 
Palworld-Win64-Shipping.exe+2B54F4F: CC                             - int 3 
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2B54F50: 48 8B 89 E0 00 00 00           - mov rcx,[rcx+000000E0]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2B54F57: 49 B9 89 88 88 88 88 88 88 88  - mov r9,8888888888888889
Palworld-Win64-Shipping.exe+2B54F61: 48 B8 D5 F7 BA 40 D8 13 A2 1C  - mov rax,1CA213D840BAF7D5
Palworld-Win64-Shipping.exe+2B54F6B: 48 F7 E9                       - imul rcx
Palworld-Win64-Shipping.exe+2B54F6E: 4C 8B C2                       - mov r8,rdx
Palworld-Win64-Shipping.exe+2B54F71: 49 C1 F8 1A                    - sar r8,1A
Palworld-Win64-Shipping.exe+2B54F75: 49 8B C0                       - mov rax,r8
Palworld-Win64-Shipping.exe+2B54F78: 48 C1 E8 3F                    - shr rax,3F
Palworld-Win64-Shipping.exe+2B54F7C: 4C 03 C0                       - add r8,rax
Palworld-Win64-Shipping.exe+2B54F7F: 49 8B C1                       - mov rax,r9
Palworld-Win64-Shipping.exe+2B54F82: 49 F7 E8                       - imul r8
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>105830</ID>
              <Description>"Current Time [ ALT GR+Npad 6 = add Time / ALT GR+Npad 4 = sub Time ]"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>408000</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>seeDayTime</Address>
              <Offsets>
                <Offset>E0</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>18</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>50000000000</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>18</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>56000000000</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>108820</ID>
              <Description>"ALT GR even works with CTRL+ALT"</Description>
              <Color>C080FF</Color>
              <GroupHeader>1</GroupHeader>
              <Address/>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>105832</ID>
          <Description>"Stop Day Time"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-02
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(DayTimeZc,$process,48 8B 87 E0 00 00 00 48 B9) // should be unique
alloc(newmem,$1000,DayTimeZc)

alloc(originalbytesHc,9)
registersymbol(originalbytesHc)

originalbytesHc:
readmem(DayTimeZc,9)

label(code)
label(return)

newmem:

mov [rdi+000000E0],rax
  mov rax,[rdi+000000E0]
  jmp return

code:
  mov rax,[rdi+000000E0]
  jmp return

DayTimeZc:
  jmp newmem
  nop 2
return:
registersymbol(DayTimeZc)

[DISABLE]

DayTimeZc:
readmem(originalbytesHc,9)
  //db 48 8B 87 E0 00 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2B54CE2

Palworld-Win64-Shipping.exe+2B54CB8: 4D 85 C0                       - test r8,r8
Palworld-Win64-Shipping.exe+2B54CBB: 75 25                          - jne Palworld-Win64-Shipping.exe+2B54CE2
Palworld-Win64-Shipping.exe+2B54CBD: E8 1E 7B BB FF                 - call Palworld-Win64-Shipping.exe+270C7E0
Palworld-Win64-Shipping.exe+2B54CC2: 48 8B D8                       - mov rbx,rax
Palworld-Win64-Shipping.exe+2B54CC5: 48 83 B8 10 01 00 00 00        - cmp qword ptr [rax+00000110],00
Palworld-Win64-Shipping.exe+2B54CCD: 75 0C                          - jne Palworld-Win64-Shipping.exe+2B54CDB
Palworld-Win64-Shipping.exe+2B54CCF: 48 8B 10                       - mov rdx,[rax]
Palworld-Win64-Shipping.exe+2B54CD2: 48 8B C8                       - mov rcx,rax
Palworld-Win64-Shipping.exe+2B54CD5: FF 92 F0 03 00 00              - call qword ptr [rdx+000003F0]
Palworld-Win64-Shipping.exe+2B54CDB: 4C 8B 83 10 01 00 00           - mov r8,[rbx+00000110]
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2B54CE2: 48 8B 87 E0 00 00 00           - mov rax,[rdi+000000E0]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2B54CE9: 48 B9 00 68 C4 61 08 00 00 00  - mov rcx,0000000861C46800
Palworld-Win64-Shipping.exe+2B54CF3: 48 8B 7C 24 38                 - mov rdi,[rsp+38]
Palworld-Win64-Shipping.exe+2B54CF8: 48 99                          - cqo 
Palworld-Win64-Shipping.exe+2B54CFA: 48 8B 5C 24 30                 - mov rbx,[rsp+30]
Palworld-Win64-Shipping.exe+2B54CFF: 48 F7 F9                       - idiv rcx
Palworld-Win64-Shipping.exe+2B54D02: 4C 8B C8                       - mov r9,rax
Palworld-Win64-Shipping.exe+2B54D05: 48 B8 AB AA AA AA AA AA AA 2A  - mov rax,2AAAAAAAAAAAAAAB
Palworld-Win64-Shipping.exe+2B54D0F: 49 F7 E9                       - imul r9
Palworld-Win64-Shipping.exe+2B54D12: 48 C1 FA 02                    - sar rdx,02
Palworld-Win64-Shipping.exe+2B54D16: 48 8B CA                       - mov rcx,rdx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>326</ID>
          <Description>"Teleport To Saved Position"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

//aobscanmodule(CordinatesforTeleportZa,$process,00 00 00 48 85 C0 74 20 0F 10 80 60 02 00 00 0F 11 44 24 38)
aobscanmodule(CordinatesforTeleportZa,$process,00 ?? ?? ?? ?? ?0 ?? ?? ?? ?? ?? ?? ?? 0? ?? ?? 4? ?? ?? ?? ?? ?? ?? 0? ?? ?? ?? ?? 0? 00 00 48 85 C0 74 ?? 0F 10 80 60 02 00 00)
alloc(newmem,$1000,CordinatesforTeleportZa)

alloc(originalbytesHh,9)
registersymbol(originalbytesHh)

originalbytesHh:
readmem(CordinatesforTeleportZa+24,9)

alloc(getXYZ,8)
label(code)
label(return)
label(posX)
label(posY)
label(posZ)
label(savePos)
label(loadPos)
label(saveMy)
label(loadMy)
registersymbol(savePos)
registersymbol(loadPos)

getXYZ:
  posX:
  dd 0
  posY:
  dd 0
  posZ:
  dd 0
  savePos:
  dd 0
  loadPos:
  dd 0

newmem:
  cmp [savePos],1
  je saveMy
  cmp [loadPos],1
  je loadMy
  jmp code

saveMy:
  mov [savePos],0
  push rbx
  mov rbx,[rax+26C]
  mov [posX],rbx
  mov rbx,[rax+264]
  mov [posY],rbx
  mov rbx,[rax+274]
  mov [posZ],rbx
  pop rbx
  jmp code

loadMy:
  mov [loadPos],0
  push rbx
  mov rbx,[posX]
  mov [rax+26C],rbx
  mov rbx,[posY]
  mov [rax+264],rbx
  mov rbx,[posZ]
  mov [rax+274],rbx
  pop rbx
  jmp code

code:
movups xmm0,[rax+00000270]
 // movups xmm0,[rax+00000260]
  jmp return

CordinatesforTeleportZa+24:
  jmp newmem
  nop 2
return:
registersymbol(CordinatesforTeleportZa)

[DISABLE]

CordinatesforTeleportZa+24:
readmem(originalbytesHh,9)
  //db 0F 10 80 60 02 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-WinGDK-Shipping.exe+2A05C60

Palworld-WinGDK-Shipping.exe+2A05C31: 48 63 50 08              - movsxd  rdx,dword ptr [rax+08]
Palworld-WinGDK-Shipping.exe+2A05C35: 3B 51 38                 - cmp edx,[rcx+38]
Palworld-WinGDK-Shipping.exe+2A05C38: 0F 8F 30 01 00 00        - jg Palworld-WinGDK-Shipping.exe+2A05D6E
Palworld-WinGDK-Shipping.exe+2A05C3E: 48 8B 49 30              - mov rcx,[rcx+30]
Palworld-WinGDK-Shipping.exe+2A05C42: 48 39 04 D1              - cmp [rcx+rdx*8],rax
Palworld-WinGDK-Shipping.exe+2A05C46: 0F 85 22 01 00 00        - jne Palworld-WinGDK-Shipping.exe+2A05D6E
Palworld-WinGDK-Shipping.exe+2A05C4C: 48 8B 86 98 01 00 00     - mov rax,[rsi+00000198]
Palworld-WinGDK-Shipping.exe+2A05C53: 0F 29 B4 24 B0 00 00 00  - movaps [rsp+000000B0],xmm6
Palworld-WinGDK-Shipping.exe+2A05C5B: 48 85 C0                 - test rax,rax
Palworld-WinGDK-Shipping.exe+2A05C5E: 74 20                    - je Palworld-WinGDK-Shipping.exe+2A05C80
// ---------- INJECTING HERE ----------
Palworld-WinGDK-Shipping.exe+2A05C60: 0F 10 80 60 02 00 00     - movups xmm0,[rax+00000260]
// ---------- DONE INJECTING  ----------
Palworld-WinGDK-Shipping.exe+2A05C67: 0F 11 44 24 38           - movups [rsp+38],xmm0
Palworld-WinGDK-Shipping.exe+2A05C6C: 0F 10 80 70 02 00 00     - movups xmm0,[rax+00000270]
Palworld-WinGDK-Shipping.exe+2A05C73: 48 8D 44 24 38           - lea rax,[rsp+38]
Palworld-WinGDK-Shipping.exe+2A05C78: F2 0F 11 44 24 48        - movsd [rsp+48],xmm0
Palworld-WinGDK-Shipping.exe+2A05C7E: EB 1F                    - jmp Palworld-WinGDK-Shipping.exe+2A05C9F
Palworld-WinGDK-Shipping.exe+2A05C80: 0F 10 05 79 39 1B 05     - movups xmm0,[Palworld-WinGDK-Shipping.exe+7BB9600]
Palworld-WinGDK-Shipping.exe+2A05C87: 48 8D 44 24 20           - lea rax,[rsp+20]
Palworld-WinGDK-Shipping.exe+2A05C8C: 0F 11 44 24 20           - movups [rsp+20],xmm0
Palworld-WinGDK-Shipping.exe+2A05C91: F2 0F 10 05 77 39 1B 05  - movsd xmm0,[Palworld-WinGDK-Shipping.exe+7BB9610]
Palworld-WinGDK-Shipping.exe+2A05C99: F2 0F 11 44 24 30        - movsd [rsp+30],xmm0
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>324</ID>
              <Description>"Save Location (ALT GR+Npad7)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>savePos</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>18</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                  <ActivateSound>Activate</ActivateSound>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>325</ID>
              <Description>"Load Location (ALT GR+Npad9)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>loadPos</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>18</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                  <ActivateSound>Deactivate</ActivateSound>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>108819</ID>
              <Description>"ALT GR even works with CTRL+ALT"</Description>
              <Color>C080FF</Color>
              <GroupHeader>1</GroupHeader>
              <Address/>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>19326</ID>
          <Description>"Difficult Changes [To see go in "Change World Setting" change Difficult]"</Description>
          <Options moHideChildren="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-27
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CaptureRateOnSelectedDiffMenuAa,$process,48 8B FD 48 81 C5 28 01 00 00 88 07 8B 43 04 89 47 04 8B 43 08 89 47 08 8B 43 0C 89 47 0C 8B 43 10 89 47 10 8B 43 14 89 47 14 8B 43 18 89 47 18 8B 43 1C 89 47 1C 8B 43 20 89 47 20 8B 43 24 89 47 24) // should be unique
alloc(newmem,$1000,CaptureRateOnSelectedDiffMenuAa)

alloc(originalbytesAd,9)
registersymbol(originalbytesAd)

originalbytesAd:
readmem(CaptureRateOnSelectedDiffMenuAa+21,9)

label(code)
label(return)

label(seeDiffChanges)
registersymbol(seeDiffChanges)

newmem:

cmp [rbx+138],(int)1
jne code

mov [seeDiffChanges],rbx

  mov [rdi+10],eax
  mov eax,[rbx+14]
  jmp return

code:
  mov [rdi+10],eax
  mov eax,[rbx+14]
  jmp return

  seeDiffChanges:
  dq 0


CaptureRateOnSelectedDiffMenuAa+21:
  jmp newmem
  nop
return:
registersymbol(CaptureRateOnSelectedDiffMenuAa)

[DISABLE]

CaptureRateOnSelectedDiffMenuAa+21:
readmem(originalbytesAd,9)
  //db 89 47 10 8B 43 14

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+278EF69

Palworld-Win64-Shipping.exe+278EF48: 48 8B FD              - mov rdi,rbp
Palworld-Win64-Shipping.exe+278EF4B: 48 81 C5 28 01 00 00  - add rbp,00000128
Palworld-Win64-Shipping.exe+278EF52: 88 07                 - mov [rdi],al
Palworld-Win64-Shipping.exe+278EF54: 8B 43 04              - mov eax,[rbx+04]
Palworld-Win64-Shipping.exe+278EF57: 89 47 04              - mov [rdi+04],eax
Palworld-Win64-Shipping.exe+278EF5A: 8B 43 08              - mov eax,[rbx+08]
Palworld-Win64-Shipping.exe+278EF5D: 89 47 08              - mov [rdi+08],eax
Palworld-Win64-Shipping.exe+278EF60: 8B 43 0C              - mov eax,[rbx+0C]
Palworld-Win64-Shipping.exe+278EF63: 89 47 0C              - mov [rdi+0C],eax
Palworld-Win64-Shipping.exe+278EF66: 8B 43 10              - mov eax,[rbx+10]
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+278EF69: 89 47 10              - mov [rdi+10],eax
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+278EF6C: 8B 43 14              - mov eax,[rbx+14]
Palworld-Win64-Shipping.exe+278EF6F: 89 47 14              - mov [rdi+14],eax
Palworld-Win64-Shipping.exe+278EF72: 8B 43 18              - mov eax,[rbx+18]
Palworld-Win64-Shipping.exe+278EF75: 89 47 18              - mov [rdi+18],eax
Palworld-Win64-Shipping.exe+278EF78: 8B 43 1C              - mov eax,[rbx+1C]
Palworld-Win64-Shipping.exe+278EF7B: 89 47 1C              - mov [rdi+1C],eax
Palworld-Win64-Shipping.exe+278EF7E: 8B 43 20              - mov eax,[rbx+20]
Palworld-Win64-Shipping.exe+278EF81: 89 47 20              - mov [rdi+20],eax
Palworld-Win64-Shipping.exe+278EF84: 8B 43 24              - mov eax,[rbx+24]
Palworld-Win64-Shipping.exe+278EF87: 89 47 24              - mov [rdi+24],eax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>19327</ID>
              <Description>"Day Time Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>04</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19328</ID>
              <Description>"Night Time Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>08</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19329</ID>
              <Description>"Exp Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>0C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19330</ID>
              <Description>"Pal Capture Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19331</ID>
              <Description>"Pal Appearance Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19332</ID>
              <Description>"Damage from Pals Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19333</ID>
              <Description>"Damage to Pals Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19334</ID>
              <Description>"Pal Hunger Depletion Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>38</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19335</ID>
              <Description>"Pal Stamina Reduction Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>3C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19336</ID>
              <Description>"Pal Natural Hp Recovery"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19337</ID>
              <Description>"Pal Sleep Hp Regeneration Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19338</ID>
              <Description>"Damage from Player Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19339</ID>
              <Description>"Damage to Player Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19340</ID>
              <Description>"Player Hunger Depletation Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19341</ID>
              <Description>"Player Stamina Reduction Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>2C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19342</ID>
              <Description>"Player Natural Hp Recover Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19343</ID>
              <Description>"Player Sleeep Hp Regeneration Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19344</ID>
              <Description>"Damage to Structure Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>48</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19345</ID>
              <Description>"Structure Deterioration Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>4C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19346</ID>
              <Description>"Max Number of Dropped Items in a World"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>68</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19347</ID>
              <Description>"Ghaterable Items Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>50</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19348</ID>
              <Description>"Ghaterable Objects Health Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>54</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19349</ID>
              <Description>"Gatherable Objects Respawn Interval"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>58</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19350</ID>
              <Description>"Dropped Items Multiplier ( from Enemies)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>5C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19351</ID>
              <Description>"Time (h) to incubate Massive Egg."</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>88</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19352</ID>
              <Description>"Max Guild Members"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>84</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19353</ID>
              <Description>"Max Pals Working at Base"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>387100</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>74</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88159</ID>
          <Description>"Unlimited Base Camps"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-28
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(BaseCampsA,$process,E8 ?? ?? ?? ?? 8B 40 10 48 83 C4 20 5B C3 48) // should be unique
alloc(newmem,$1000,BaseCampsA)

alloc(originalbytesAl,9)
registersymbol(originalbytesAl)

originalbytesAl:
readmem(BaseCampsA+05,9)

label(code)
label(return)

newmem:

mov [rax+10],(int)10000

code:
  mov eax,[rax+10]
  add rsp,20
  jmp return

BaseCampsA+05:
  jmp newmem
  nop 2
return:
registersymbol(BaseCampsA)

[DISABLE]

BaseCampsA+05:
readmem(originalbytesAl,9)
  //db 8B 40 10 48 83 C4 20

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: 7FF62842DEF7

7FF62842DED0: 40 53                 - push rbx
7FF62842DED2: 48 83 EC 20           - sub rsp,20
7FF62842DED6: 8B 99 08 01 00 00     - mov ebx,[rcx+00000108]
7FF62842DEDC: 33 C0                 - xor eax,eax
7FF62842DEDE: 48 89 44 24 30        - mov [rsp+30],rax
7FF62842DEE3: E8 C8 1D 09 00        - call 7FF6284BFCB0
7FF62842DEE8: 4C 8D 44 24 30        - lea r8,[rsp+30]
7FF62842DEED: 8B D3                 - mov edx,ebx
7FF62842DEEF: 48 8B C8              - mov rcx,rax
7FF62842DEF2: E8 19 07 09 00        - call 7FF6284BE610
// ---------- INJECTING HERE ----------
7FF62842DEF7: 8B 40 10              - mov eax,[rax+10]
// ---------- DONE INJECTING  ----------
7FF62842DEFA: 48 83 C4 20           - add rsp,20
7FF62842DEFE: 5B                    - pop rbx
7FF62842DEFF: C3                    - ret 
7FF62842DF00: 48 8B 81 E8 02 00 00  - mov rax,[rcx+000002E8]
7FF62842DF07: C3                    - ret 
7FF62842DF08: CC                    - int 3 
7FF62842DF09: CC                    - int 3 
7FF62842DF0A: CC                    - int 3 
7FF62842DF0B: CC                    - int 3 
7FF62842DF0C: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>21707</ID>
      <Description>"Deactivate All Scripts"</Description>
      <Color>00FFFF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

function Disable_All()
  local al = AddressList
    for i = 0, al.Count - 1 do
      if al[i].Type == vtAutoAssembler then
         al[i].Active = false
      end
    end
end

Disable_All()
Selected.Active = false

[DISABLE]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Tests"</Description>
      <Options moHideChildren="1"/>
      <Color>C0C0C0</Color>
      <GroupHeader>1</GroupHeader>
      <Address/>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Item On Pick Up"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-19
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ItemOnPickUpA,Palworld-Win64-Shipping.exe,8B 81 04 01 00 00 41 89 00) // should be unique
alloc(newmem,$1000,ItemOnPickUpA)

label(code)
label(return)

label(addItem)
registersymbol(addItem)

label(seeItem)
registersymbol(seeItem)

newmem:

mov [seeItem],rcx

push r15
mov r15,addItem
mov r15d,dword ptr [r15]
add [rcx+00000104],r15d
pop r15

  mov eax,[rcx+00000104]
  jmp return

code:
  mov eax,[rcx+00000104]
  jmp return

  seeItem:
  dq 0

  addItem:
  dd (int)0.5

ItemOnPickUpA:
  jmp newmem
  nop
return:
registersymbol(ItemOnPickUpA)

[DISABLE]

ItemOnPickUpA:
  db 8B 81 04 01 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.UPalItemSlot::execGetStackCount+15

Palworld-Win64-Shipping.exe+2715EFC: CC                 - int 3 
Palworld-Win64-Shipping.exe+2715EFD: CC                 - int 3 
Palworld-Win64-Shipping.exe+2715EFE: CC                 - int 3 
Palworld-Win64-Shipping.exe+2715EFF: CC                 - int 3 
Palworld-Win64-Shipping.UPalItemSlot::execGetStackCount: 48 8B 42 20        - mov rax,[rdx+20]
Palworld-Win64-Shipping.UPalItemSlot::execGetStackCount+4: 45 33 C9           - xor r9d,r9d
Palworld-Win64-Shipping.UPalItemSlot::execGetStackCount+7: 48 85 C0           - test rax,rax
Palworld-Win64-Shipping.UPalItemSlot::execGetStackCount+A: 41 0F 95 C1        - setne r9b
Palworld-Win64-Shipping.UPalItemSlot::execGetStackCount+E: 4C 03 C8           - add r9,rax
Palworld-Win64-Shipping.UPalItemSlot::execGetStackCount+11: 4C 89 4A 20        - mov [rdx+20],r9
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.UPalItemSlot::execGetStackCount+15: 8B 81 04 01 00 00  - mov eax,[rcx+00000104]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.UPalItemSlot::execGetStackCount+1B: 41 89 00           - mov [r8],eax
Palworld-Win64-Shipping.UPalItemSlot::execGetStackCount+1E: C3                 - ret 
Palworld-Win64-Shipping.UPalItemSlot::execGetStackCount+1F: CC                 - int 3 
Palworld-Win64-Shipping.UPalItemIDManager::execGetStaticItemData: 48 89 5C 24 08     - mov [rsp+08],rbx
Palworld-Win64-Shipping.UPalItemIDManager::execGetStaticItemData+5: 48 89 6C 24 18     - mov [rsp+18],rbp
Palworld-Win64-Shipping.UPalItemIDManager::execGetStaticItemData+A: 48 89 74 24 20     - mov [rsp+20],rsi
Palworld-Win64-Shipping.UPalItemIDManager::execGetStaticItemData+F: 57                 - push rdi
Palworld-Win64-Shipping.UPalItemIDManager::execGetStaticItemData+10: 48 83 EC 20        - sub rsp,20
Palworld-Win64-Shipping.UPalItemIDManager::execGetStaticItemData+14: 33 FF              - xor edi,edi
Palworld-Win64-Shipping.UPalItemIDManager::execGetStaticItemData+16: 49 8B F0           - mov rsi,r8
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>4</ID>
              <Description>"No description"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>seeItem</Address>
              <Offsets>
                <Offset>104</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"No description"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>addItem</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Item On Pick Up"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-19
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(WoodStoneOnPickUpA,Palworld-Win64-Shipping.exe,41 8B 82 04 01 00 00) // should be unique
alloc(newmem,$1000,WoodStoneOnPickUpA)

label(code)
label(return)

newmem:

code:
  mov eax,[r10+00000104]
  jmp return

WoodStoneOnPickUpA:
  jmp newmem
  nop 2
return:
registersymbol(WoodStoneOnPickUpA)

[DISABLE]

WoodStoneOnPickUpA:
  db 41 8B 82 04 01 00 00

unregistersymbol(WoodStoneOnPickUpA)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+120

Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+FB: 8B 43 F8                          - mov eax,[rbx-08]
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+FE: 41 33 82 F8 00 00 00              - xor eax,[r10+Palworld-Win64-Shipping.CoroTask_Detail::CombinedCoroLocalState+10]
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+105: 0B C8                             - or ecx,eax
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+107: 8B 43 F4                          - mov eax,[rbx-0C]
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+10A: 41 33 82 F4 00 00 00              - xor eax,[r10+Palworld-Win64-Shipping.CoroTask_Detail::CombinedCoroLocalState+C]
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+111: 0B C8                             - or ecx,eax
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+113: 41 8B 82 00 01 00 00              - mov eax,[r10+00000100]
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+11A: 33 03                             - xor eax,[rbx]
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+11C: 0B C8                             - or ecx,eax
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+11E: 75 1B                             - jne Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+13B
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+120: 41 8B 82 04 01 00 00              - mov eax,[r10+00000104]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+127: 39 43 04                          - cmp [rbx+04],eax
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+12A: 75 0F                             - jne Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+13B
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+12C: F3 41 0F 10 82 08 01 00 00        - movss xmm0,[r10+00000108]
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+135: 0F 2E 43 08                       - ucomiss xmm0,[rbx+08]
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+139: 74 2D                             - je Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+168
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+13B: 8B 43 08                          - mov eax,[rbx+08]
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+13E: 41 89 82 08 01 00 00              - mov [r10+00000108],eax
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+145: 40 80 FF 03                       - cmp dil,03
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+149: 75 0B                             - jne Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+156
Palworld-Win64-Shipping.UPalItemContainerManager::ReflectUpdateItemInfo_ServerInternal+14B: 41 C7 82 08 01 00 00 00 00 00 00  - mov [r10+00000108],00000000
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>102</ID>
          <Description>"Mineral Hp"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-19
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MineralHpOnHitA,Palworld-Win64-Shipping.exe,ERROR: Could not find unique AOB, tried code "66 0F 6E B2 14 02 00 00") // should be unique
alloc(newmem,$1000,MineralHpOnHitA)

label(code)
label(return)

newmem:

code:
  movd xmm6,[rdx+00000214]
  jmp return

MineralHpOnHitA+01:
  jmp newmem
  nop 3
return:
registersymbol(MineralHpOnHitA)

[DISABLE]

MineralHpOnHitA+01:
  db 66 0F 6E B2 14 02 00 00

unregistersymbol(MineralHpOnHitA)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+11

Palworld-Win64-Shipping.UPalMapObjectItemContainerModule::CalcDistSquaredFromBoundsTransform+99C: 44 0F 28 BC 24 20 02 00 00  - movaps xmm15,[rsp+Palworld-Win64-Shipping.$S14]
Palworld-Win64-Shipping.UPalMapObjectItemContainerModule::CalcDistSquaredFromBoundsTransform+9A5: 48 81 C4 C0 02 00 00        - add rsp,Palworld-Win64-Shipping.Chaos::GThreadLockCheckData+20
Palworld-Win64-Shipping.UPalMapObjectItemContainerModule::CalcDistSquaredFromBoundsTransform+9AC: 5D                          - pop rbp
Palworld-Win64-Shipping.UPalMapObjectItemContainerModule::CalcDistSquaredFromBoundsTransform+9AD: C3                          - ret 
Palworld-Win64-Shipping.UPalMapObjectItemContainerModule::CalcDistSquaredFromBoundsTransform+9AE: CC                          - int 3 
Palworld-Win64-Shipping.exe+2A2B95F: CC                          - int 3 
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged: 48 83 EC 38                 - sub rsp,38
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+4: 48 8B 01                    - mov rax,[rcx]
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+7: 4C 8D 4C 24 40              - lea r9,[rsp+40]
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+C: 0F 29 74 24 20              - movaps [rsp+20],xmm6
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+11: 66 0F 6E B2 14 02 00 00     - movd xmm6,[rdx+00000214]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+19: C7 44 24 40 00 00 00 00     - mov [rsp+40],00000000
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+21: 0F 5B F6                    - cvtdq2ps xmm6,xmm6
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+24: FF 90 38 03 00 00           - call qword ptr [rax+00000338]
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+2A: 0F 57 C9                    - xorps xmm1,xmm1
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+2D: 66 0F 6E C0                 - movd xmm0,eax
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+31: 0F 5B C0                    - cvtdq2ps xmm0,xmm0
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+34: F3 0F 5C F0                 - subss xmm6,xmm0
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+38: F3 0F 5F F1                 - maxss xmm6,xmm1
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+3C: F3 0F 2C C6                 - cvttss2si eax,xmm6
Palworld-Win64-Shipping.UPalMapObjectConcreteModelBase::CalcHpOnDamaged+40: 0F 28 74 24 20              - movaps xmm6,[rsp+20]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115</ID>
          <Description>"Infinite Hp"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-20
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HpZa,Palworld-Win64-Shipping.exe,48 8B 87 E8 02 00 00 48 8D) // should be unique
alloc(newmem,$1000,HpZa)

label(code)
label(return)

newmem:

code:
mov [rdi+000002E8],(int)1500000
  mov rax,[rdi+000002E8]
  jmp return

HpZa:
  jmp newmem
  nop 2
return:
registersymbol(HpZa)

[DISABLE]

HpZa:
  db 48 8B 87 E8 02 00 00

unregistersymbol(HpZa)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+6D

Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+38: 48 89 45 20           - mov [rbp+20],rax
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+3C: 48 89 87 40 04 00 00  - mov [rdi+Palworld-Win64-Shipping.dtor_list_head+50],rax
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+43: E8 98 CF 19 FE        - call Palworld-Win64-Shipping.TMulticastScriptDelegate&lt;FWeakObjectPtr&gt;::ProcessMulticastDelegate&lt;UObject&gt;
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+48: 80 BF 68 04 00 00 00  - cmp byte ptr [rdi+Palworld-Win64-Shipping.dtor_list_head+78],00
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+4F: 48 89 5C 24 78        - mov [rsp+78],rbx
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+54: 4C 89 74 24 40        - mov [rsp+40],r14
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+59: 0F 29 74 24 30        - movaps [rsp+30],xmm6
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+5E: 0F 85 F0 00 00 00     - jne Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+154
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+64: 80 BF 98 03 00 00 02  - cmp byte ptr [rdi+00000398],02
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+6B: 74 1E                 - je Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+8B
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+6D: 48 8B 87 E8 02 00 00  - mov rax,[rdi+Palworld-Win64-Shipping.Chaos::GThreadLockCheckData+48]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+74: 48 8D 4D 20           - lea rcx,[rbp+20]
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+78: 33 D2                 - xor edx,edx
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+7A: 48 89 45 20           - mov [rbp+20],rax
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+7E: E8 0D 6C 1B 00        - call Palworld-Win64-Shipping.exe+2B8F540
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+83: 84 C0                 - test al,al
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+85: 0F 85 C9 00 00 00     - jne Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+154
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+8B: 48 8B DF              - mov rbx,rdi
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+8E: 48 8D 4D 20           - lea rcx,[rbp+20]
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+92: 33 D2                 - xor edx,edx
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+94: 48 8B 83 E8 02 00 00  - mov rax,[rbx+Palworld-Win64-Shipping.Chaos::GThreadLockCheckData+48]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>19253</ID>
          <Description>"CaptureRate"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-26
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,VCRUNTIME140.dll,89 08 C3 90 49 83 F8 20) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov [rax],ecx
  ret 
  nop 
  cmp r8,20
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 08 C3 90 49 83 F8 20

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: VCRUNTIME140.memcpy+11C

VCRUNTIME140.memcpy+106: 89 08                 - mov [rax],ecx
VCRUNTIME140.memcpy+108: 44 88 40 04           - mov [rax+04],r8b
VCRUNTIME140.memcpy+10C: C3                    - ret 
VCRUNTIME140.memcpy+10D: 48 8B 0A              - mov rcx,[rdx]
VCRUNTIME140.memcpy+110: 48 89 08              - mov [rax],rcx
VCRUNTIME140.memcpy+113: C3                    - ret 
VCRUNTIME140.memcpy+114: 0F B6 0A              - movzx ecx,byte ptr [rdx]
VCRUNTIME140.memcpy+117: 88 08                 - mov [rax],cl
VCRUNTIME140.memcpy+119: C3                    - ret 
VCRUNTIME140.memcpy+11A: 8B 0A                 - mov ecx,[rdx]
// ---------- INJECTING HERE ----------
VCRUNTIME140.memcpy+11C: 89 08                 - mov [rax],ecx
// ---------- DONE INJECTING  ----------
VCRUNTIME140.memcpy+11E: C3                    - ret 
VCRUNTIME140.memcpy+11F: 90                    - nop 
VCRUNTIME140.memcpy+120: 49 83 F8 20           - cmp r8,20
VCRUNTIME140.memcpy+124: 77 17                 - ja VCRUNTIME140.memcpy+13D
VCRUNTIME140.memcpy+126: F3 0F 6F 0A           - movdqu xmm1,[rdx]
VCRUNTIME140.memcpy+12A: F3 42 0F 6F 54 02 F0  - movdqu xmm2,[rdx+r8-10]
VCRUNTIME140.memcpy+131: F3 0F 7F 09           - movdqu [rcx],xmm1
VCRUNTIME140.memcpy+135: F3 42 0F 7F 54 01 F0  - movdqu [rcx+r8-10],xmm2
VCRUNTIME140.memcpy+13C: C3                    - ret 
VCRUNTIME140.memcpy+13D: 48 3B D1              - cmp rdx,rcx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>124</ID>
          <Description>"Some Stats [Open Menu (TAB)]"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-20
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AllStatsOnMenuA,$process,8B 81 64 03 00 00 48 83 C4 20 5B C3 E8 CD) // should be unique
alloc(newmem,$1000,AllStatsOnMenuA)

label(code)
label(return)

label(seeStats)
registersymbol(seeStats)

newmem:

mov [seeStats],rcx

code:
  mov eax,[rcx+00000364]
  jmp return

  seeStats:
  dq 0

AllStatsOnMenuA:
  jmp newmem
  nop
return:
registersymbol(AllStatsOnMenuA)

[DISABLE]

AllStatsOnMenuA:
  db 8B 81 64 03 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+12

Palworld-Win64-Shipping.exe+29CEE8B: CC                       - int 3 
Palworld-Win64-Shipping.exe+29CEE8C: CC                       - int 3 
Palworld-Win64-Shipping.exe+29CEE8D: CC                       - int 3 
Palworld-Win64-Shipping.exe+29CEE8E: CC                       - int 3 
Palworld-Win64-Shipping.exe+29CEE8F: CC                       - int 3 
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed: 40 53                    - push rbx
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+2: 48 83 EC 20              - sub rsp,20
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+6: 80 B9 28 03 00 00 00     - cmp byte ptr [rcx+00000328],00
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+D: 48 8B D9                 - mov rbx,rcx
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+10: 74 0C                    - je Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+1E
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+12: 8B 81 64 03 00 00        - mov eax,[rcx+00000364]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+18: 48 83 C4 20              - add rsp,20
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+1C: 5B                       - pop rbx
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+1D: C3                       - ret 
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+1E: E8 CD 41 16 00           - call Palworld-Win64-Shipping.UPalUtility::GetGameSetting
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+23: 66 0F 6E 8B A4 02 00 00  - movd xmm1,[rbx+Palworld-Win64-Shipping.Chaos::GThreadLockCheckData+4]
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+2B: 66 0F 6E 83 64 03 00 00  - movd xmm0,[rbx+00000364]
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+33: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+36: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+39: F3 0F 59 88 80 14 00 00  - mulss xmm1,[rax+00001480]
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::GetCraftSpeed+41: F3 0F 58 0D 8F E1 41 03  - addss xmm1,[Palworld-Win64-Shipping.exe+5DED068]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>125</ID>
              <Description>"Skill Points"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeStats</Address>
              <Offsets>
                <Offset>3E4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>126</ID>
              <Description>"Hp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeStats</Address>
              <Offsets>
                <Offset>2E8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>133</ID>
              <Description>"Max Hp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeStats</Address>
              <Offsets>
                <Offset>358</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>132</ID>
              <Description>"Hunger"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>seeStats</Address>
              <Offsets>
                <Offset>300</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>131</ID>
              <Description>"Resistance"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeStats</Address>
              <Offsets>
                <Offset>390</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>19309</ID>
          <Description>"Some Stats Based On Work Speed"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-27
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(WorkSpeedForStatsOnMenuA,$process,8B 81 64 03 00 00 48 83 C4 20 5B C3 E8 BD) // should be unique
alloc(newmem,$1000,WorkSpeedForStatsOnMenuA)

alloc(originalbytesA,9)
registersymbol(originalbytesA)

originalbytesA:
readmem(WorkSpeedForStatsOnMenuA,9)

label(bkpWorkSpeedForStatsOnMenu)
label(return)
label(seeSomeStats)


newmem:
{
  push rax
  mov rax,seeSomeStats
  mov [rax],rcx
  pop rax
}

mov [seeSomeStats],rcx

bkpWorkSpeedForStatsOnMenu:
  readmem(WorkSpeedForStatsOnMenuA,6)
 // mov eax,[rcx+00000364]
  jmp return

align 10

seeSomeStats:
  dq 0

WorkSpeedForStatsOnMenuA:
  jmp newmem
  nop
return:
registersymbol(WorkSpeedForStatsOnMenuA)
registersymbol(bkpWorkSpeedForStatsOnMenu)
registersymbol(seeSomeStats)

[DISABLE]

WorkSpeedForStatsOnMenuA:
readmem(originalbytesA,9)


unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+29BD002

Palworld-Win64-Shipping.exe+29BCFEB: CC                       - int 3 
Palworld-Win64-Shipping.exe+29BCFEC: CC                       - int 3 
Palworld-Win64-Shipping.exe+29BCFED: CC                       - int 3 
Palworld-Win64-Shipping.exe+29BCFEE: CC                       - int 3 
Palworld-Win64-Shipping.exe+29BCFEF: CC                       - int 3 
Palworld-Win64-Shipping.exe+29BCFF0: 40 53                    - push rbx
Palworld-Win64-Shipping.exe+29BCFF2: 48 83 EC 20              - sub rsp,20
Palworld-Win64-Shipping.exe+29BCFF6: 80 B9 28 03 00 00 00     - cmp byte ptr [rcx+00000328],00
Palworld-Win64-Shipping.exe+29BCFFD: 48 8B D9                 - mov rbx,rcx
Palworld-Win64-Shipping.exe+29BD000: 74 0C                    - je Palworld-Win64-Shipping.exe+29BD00E
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+29BD002: 8B 81 64 03 00 00        - mov eax,[rcx+00000364]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+29BD008: 48 83 C4 20              - add rsp,20
Palworld-Win64-Shipping.exe+29BD00C: 5B                       - pop rbx
Palworld-Win64-Shipping.exe+29BD00D: C3                       - ret 
Palworld-Win64-Shipping.exe+29BD00E: E8 BD 0B 16 00           - call Palworld-Win64-Shipping.exe+2B1DBD0
Palworld-Win64-Shipping.exe+29BD013: 66 0F 6E 8B A4 02 00 00  - movd xmm1,[rbx+000002A4]
Palworld-Win64-Shipping.exe+29BD01B: 66 0F 6E 83 64 03 00 00  - movd xmm0,[rbx+00000364]
Palworld-Win64-Shipping.exe+29BD023: 0F 5B C9                 - cvtdq2ps xmm1,xmm1
Palworld-Win64-Shipping.exe+29BD026: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
Palworld-Win64-Shipping.exe+29BD029: F3 0F 59 88 80 14 00 00  - mulss xmm1,[rax+00001480]
Palworld-Win64-Shipping.exe+29BD031: F3 0F 58 0D 2F A0 41 03  - addss xmm1,[Palworld-Win64-Shipping.D3D12SDKVersion+2F1C]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>19298</ID>
              <Description>"Skill Points"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>3E4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19296</ID>
              <Description>"Hp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>2E8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19295</ID>
              <Description>"Max Hp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>358</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19293</ID>
              <Description>"Hunger"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>300</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19294</ID>
              <Description>"Stamina"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>390</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19291</ID>
              <Description>"Work Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>seeSomeStats</Address>
              <Offsets>
                <Offset>364</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>19307</ID>
          <Description>"Exp"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-26
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ExpOnGetA,$process,8B 8F A8 02 00 00 8D 04 19 89 87 A8 02 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

label(seeExp)
registersymbol(seeExp)

label(addExp)
registersymbol(addExp)

newmem:
{
RDI
off 60 my (int)4 en (int)3
off 64 my (int)24 en (int)4
off 70 my (int)2 en (int)0
off 74 my (int)4 en (int)0
off 84 my (int)4 en (int)0
off A0 my (int)4 en (int)1
off A4 my (int)0 en (int)4
off B0 my (int)1 en (int)0
off B4 my (int)4 en (int)0
off C0 my (int)1 en (int)0
off 568 my (int)1 en (int)0
off 454 my (int)2 en (int)0
off 400 my (int)3 en (int)0
off 3DC my (int)1120403456 en (int)1125515264
}

cmp [rdi+60],(int)4
jne code


push r15
mov r15,addExp
mov r15d,dword ptr [r15]
add [rdi+000002A8],r15d
pop r15

mov [seeExp],rdi

code:
  mov ecx,[rdi+000002A8]
  lea eax,[rcx+rbx]
  mov [rdi+000002A8],eax
  jmp return

  addExp:
  dd (int)100

  seeExp:
  dq 0

ExpOnGetA:
  jmp far newmem
  nop
return:
registersymbol(ExpOnGetA)

[DISABLE]

ExpOnGetA:
  db 8B 8F A8 02 00 00 8D 04 19 89 87 A8 02 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+29B16E6

Palworld-Win64-Shipping.exe+29B16CA: 57                 - push rdi
Palworld-Win64-Shipping.exe+29B16CB: 48 83 EC 20        - sub rsp,20
Palworld-Win64-Shipping.exe+29B16CF: 41 0F B6 F0        - movzx esi,r8b
Palworld-Win64-Shipping.exe+29B16D3: 8B DA              - mov ebx,edx
Palworld-Win64-Shipping.exe+29B16D5: 48 8B F9           - mov rdi,rcx
Palworld-Win64-Shipping.exe+29B16D8: E8 A3 2B 01 00     - call Palworld-Win64-Shipping.exe+29C4280
Palworld-Win64-Shipping.exe+29B16DD: 84 C0              - test al,al
Palworld-Win64-Shipping.exe+29B16DF: 75 2F              - jne Palworld-Win64-Shipping.exe+29B1710
Palworld-Win64-Shipping.exe+29B16E1: 83 FB 01           - cmp ebx,01
Palworld-Win64-Shipping.exe+29B16E4: 7C 2A              - jl Palworld-Win64-Shipping.exe+29B1710
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+29B16E6: 8B 8F A8 02 00 00  - mov ecx,[rdi+000002A8]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+29B16EC: 8D 04 19           - lea eax,[rcx+rbx]
Palworld-Win64-Shipping.exe+29B16EF: 89 87 A8 02 00 00  - mov [rdi+000002A8],eax
Palworld-Win64-Shipping.exe+29B16F5: 40 84 F6           - test sil,sil
Palworld-Win64-Shipping.exe+29B16F8: 74 16              - je Palworld-Win64-Shipping.exe+29B1710
Palworld-Win64-Shipping.exe+29B16FA: 89 4C 24 4C        - mov [rsp+4C],ecx
Palworld-Win64-Shipping.exe+29B16FE: 48 8D 54 24 48     - lea rdx,[rsp+48]
Palworld-Win64-Shipping.exe+29B1703: 48 8D 4F 48        - lea rcx,[rdi+48]
Palworld-Win64-Shipping.exe+29B1707: 89 5C 24 48        - mov [rsp+48],ebx
Palworld-Win64-Shipping.exe+29B170B: E8 80 41 1C FE     - call Palworld-Win64-Shipping.exe+B75890
Palworld-Win64-Shipping.exe+29B1710: 48 8B 5C 24 30     - mov rbx,[rsp+30]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>19258</ID>
          <Description>"Difficult Changes"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-26
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CaptureRateOnSelectedDiffMenuA,$process,0C 8B 43 10 89 47 10 8B 43 14 89 47 14 8B 43 18 89 47 18 8B 43 1C 89 47 1C 8B 43 20 89 47 20 8B) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

label(seeDiffChanges)
registersymbol(seeDiffChanges)

newmem:
{
RBX
off 138 my (int)1
off 13C my (int)4
off 164 my (int)1083510784
off 16C my (int)1078984704
off 174 my (int)1133445120
off 178 my (int)1147994112
off 17C my (int)1133445120
off 180 my (int)1147994112
}

cmp [rbx+138],(int)1
jne code

mov [seeDiffChanges],rbx

  mov eax,[rbx+10]
  mov [rdi+10],eax
  mov eax,[rbx+14]
  mov [rdi+14],eax
  mov eax,[rbx+18]
  jmp return

code:
  mov eax,[rbx+10]
  mov [rdi+10],eax
  mov eax,[rbx+14]
  mov [rdi+14],eax
  mov eax,[rbx+18]
  jmp return

  seeDiffChanges:
  dq 0

CaptureRateOnSelectedDiffMenuA+01:
  jmp far newmem
  nop
return:
registersymbol(CaptureRateOnSelectedDiffMenuA)

[DISABLE]

CaptureRateOnSelectedDiffMenuA+01:
  db 8B 43 10 89 47 10 8B 43 14 89 47 14 8B 43 18

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2781C76

Palworld-Win64-Shipping.exe+2781C54: 48 8D 1C 2E           - lea rbx,[rsi+rbp]
Palworld-Win64-Shipping.exe+2781C58: 48 8B FD              - mov rdi,rbp
Palworld-Win64-Shipping.exe+2781C5B: 48 81 C5 28 01 00 00  - add rbp,00000128
Palworld-Win64-Shipping.exe+2781C62: 88 07                 - mov [rdi],al
Palworld-Win64-Shipping.exe+2781C64: 8B 43 04              - mov eax,[rbx+04]
Palworld-Win64-Shipping.exe+2781C67: 89 47 04              - mov [rdi+04],eax
Palworld-Win64-Shipping.exe+2781C6A: 8B 43 08              - mov eax,[rbx+08]
Palworld-Win64-Shipping.exe+2781C6D: 89 47 08              - mov [rdi+08],eax
Palworld-Win64-Shipping.exe+2781C70: 8B 43 0C              - mov eax,[rbx+0C]
Palworld-Win64-Shipping.exe+2781C73: 89 47 0C              - mov [rdi+0C],eax
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2781C76: 8B 43 10              - mov eax,[rbx+10]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2781C79: 89 47 10              - mov [rdi+10],eax
Palworld-Win64-Shipping.exe+2781C7C: 8B 43 14              - mov eax,[rbx+14]
Palworld-Win64-Shipping.exe+2781C7F: 89 47 14              - mov [rdi+14],eax
Palworld-Win64-Shipping.exe+2781C82: 8B 43 18              - mov eax,[rbx+18]
Palworld-Win64-Shipping.exe+2781C85: 89 47 18              - mov [rdi+18],eax
Palworld-Win64-Shipping.exe+2781C88: 8B 43 1C              - mov eax,[rbx+1C]
Palworld-Win64-Shipping.exe+2781C8B: 89 47 1C              - mov [rdi+1C],eax
Palworld-Win64-Shipping.exe+2781C8E: 8B 43 20              - mov eax,[rbx+20]
Palworld-Win64-Shipping.exe+2781C91: 89 47 20              - mov [rdi+20],eax
Palworld-Win64-Shipping.exe+2781C94: 8B 43 24              - mov eax,[rbx+24]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>19259</ID>
              <Description>"Day Time Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>04</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19263</ID>
              <Description>"Night Time Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>08</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19264</ID>
              <Description>"Exp Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>0C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19262</ID>
              <Description>"Pal Capture Rate 1371AFBD2F0"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19265</ID>
              <Description>"Pal Appearance Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19266</ID>
              <Description>"Damage from Pals Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19267</ID>
              <Description>"Damage to Pals Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19268</ID>
              <Description>"Pal Hunger Depletion Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>38</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19269</ID>
              <Description>"Pal Stamina Reduction Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>3C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19270</ID>
              <Description>"Pal Natural Hp Recovery"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19271</ID>
              <Description>"Pal Sleep Hp Regeneration Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19272</ID>
              <Description>"Damage from Player Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19273</ID>
              <Description>"Damage to Player Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19274</ID>
              <Description>"Player Hunger Depletation Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19275</ID>
              <Description>"Player Stamina Reduction Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>2C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19276</ID>
              <Description>"Player Natural Hp Recover Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19277</ID>
              <Description>"Player Sleeep Hp Regeneration Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19278</ID>
              <Description>"Damage to Structure Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>48</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19279</ID>
              <Description>"Structure Deterioration Rate"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>4C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19280</ID>
              <Description>"Max Number of Dropped Items in a World"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>68</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19281</ID>
              <Description>"Ghaterable Items Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>50</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19282</ID>
              <Description>"Ghaterable Objects Health Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>54</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19283</ID>
              <Description>"Gatherable Objects Respawn Interval"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>58</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19284</ID>
              <Description>"Dropped Items Multiplier ( from Enemies)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>5C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19285</ID>
              <Description>"Time (h) to incubate Massive Egg."</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>88</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19261</ID>
              <Description>"Max Guild Members"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>84</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19260</ID>
              <Description>"Max Pals Working at Base"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>seeDiffChanges</Address>
              <Offsets>
                <Offset>74</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>116</ID>
          <Description>"Hp"</Description>
          <Options moActivateChildrenAsWell="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-20
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HpZb,Palworld-Win64-Shipping.exe,48 8B 87 E8 02 00 00 48 8D) // should be unique
alloc(newmem,$1000,HpZb)

label(code)
label(return)

label(seeStats)
registersymbol(seeStats)

newmem:

mov [seeStats],rdi

code:
  mov rax,[rdi+000002E8]
  jmp return

  seeStats:
  dq 0

HpZb:
  jmp newmem
  nop 2
return:
registersymbol(HpZb)

[DISABLE]

HpZb:
  db 48 8B 87 E8 02 00 00

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+6D

Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+38: 48 89 45 20           - mov [rbp+20],rax
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+3C: 48 89 87 40 04 00 00  - mov [rdi+Palworld-Win64-Shipping.dtor_list_head+50],rax
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+43: E8 98 CF 19 FE        - call Palworld-Win64-Shipping.TMulticastScriptDelegate&lt;FWeakObjectPtr&gt;::ProcessMulticastDelegate&lt;UObject&gt;
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+48: 80 BF 68 04 00 00 00  - cmp byte ptr [rdi+Palworld-Win64-Shipping.dtor_list_head+78],00
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+4F: 48 89 5C 24 78        - mov [rsp+78],rbx
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+54: 4C 89 74 24 40        - mov [rsp+40],r14
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+59: 0F 29 74 24 30        - movaps [rsp+30],xmm6
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+5E: 0F 85 F0 00 00 00     - jne Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+154
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+64: 80 BF 98 03 00 00 02  - cmp byte ptr [rdi+00000398],02
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+6B: 74 1E                 - je Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+8B
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+6D: 48 8B 87 E8 02 00 00  - mov rax,[rdi+Palworld-Win64-Shipping.Chaos::GThreadLockCheckData+48]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+74: 48 8D 4D 20           - lea rcx,[rbp+20]
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+78: 33 D2                 - xor edx,edx
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+7A: 48 89 45 20           - mov [rbp+20],rax
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+7E: E8 0D 6C 1B 00        - call Palworld-Win64-Shipping.exe+2B8F540
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+83: 84 C0                 - test al,al
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+85: 0F 85 C9 00 00 00     - jne Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+154
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+8B: 48 8B DF              - mov rbx,rdi
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+8E: 48 8D 4D 20           - lea rcx,[rbp+20]
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+92: 33 D2                 - xor edx,edx
Palworld-Win64-Shipping.UPalIndividualCharacterParameter::NaturalUpdateSaveParameter_Health+94: 48 8B 83 E8 02 00 00  - mov rax,[rbx+Palworld-Win64-Shipping.Chaos::GThreadLockCheckData+48]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>117</ID>
              <Description>"Current Hp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeStats</Address>
              <Offsets>
                <Offset>2E8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>120</ID>
              <Description>"Max Hp"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeStats</Address>
              <Offsets>
                <Offset>358</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>119</ID>
              <Description>"Hunger"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>seeStats</Address>
              <Offsets>
                <Offset>300</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>121</ID>
              <Description>"Craft Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>seeStats</Address>
              <Offsets>
                <Offset>364</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"yellow stamina"</Description>
          <VariableType>Float</VariableType>
          <Address>1B76614B4C4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17071</ID>
          <Description>"p speed"</Description>
          <VariableType>Float</VariableType>
          <Address>7FF7EC7900E8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19250</ID>
          <Description>"capt rate"</Description>
          <VariableType>Float</VariableType>
          <Address>23411FA48D0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19319</ID>
          <Description>"hunger"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>1590AC2C380</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19325</ID>
          <Description>"capture rate on diff changes"</Description>
          <VariableType>Float</VariableType>
          <Address>13DD52BD2F0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>88135</ID>
          <Description>"walk spd"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>2A4C1EC5F28</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>88138</ID>
          <Description>"run spd"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>2A4C1EC6CF0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"Item On Pick Up"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>1B6D91F7104</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Stamina"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>1B6729804F0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>100</ID>
          <Description>"Mineral Hp"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>1B6C88D6114</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>106</ID>
          <Description>"wood hp"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>1B6AE3AD3D0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>110</ID>
          <Description>"Hp"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>1B6F6055448</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>118</ID>
          <Description>"hp"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>1B6F6055448</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>134</ID>
          <Description>"No Description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>1B6F6835C40</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17068</ID>
          <Description>"tec points"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>2E92F697140</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19317</ID>
          <Description>"work speed"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>1590AC2C3E4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>88167</ID>
          <Description>"hungr"</Description>
          <VariableType>Float</VariableType>
          <Address>2DBA877FB10</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>88189</ID>
          <Description>"item quan"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>1C709639204</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>88667</ID>
          <Description>"Group 2"</Description>
          <GroupHeader>1</GroupHeader>
          <Address>0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>90337</ID>
          <Description>"Stat Grades"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>1FFCEDBC994</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>90361</ID>
          <Description>"BasePalQuanA"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-29
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(BasePalQuanA,Palworld-Win64-Shipping.exe,8B 48 08 89 4F 08 8B 48 0C 89 4F 0C 8B 40) // should be unique
alloc(newmem,$1000,BasePalQuanA)

label(code)
label(return)

newmem:
mov [rax+08],(int)30
code:
  mov ecx,[rax+08]
  mov [rdi+08],ecx
  jmp return

BasePalQuanA:
  jmp newmem
  nop
return:
registersymbol(BasePalQuanA)

[DISABLE]

BasePalQuanA:
  db 8B 48 08 89 4F 08

unregistersymbol(BasePalQuanA)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2A621E1

Palworld-Win64-Shipping.exe+2A621B8: 89 53 30              - mov [rbx+30],edx
Palworld-Win64-Shipping.exe+2A621BB: 3B F2                 - cmp esi,edx
Palworld-Win64-Shipping.exe+2A621BD: 4C 8D 44 24 38        - lea r8,[rsp+38]
Palworld-Win64-Shipping.exe+2A621C2: 48 8B CB              - mov rcx,rbx
Palworld-Win64-Shipping.exe+2A621C5: 0F 4C D6              - cmovl edx,esi
Palworld-Win64-Shipping.exe+2A621C8: E8 43 C4 FF FF        - call Palworld-Win64-Shipping.exe+2A5E610
Palworld-Win64-Shipping.exe+2A621CD: 48 8B 5C 24 40        - mov rbx,[rsp+40]
Palworld-Win64-Shipping.exe+2A621D2: 48 8D 0D 77 B2 EA 03  - lea rcx,[Palworld-Win64-Shipping.exe+690D450]
Palworld-Win64-Shipping.exe+2A621D9: 48 8B 74 24 48        - mov rsi,[rsp+48]
Palworld-Win64-Shipping.exe+2A621DE: 48 89 0F              - mov [rdi],rcx
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2A621E1: 8B 48 08              - mov ecx,[rax+08]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2A621E4: 89 4F 08              - mov [rdi+08],ecx
Palworld-Win64-Shipping.exe+2A621E7: 8B 48 0C              - mov ecx,[rax+0C]
Palworld-Win64-Shipping.exe+2A621EA: 89 4F 0C              - mov [rdi+0C],ecx
Palworld-Win64-Shipping.exe+2A621ED: 8B 40 10              - mov eax,[rax+10]
Palworld-Win64-Shipping.exe+2A621F0: 89 47 10              - mov [rdi+10],eax
Palworld-Win64-Shipping.exe+2A621F3: 48 8B C7              - mov rax,rdi
Palworld-Win64-Shipping.exe+2A621F6: 48 83 C4 20           - add rsp,20
Palworld-Win64-Shipping.exe+2A621FA: 5F                    - pop rdi
Palworld-Win64-Shipping.exe+2A621FB: C3                    - ret 
Palworld-Win64-Shipping.exe+2A621FC: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>90362</ID>
          <Description>"Pal Quantity On [V]"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-29
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(BasePalQuanB,$process,8B 48 0C 89 4F 0C 8B 40) // should be unique
alloc(newmem,$1000,BasePalQuanB)

label(code)
label(return)

label(setBasePalQuantity)
registersymbol(setBasePalQuantity)

newmem:

push r15
mov r15,setBasePalQuantity
mov r15d,dword ptr [r15]
mov [rax+0C],r15d
pop r15


code:
  mov ecx,[rax+0C]
  mov [rdi+0C],ecx
  jmp return

  setBasePalQuantity:
  dd (int)11

BasePalQuanB:
  jmp newmem
  nop
return:
registersymbol(BasePalQuanB)

[DISABLE]

BasePalQuanB:
  db 8B 48 0C 89 4F 0C

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2A621E7

Palworld-Win64-Shipping.exe+2A621BD: 4C 8D 44 24 38        - lea r8,[rsp+38]
Palworld-Win64-Shipping.exe+2A621C2: 48 8B CB              - mov rcx,rbx
Palworld-Win64-Shipping.exe+2A621C5: 0F 4C D6              - cmovl edx,esi
Palworld-Win64-Shipping.exe+2A621C8: E8 43 C4 FF FF        - call Palworld-Win64-Shipping.exe+2A5E610
Palworld-Win64-Shipping.exe+2A621CD: 48 8B 5C 24 40        - mov rbx,[rsp+40]
Palworld-Win64-Shipping.exe+2A621D2: 48 8D 0D 77 B2 EA 03  - lea rcx,[Palworld-Win64-Shipping.exe+690D450]
Palworld-Win64-Shipping.exe+2A621D9: 48 8B 74 24 48        - mov rsi,[rsp+48]
Palworld-Win64-Shipping.exe+2A621DE: 48 89 0F              - mov [rdi],rcx
Palworld-Win64-Shipping.exe+2A621E1: 8B 48 08              - mov ecx,[rax+08]
Palworld-Win64-Shipping.exe+2A621E4: 89 4F 08              - mov [rdi+08],ecx
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2A621E7: 8B 48 0C              - mov ecx,[rax+0C]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2A621EA: 89 4F 0C              - mov [rdi+0C],ecx
Palworld-Win64-Shipping.exe+2A621ED: 8B 40 10              - mov eax,[rax+10]
Palworld-Win64-Shipping.exe+2A621F0: 89 47 10              - mov [rdi+10],eax
Palworld-Win64-Shipping.exe+2A621F3: 48 8B C7              - mov rax,rdi
Palworld-Win64-Shipping.exe+2A621F6: 48 83 C4 20           - add rsp,20
Palworld-Win64-Shipping.exe+2A621FA: 5F                    - pop rdi
Palworld-Win64-Shipping.exe+2A621FB: C3                    - ret 
Palworld-Win64-Shipping.exe+2A621FC: CC                    - int 3 
Palworld-Win64-Shipping.exe+2A621FD: CC                    - int 3 
Palworld-Win64-Shipping.exe+2A621FE: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>90364</ID>
          <Description>"In Base Pals Quantity [On Box Creation] {Don't Upgrade Base}"</Description>
          <Options moHideChildren="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-29
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PalAuantityOnBaseCreationA,$process,8B 68 0C EB 05) // should be unique
alloc(newmem,$1000,PalAuantityOnBaseCreationA)

label(code)
label(return)

label(setInBasePalsQuant)
registersymbol(setInBasePalsQuant)

aobscanmodule(PalsInBaseQuantityOnV_UpgradeMenu,$process,8B 48 0C 89 4F 0C 8B 40) // should be unique
alloc(newmem2,$1000,PalsInBaseQuantityOnV_UpgradeMenu)

label(code2)
label(return2)


newmem:

push r15
mov r15,setInBasePalsQuant
mov r15d,dword ptr [r15]
mov [rax+0C],r15d
pop r15


code:
  mov ebp,[rax+0C]
  jmp Palworld-Win64-Shipping.exe+294A421
  jmp return

  setInBasePalsQuant:
  dd (int)100

PalAuantityOnBaseCreationA:
  jmp newmem
return:
registersymbol(PalAuantityOnBaseCreationA)




newmem2:

push r15
mov r15,setInBasePalsQuant
mov r15d,dword ptr [r15]
mov [rax+0C],r15d
pop r15


code2:
  mov ecx,[rax+0C]
  mov [rdi+0C],ecx
  jmp return2


PalsInBaseQuantityOnV_UpgradeMenu:
  jmp newmem2
  nop
return2:
registersymbol(PalsInBaseQuantityOnV_UpgradeMenu)

[DISABLE]

PalAuantityOnBaseCreationA:
  db 8B 68 0C EB 05

unregistersymbol(*)
dealloc(*)


PalsInBaseQuantityOnV_UpgradeMenu:
  db 8B 48 0C 89 4F 0C

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+294A417

Palworld-Win64-Shipping.exe+294A3EA: 0F 11 81 B0 00 00 00  - movups [rcx+000000B0],xmm0
Palworld-Win64-Shipping.exe+294A3F1: 41 0F 28 49 50        - movaps xmm1,[r9+50]
Palworld-Win64-Shipping.exe+294A3F6: 0F 11 89 C0 00 00 00  - movups [rcx+000000C0],xmm1
Palworld-Win64-Shipping.exe+294A3FD: 41 83 F8 FF           - cmp r8d,-01
Palworld-Win64-Shipping.exe+294A401: 75 1E                 - jne Palworld-Win64-Shipping.exe+294A421
Palworld-Win64-Shipping.exe+294A403: 48 8D 54 24 20        - lea rdx,[rsp+20]
Palworld-Win64-Shipping.exe+294A408: 44 89 44 24 20        - mov [rsp+20],r8d
Palworld-Win64-Shipping.exe+294A40D: E8 4E A0 FF FF        - call Palworld-Win64-Shipping.exe+2944460
Palworld-Win64-Shipping.exe+294A412: 48 85 C0              - test rax,rax
Palworld-Win64-Shipping.exe+294A415: 74 05                 - je Palworld-Win64-Shipping.exe+294A41C
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+294A417: 8B 68 0C              - mov ebp,[rax+0C]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+294A41A: EB 05                 - jmp Palworld-Win64-Shipping.exe+294A421
Palworld-Win64-Shipping.exe+294A41C: BD 01 00 00 00        - mov ebp,00000001
Palworld-Win64-Shipping.exe+294A421: 48 8B CE              - mov rcx,rsi
Palworld-Win64-Shipping.exe+294A424: E8 C7 BD 1E 00        - call Palworld-Win64-Shipping.exe+2B361F0
Palworld-Win64-Shipping.exe+294A429: 48 8B CE              - mov rcx,rsi
Palworld-Win64-Shipping.exe+294A42C: 8B 58 74              - mov ebx,[rax+74]
Palworld-Win64-Shipping.exe+294A42F: E8 CC 3F 1E 00        - call Palworld-Win64-Shipping.exe+2B2E400
Palworld-Win64-Shipping.exe+294A434: 0F 10 05 AD B4 D5 05  - movups xmm0,[Palworld-Win64-Shipping.exe+86A58E8]
Palworld-Win64-Shipping.exe+294A43B: 3B EB                 - cmp ebp,ebx
Palworld-Win64-Shipping.exe+294A43D: 4C 8D 4C 24 38        - lea r9,[rsp+38]
}


{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2A621E7

Palworld-Win64-Shipping.exe+2A621BD: 4C 8D 44 24 38        - lea r8,[rsp+38]
Palworld-Win64-Shipping.exe+2A621C2: 48 8B CB              - mov rcx,rbx
Palworld-Win64-Shipping.exe+2A621C5: 0F 4C D6              - cmovl edx,esi
Palworld-Win64-Shipping.exe+2A621C8: E8 43 C4 FF FF        - call Palworld-Win64-Shipping.exe+2A5E610
Palworld-Win64-Shipping.exe+2A621CD: 48 8B 5C 24 40        - mov rbx,[rsp+40]
Palworld-Win64-Shipping.exe+2A621D2: 48 8D 0D 77 B2 EA 03  - lea rcx,[Palworld-Win64-Shipping.exe+690D450]
Palworld-Win64-Shipping.exe+2A621D9: 48 8B 74 24 48        - mov rsi,[rsp+48]
Palworld-Win64-Shipping.exe+2A621DE: 48 89 0F              - mov [rdi],rcx
BasePalQuanA: 8B 48 08              - mov ecx,[rax+08]
Palworld-Win64-Shipping.exe+2A621E4: 89 4F 08              - mov [rdi+08],ecx
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2A621E7: 8B 48 0C              - mov ecx,[rax+0C]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2A621EA: 89 4F 0C              - mov [rdi+0C],ecx
Palworld-Win64-Shipping.exe+2A621ED: 8B 40 10              - mov eax,[rax+10]
Palworld-Win64-Shipping.exe+2A621F0: 89 47 10              - mov [rdi+10],eax
Palworld-Win64-Shipping.exe+2A621F3: 48 8B C7              - mov rax,rdi
Palworld-Win64-Shipping.exe+2A621F6: 48 83 C4 20           - add rsp,20
Palworld-Win64-Shipping.exe+2A621FA: 5F                    - pop rdi
Palworld-Win64-Shipping.exe+2A621FB: C3                    - ret
Palworld-Win64-Shipping.exe+2A621FC: CC                    - int 3
Palworld-Win64-Shipping.exe+2A621FD: CC                    - int 3
Palworld-Win64-Shipping.exe+2A621FE: CC                    - int 3
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>90373</ID>
              <Description>"for "In Base Pals Quantity" change in "Difficult Changes" "Max Pals Working at Base""</Description>
              <Color>FF8080</Color>
              <GroupHeader>1</GroupHeader>
              <Address/>
            </CheatEntry>
            <CheatEntry>
              <ID>90376</ID>
              <Description>"if you use this DON'T UPGRADE BASE (you lost pals)"</Description>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
              <Address/>
            </CheatEntry>
            <CheatEntry>
              <ID>90370</ID>
              <Description>"set Pals Quantity"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>808000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>setInBasePalsQuant</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>90374</ID>
          <Description>"set Something Like 1000 then when you are in game active "In Base Pals Quantity""</Description>
          <Color>FF8080</Color>
          <GroupHeader>1</GroupHeader>
          <Address/>
        </CheatEntry>
        <CheatEntry>
          <ID>90375</ID>
          <Description>"then in "set Pals Quantity" set a value"</Description>
          <Color>FF8080</Color>
          <GroupHeader>1</GroupHeader>
          <Address/>
        </CheatEntry>
        <CheatEntry>
          <ID>90381</ID>
          <Description>"Lifmunk"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>1955765FB28</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>90385</ID>
          <Description>"inst build craft"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-01
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,Palworld-Win64-Shipping.exe,F3 0F 10 99 40 03 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  push rbx
  mov rbx, rcx
  mov [rcx+00000340], (float)1
  movss xmm3,[rcx+00000340]
    pop rbx
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 10 99 40 03 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2B9D7F0

Palworld-Win64-Shipping.exe+2B9D7D8: 5F                       - pop rdi
Palworld-Win64-Shipping.exe+2B9D7D9: E9 52 FD E4 FF           - jmp Palworld-Win64-Shipping.exe+29ED530
Palworld-Win64-Shipping.exe+2B9D7DE: F3 0F 10 05 82 48 28 03  - movss xmm0,[Palworld-Win64-Shipping.D3D12SDKVersion+2F1C]
Palworld-Win64-Shipping.exe+2B9D7E6: 48 83 C4 20              - add rsp,20
Palworld-Win64-Shipping.exe+2B9D7EA: 5F                       - pop rdi
Palworld-Win64-Shipping.exe+2B9D7EB: C3                       - ret 
Palworld-Win64-Shipping.exe+2B9D7EC: CC                       - int 3 
Palworld-Win64-Shipping.exe+2B9D7ED: CC                       - int 3 
Palworld-Win64-Shipping.exe+2B9D7EE: CC                       - int 3 
Palworld-Win64-Shipping.exe+2B9D7EF: CC                       - int 3 
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2B9D7F0: F3 0F 10 99 40 03 00 00  - movss xmm3,[rcx+00000340]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2B9D7F8: 0F 28 C3                 - movaps xmm0,xmm3
Palworld-Win64-Shipping.exe+2B9D7FB: 0F 54 05 AE 3E 2A 03     - andps xmm0,[Palworld-Win64-Shipping.exe+5E416B0]
Palworld-Win64-Shipping.exe+2B9D802: 0F 2F 05 AF 3A 2A 03     - comiss xmm0,[Palworld-Win64-Shipping.exe+5E412B8]
Palworld-Win64-Shipping.exe+2B9D809: 77 04                    - ja Palworld-Win64-Shipping.exe+2B9D80F
Palworld-Win64-Shipping.exe+2B9D80B: 0F 57 C0                 - xorps xmm0,xmm0
Palworld-Win64-Shipping.exe+2B9D80E: C3                       - ret 
Palworld-Win64-Shipping.exe+2B9D80F: 80 B9 BC 01 00 00 01     - cmp byte ptr [rcx+000001BC],01
Palworld-Win64-Shipping.exe+2B9D816: F3 0F 10 91 44 03 00 00  - movss xmm2,[rcx+00000344]
Palworld-Win64-Shipping.exe+2B9D81E: 75 2E                    - jne Palworld-Win64-Shipping.exe+2B9D84E
Palworld-Win64-Shipping.exe+2B9D820: F3 0F 58 91 48 03 00 00  - addss xmm2,[rcx+00000348]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Item On Pick Up"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-19
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ItemOnPickUpAa,$process,44 89 B3 04 01 00 00 45) // should be unique
alloc(newmem,$1000,ItemOnPickUpAa)

alloc(originalbytesAt,9)
registersymbol(originalbytesAt)

originalbytesAt:
readmem(ItemOnPickUpAa,9)

label(code)
label(return)

label(addItemV2)
registersymbol(addItemV2)

newmem:

add r14d,[addItemV2]

code:
  mov [rbx+00000104],r14d
  jmp return

  addItemV2:
  dd (int)1

ItemOnPickUpAa:
  jmp newmem
  nop 2
return:
registersymbol(ItemOnPickUpAa)

[DISABLE]

ItemOnPickUpAa:
readmem(originalbytesAt,9)
  //db 44 89 B3 04 01 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+D3

Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+AC: E8 0F 82 FF FF           - call Palworld-Win64-Shipping.UPalItemSlot::ResetUpdateDurabilityDelegate
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+B1: 44 8B 45 BC              - mov r8d,[rbp-44]
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+B5: 8B 55 B8                 - mov edx,[rbp-48]
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+B8: 8B 4D B0                 - mov ecx,[rbp-50]
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+BB: 0F 10 06                 - movups xmm0,[rsi]
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+BE: 0F 11 07                 - movups [rdi],xmm0
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+C1: 0F 10 4E 10              - movups xmm1,[rsi+10]
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+C5: 0F 11 4F 10              - movups [rdi+10],xmm1
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+C9: F2 0F 10 46 20           - movsd xmm0,[rsi+20]
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+CE: F2 0F 11 47 20           - movsd [rdi+20],xmm0
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+D3: 44 89 B3 04 01 00 00     - mov [rbx+00000104],r14d
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+DA: 45 85 F6                 - test r14d,r14d
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+DD: 7F 22                    - jg Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+101
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+DF: 0F 10 05 CA 12 C8 05     - movups xmm0,[Palworld-Win64-Shipping.FPalItemId::INVALID]
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+E6: 0F 11 07                 - movups [rdi],xmm0
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+E9: 0F 10 0D D0 12 C8 05     - movups xmm1,[Palworld-Win64-Shipping.FPalItemId::INVALID+10]
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+F0: 0F 11 4F 10              - movups [rdi+10],xmm1
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+F4: F2 0F 10 05 D4 12 C8 05  - movsd xmm0,[Palworld-Win64-Shipping.FPalItemId::INVALID+20]
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+FC: F2 0F 11 47 20           - movsd [rdi+20],xmm0
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+101: 8B B3 F4 00 00 00        - mov esi,[rbx+Palworld-Win64-Shipping.CoroTask_Detail::CombinedCoroLocalState+C]
Palworld-Win64-Shipping.UPalItemSlot::UpdateItem_ServerInternal+107: 8B C6                    - mov eax,esi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>90386</ID>
          <Description>"it on pck up"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>2C90A6FDA04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>90339</ID>
          <Description>"Stat Grades"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-01-29
  Author : SilverRabbit90

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(StatGradesOnStsPtsUseAa,$process,44 89 7A 08 E9 6? FF FF FF) // should be unique
alloc(newmem,$1000,StatGradesOnStsPtsUseAa)

alloc(originalbytesCa,9)
registersymbol(originalbytesCa)

originalbytesCa:
readmem(StatGradesOnStsPtsUseAa,9)

//label(code)
label(bkpStats)
label(return)

label(seeStatGrade)
registersymbol(seeStatGrade)

newmem:

mov [seeStatGrade],rdx

bkpStats:
  readmem(StatGradesOnStsPtsUseAa,9)

{
code:
  mov [rdx+08],r15d
  jmp Palworld-Win64-Shipping.exe+29E3E21
}
  jmp return

  seeStatGrade:
  dq 0

StatGradesOnStsPtsUseAa:
  jmp newmem
  nop 4
return:
registersymbol(StatGradesOnStsPtsUseAa)
registersymbol(bkpStats)

[DISABLE]

StatGradesOnStsPtsUseAa:
readmem(originalbytesCa,9)
  //db 44 89 7A 08 E9 68 FF FF FF

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+29E3EB0

Palworld-Win64-Shipping.exe+29E3E93: 48 3B F7              - cmp rsi,rdi
Palworld-Win64-Shipping.exe+29E3E96: 74 4C                 - je Palworld-Win64-Shipping.exe+29E3EE4
Palworld-Win64-Shipping.exe+29E3E98: 48 8B 0B              - mov rcx,[rbx]
Palworld-Win64-Shipping.exe+29E3E9B: 0F 1F 44 00 00        - nop dword ptr [rax+rax+00]
Palworld-Win64-Shipping.exe+29E3EA0: 48 3B 08              - cmp rcx,[rax]
Palworld-Win64-Shipping.exe+29E3EA3: 74 14                 - je Palworld-Win64-Shipping.exe+29E3EB9
Palworld-Win64-Shipping.exe+29E3EA5: 48 83 C0 0C           - add rax,0C
Palworld-Win64-Shipping.exe+29E3EA9: 48 3B C7              - cmp rax,rdi
Palworld-Win64-Shipping.exe+29E3EAC: 75 F2                 - jne Palworld-Win64-Shipping.exe+29E3EA0
Palworld-Win64-Shipping.exe+29E3EAE: EB 34                 - jmp Palworld-Win64-Shipping.exe+29E3EE4
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+29E3EB0: 44 89 7A 08           - mov [rdx+08],r15d
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+29E3EB4: E9 68 FF FF FF        - jmp Palworld-Win64-Shipping.exe+29E3E21
Palworld-Win64-Shipping.exe+29E3EB9: 8B 53 08              - mov edx,[rbx+08]
Palworld-Win64-Shipping.exe+29E3EBC: 44 8B 40 08           - mov r8d,[rax+08]
Palworld-Win64-Shipping.exe+29E3EC0: 41 3B D0              - cmp edx,r8d
Palworld-Win64-Shipping.exe+29E3EC3: 74 1F                 - je Palworld-Win64-Shipping.exe+29E3EE4
Palworld-Win64-Shipping.exe+29E3EC5: 48 89 4C 24 20        - mov [rsp+20],rcx
Palworld-Win64-Shipping.exe+29E3ECA: 49 8D 8E 08 01 00 00  - lea rcx,[r14+00000108]
Palworld-Win64-Shipping.exe+29E3ED1: 89 54 24 2C           - mov [rsp+2C],edx
Palworld-Win64-Shipping.exe+29E3ED5: 48 8D 54 24 20        - lea rdx,[rsp+20]
Palworld-Win64-Shipping.exe+29E3EDA: 44 89 44 24 28        - mov [rsp+28],r8d
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>90335</ID>
          <Description>"Group 3"</Description>
          <GroupHeader>1</GroupHeader>
          <Address>0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>103834</ID>
          <Description>"Skills Cooldown"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-01
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PalSkillsCooldownOnUseZaa,$process,F3 0F 11 43 5C 73) // should be unique
alloc(newmem,$1000,PalSkillsCooldownOnUseZaa)

label(code)
label(return)

newmem:

code:
  movss [rbx+5C],xmm0
  jmp return

PalSkillsCooldownOnUseZaa:
  jmp newmem
return:
registersymbol(PalSkillsCooldownOnUseZaa)

[DISABLE]

PalSkillsCooldownOnUseZaa:
  db F3 0F 11 43 5C

unregistersymbol(PalSkillsCooldownOnUseZaa)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2912DAF

Palworld-Win64-Shipping.exe+2912D8B: 38 43 61        - cmp [rbx+61],al
Palworld-Win64-Shipping.exe+2912D8E: 75 5C           - jne Palworld-Win64-Shipping.exe+2912DEC
Palworld-Win64-Shipping.exe+2912D90: 38 43 58        - cmp [rbx+58],al
Palworld-Win64-Shipping.exe+2912D93: 74 57           - je Palworld-Win64-Shipping.exe+2912DEC
Palworld-Win64-Shipping.exe+2912D95: F3 0F 10 4B 64  - movss xmm1,[rbx+64]
Palworld-Win64-Shipping.exe+2912D9A: 48 8D 4B 28     - lea rcx,[rbx+28]
Palworld-Win64-Shipping.exe+2912D9E: 0F 2F CF        - comiss xmm1,xmm7
Palworld-Win64-Shipping.exe+2912DA1: 41 0F 28 C1     - movaps xmm0,xmm9
Palworld-Win64-Shipping.exe+2912DA5: F3 41 0F 59 C0  - mulss xmm0,xmm8
Palworld-Win64-Shipping.exe+2912DAA: F3 0F 58 43 5C  - addss xmm0,[rbx+5C]
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2912DAF: F3 0F 11 43 5C  - movss [rbx+5C],xmm0
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2912DB4: 73 05           - jae Palworld-Win64-Shipping.exe+2912DBB
Palworld-Win64-Shipping.exe+2912DB6: 0F 28 C6        - movaps xmm0,xmm6
Palworld-Win64-Shipping.exe+2912DB9: EB 04           - jmp Palworld-Win64-Shipping.exe+2912DBF
Palworld-Win64-Shipping.exe+2912DBB: F3 0F 5E C1     - divss xmm0,xmm1
Palworld-Win64-Shipping.exe+2912DBF: 48 8D 55 67     - lea rdx,[rbp+67]
Palworld-Win64-Shipping.exe+2912DC3: F3 0F 11 45 67  - movss [rbp+67],xmm0
Palworld-Win64-Shipping.exe+2912DC8: E8 23 2B 26 FE  - call Palworld-Win64-Shipping.exe+B758F0
Palworld-Win64-Shipping.exe+2912DCD: F3 0F 10 43 64  - movss xmm0,[rbx+64]
Palworld-Win64-Shipping.exe+2912DD2: 0F 2F 43 5C     - comiss xmm0,[rbx+5C]
Palworld-Win64-Shipping.exe+2912DD6: 73 14           - jae Palworld-Win64-Shipping.exe+2912DEC
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>105828</ID>
          <Description>"DayTime"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-02
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(DayTimeZaa,$process,48 01 11 C3 CC CC 48) // should be unique
alloc(newmem,$1000,DayTimeZaa)

label(code)
label(return)

newmem:

jmp return

code:
  add [rcx],rdx
  ret 
  int 3 
  jmp return

DayTimeZaa:
  jmp newmem
return:
registersymbol(DayTimeZaa)

[DISABLE]

DayTimeZaa:
  db 48 01 11 C3 CC

unregistersymbol(DayTimeZaa)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+28C12FA

Palworld-Win64-Shipping.exe+28C12D7: F3 0F 11 81 94 09 00 00        - movss [rcx+00000994],xmm0
Palworld-Win64-Shipping.exe+28C12DF: 76 0A                          - jna Palworld-Win64-Shipping.exe+28C12EB
Palworld-Win64-Shipping.exe+28C12E1: C7 81 94 09 00 00 00 00 80 3F  - mov [rcx+00000994],3F800000
Palworld-Win64-Shipping.exe+28C12EB: C3                             - ret 
Palworld-Win64-Shipping.exe+28C12EC: CC                             - int 3 
Palworld-Win64-Shipping.exe+28C12ED: CC                             - int 3 
Palworld-Win64-Shipping.exe+28C12EE: CC                             - int 3 
Palworld-Win64-Shipping.exe+28C12EF: CC                             - int 3 
Palworld-Win64-Shipping.exe+28C12F0: 48 63 C2                       - movsxd  rax,edx
Palworld-Win64-Shipping.exe+28C12F3: 48 69 D0 80 96 98 00           - imul rdx,rax,00989680
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+28C12FA: 48 01 11                       - add [rcx],rdx
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+28C12FD: C3                             - ret 
Palworld-Win64-Shipping.exe+28C12FE: CC                             - int 3 
Palworld-Win64-Shipping.exe+28C12FF: CC                             - int 3 
Palworld-Win64-Shipping.exe+28C1300: 48 83 EC 38                    - sub rsp,38
Palworld-Win64-Shipping.exe+28C1304: 45 33 C9                       - xor r9d,r9d
Palworld-Win64-Shipping.exe+28C1307: C6 44 24 20 01                 - mov byte ptr [rsp+20],01
Palworld-Win64-Shipping.exe+28C130C: E8 9F 19 02 00                 - call Palworld-Win64-Shipping.exe+28E2CB0
Palworld-Win64-Shipping.exe+28C1311: 48 83 C4 38                    - add rsp,38
Palworld-Win64-Shipping.exe+28C1315: C3                             - ret 
Palworld-Win64-Shipping.exe+28C1316: CC                             - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>105702</ID>
          <Description>"DayTime"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>8 Bytes</VariableType>
          <Address>2418BEE2620</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>105829</ID>
          <Description>"Day Time"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-02
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(DayTimeZb,$process,48 8B 80 E0 00 00 00 48 89 03) // should be unique
alloc(newmem,$1000,DayTimeZb)

label(code)
label(return)

newmem:

code:
  //mov rax,[rax+000000E0]
  jmp return

DayTimeZb:
  jmp newmem
  nop 2
return:
registersymbol(DayTimeZb)

[DISABLE]

DayTimeZb:
  db 48 8B 80 E0 00 00 00

unregistersymbol(DayTimeZb)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2B55076

Palworld-Win64-Shipping.exe+2B5505D: C3                    - ret 
Palworld-Win64-Shipping.exe+2B5505E: CC                    - int 3 
Palworld-Win64-Shipping.exe+2B5505F: CC                    - int 3 
Palworld-Win64-Shipping.exe+2B55060: 40 53                 - push rbx
Palworld-Win64-Shipping.exe+2B55062: 48 83 EC 20           - sub rsp,20
Palworld-Win64-Shipping.exe+2B55066: 48 8B D9              - mov rbx,rcx
Palworld-Win64-Shipping.exe+2B55069: 48 8B CA              - mov rcx,rdx
Palworld-Win64-Shipping.exe+2B5506C: E8 4F ED 00 00        - call Palworld-Win64-Shipping.exe+2B63DC0
Palworld-Win64-Shipping.exe+2B55071: 48 85 C0              - test rax,rax
Palworld-Win64-Shipping.exe+2B55074: 74 13                 - je Palworld-Win64-Shipping.exe+2B55089
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2B55076: 48 8B 80 E0 00 00 00  - mov rax,[rax+000000E0]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2B5507D: 48 89 03              - mov [rbx],rax
Palworld-Win64-Shipping.exe+2B55080: 48 8B C3              - mov rax,rbx
Palworld-Win64-Shipping.exe+2B55083: 48 83 C4 20           - add rsp,20
Palworld-Win64-Shipping.exe+2B55087: 5B                    - pop rbx
Palworld-Win64-Shipping.exe+2B55088: C3                    - ret 
Palworld-Win64-Shipping.exe+2B55089: 48 C7 03 00 00 00 00  - mov qword ptr [rbx],00000000
Palworld-Win64-Shipping.exe+2B55090: 48 8B C3              - mov rax,rbx
Palworld-Win64-Shipping.exe+2B55093: 48 83 C4 20           - add rsp,20
Palworld-Win64-Shipping.exe+2B55097: 5B                    - pop rbx
Palworld-Win64-Shipping.exe+2B55098: C3                    - ret 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>105831</ID>
          <Description>"Day Time"</Description>
          <VariableType>8 Bytes</VariableType>
          <Address>29D89832760</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>106111</ID>
          <Description>"Quick Interact with Incubator"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-02
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SpeedIncubatorInteractA,$process,F3 0F 58 83 34 01 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

mov [rbx+00000134],(float)10

code:
  addss xmm0,[rbx+00000134]
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 58 83 34 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+28B5F72

Palworld-Win64-Shipping.exe+28B5F41: 48 8B 83 90 00 00 00     - mov rax,[rbx+00000090]
Palworld-Win64-Shipping.exe+28B5F48: 4C 8D 45 E7              - lea r8,[rbp-19]
Palworld-Win64-Shipping.exe+28B5F4C: 48 89 B4 24 A0 00 00 00  - mov [rsp+000000A0],rsi
Palworld-Win64-Shipping.exe+28B5F54: 48 8D 55 07              - lea rdx,[rbp+07]
Palworld-Win64-Shipping.exe+28B5F58: 48 89 45 E7              - mov [rbp-19],rax
Palworld-Win64-Shipping.exe+28B5F5C: 33 C9                    - xor ecx,ecx
Palworld-Win64-Shipping.exe+28B5F5E: 33 C0                    - xor eax,eax
Palworld-Win64-Shipping.exe+28B5F60: 48 89 BC 24 A8 00 00 00  - mov [rsp+000000A8],rdi
Palworld-Win64-Shipping.exe+28B5F68: 48 8B BB F8 00 00 00     - mov rdi,[rbx+000000F8]
Palworld-Win64-Shipping.exe+28B5F6F: 0F 28 C6                 - movaps xmm0,xmm6
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+28B5F72: F3 0F 58 83 34 01 00 00  - addss xmm0,[rbx+00000134]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+28B5F7A: 48 89 45 13              - mov [rbp+13],rax
Palworld-Win64-Shipping.exe+28B5F7E: 48 89 45 1F              - mov [rbp+1F],rax
Palworld-Win64-Shipping.exe+28B5F82: 48 89 45 2B              - mov [rbp+2B],rax
Palworld-Win64-Shipping.exe+28B5F86: 48 89 45 17              - mov [rbp+17],rax
Palworld-Win64-Shipping.exe+28B5F8A: 48 89 45 23              - mov [rbp+23],rax
Palworld-Win64-Shipping.exe+28B5F8E: 48 89 45 2F              - mov [rbp+2F],rax
Palworld-Win64-Shipping.exe+28B5F92: 48 89 45 07              - mov [rbp+07],rax
Palworld-Win64-Shipping.exe+28B5F96: 48 89 45 0B              - mov [rbp+0B],rax
Palworld-Win64-Shipping.exe+28B5F9A: 0F 29 7C 24 70           - movaps [rsp+70],xmm7
Palworld-Win64-Shipping.exe+28B5F9F: 0F 10 BB F0 00 00 00     - movups xmm7,[rbx+000000F0]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>105249</ID>
          <Description>"Group 8"</Description>
          <GroupHeader>1</GroupHeader>
          <Address>0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>106110</ID>
          <Description>"speed incub interact"</Description>
          <VariableType>Float</VariableType>
          <Address>2758A0B55B4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>106119</ID>
          <Description>"Max Item On Select"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-03
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ItemMaxQuantityOnCraftWhenSelectAa,Palworld-Win64-Shipping.exe,04 48 89 42 20 41 89 08 C3 CC) // should be unique
alloc(newmem,$1000,ItemMaxQuantityOnCraftWhenSelectAa)

label(code)
label(return)

newmem:
{
off 50 my (int)3190890923
off D8 my (int)3291281336
off 140 my (int)3195082606
off 250 my (int)3260187688
off 368 my (int)3262807424
off 370 my (int)4294902016
off 3B0 my (int)3196643215
off 3DC my (int)8
off 450 my (int)16
off 460 my (int)3160758800
off 4D4 my (int)4
off 720 my (int)256
}
cmp [rsp+50],(int)3190890923
jne code

mov ecx,(int)2
  mov [r8],ecx
  ret
  int 3
  jmp return

code:
  mov [r8],ecx
  ret 
  int 3 
  jmp return

ItemMaxQuantityOnCraftWhenSelectAa+05:
  jmp newmem
return:
registersymbol(ItemMaxQuantityOnCraftWhenSelectAa)

[DISABLE]

ItemMaxQuantityOnCraftWhenSelectAa+05:
  db 41 89 08 C3 CC

unregistersymbol(ItemMaxQuantityOnCraftWhenSelectAa)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2E8CFBE

Palworld-Win64-Shipping.exe+2E8CFAA: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFAB: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFAC: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFAD: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFAE: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFAF: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFB0: 48 8B 42 20  - mov rax,[rdx+20]
Palworld-Win64-Shipping.exe+2E8CFB4: 8B 08        - mov ecx,[rax]
Palworld-Win64-Shipping.exe+2E8CFB6: 48 83 C0 04  - add rax,04
Palworld-Win64-Shipping.exe+2E8CFBA: 48 89 42 20  - mov [rdx+20],rax
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2E8CFBE: 41 89 08     - mov [r8],ecx
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2E8CFC1: C3           - ret 
Palworld-Win64-Shipping.exe+2E8CFC2: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFC3: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFC4: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFC5: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFC6: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFC7: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFC8: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFC9: CC           - int 3 
Palworld-Win64-Shipping.exe+2E8CFCA: CC           - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>108808</ID>
          <Description>"Item Alwasy Craftable TST"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-03
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,VCRUNTIME140.dll,4C 8D 15 36 EF FE FF 49 83 F8 0F 0F 87 0C 01 00 00 66 66 66 66 0F 1F 84 00 00 00 00 00 47 8B 8C 82 70 4E 01 00 4D 03 CA 41 FF E1 C3 90 4C 8B 02 8B 4A 08 44 0F B7 4A 0C 44 0F B6 52 0E 4C 89 00 89 48 08 66 44 89 48 0C 44 88 50 0E C3 4C 8B 02 0F B7 4A 08 44 0F B6 4A 0A 4C 89 00 66 89 48 08 44 88 48 0A C3 0F B7 0A 66 89 08 C3 90 8B 0A 44 0F B7 42 04 44 0F B6 4A 06 89 08 66 44 89 40 04 44 88 48 06 C3 4C 8B 02 8B 4A 08 44 0F B7 4A 0C 4C 89 00 89 48 08 66 44 89 48 0C C3 0F B7 0A 44 0F B6 42 02 66 89 08 44 88 40 02 C3 90 4C 8B 02 8B 4A 08 44 0F B6 4A 0C 4C 89 00 89 48 08 44 88 48 0C C3 4C 8B 02 0F B7 4A 08 4C 89 00 66 89 48 08 C3 4C 8B 02 0F B6 4A 08 4C 89 00 88 48 08 C3 4C 8B 02 8B 4A 08 4C 89 00 89 48 08 C3 8B 0A 44 0F B7 42 04 89 08 66 44 89 40 04 C3 8B 0A 44 0F B6 42 04 89 08 44 88 40 04 C3 48 8B 0A 48 89 08 C3 0F B6 0A 88 08 C3 8B 0A 89 08 C3 90 49 83 F8 20 77 17 F3 0F 6F 0A F3 42 0F 6F 54 02 F0) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

label(tst1)
registersymbol(tst1)

newmem:
{
RSP
off 310 my (int)3224897490
off 440 my (int)214052
off 4A0 my (int)214052
off 4C8 my (int)214052
off 4F0 my (int)214052
off 520 my (int)3195051510
off 584 my (int)324
off 590 my (int)3220846140
}

cmp [rsp+310],(int)3224897490
jne code

mov [tst1],rdx

  movzx ecx,byte ptr [rdx]
  mov [rax],cl
  jmp return

code:
  movzx ecx,byte ptr [rdx]
  mov [rax],cl
  jmp return

  tst1:
  dq 0

INJECT+111:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT+111:
  db 0F B6 0A 88 08

unregistersymbol(*)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: VCRUNTIME140.memmove+114

VCRUNTIME140.memmove+F9: 66 44 89 40 04        - mov [rax+04],r8w
VCRUNTIME140.memmove+FE: C3                    - ret 
VCRUNTIME140.memmove+FF: 8B 0A                 - mov ecx,[rdx]
VCRUNTIME140.memmove+101: 44 0F B6 42 04        - movzx r8d,byte ptr [rdx+04]
VCRUNTIME140.memmove+106: 89 08                 - mov [rax],ecx
VCRUNTIME140.memmove+108: 44 88 40 04           - mov [rax+04],r8b
VCRUNTIME140.memmove+10C: C3                    - ret 
VCRUNTIME140.memmove+10D: 48 8B 0A              - mov rcx,[rdx]
VCRUNTIME140.memmove+110: 48 89 08              - mov [rax],rcx
VCRUNTIME140.memmove+113: C3                    - ret 
// ---------- INJECTING HERE ----------
VCRUNTIME140.memmove+114: 0F B6 0A              - movzx ecx,byte ptr [rdx]
// ---------- DONE INJECTING  ----------
VCRUNTIME140.memmove+117: 88 08                 - mov [rax],cl
VCRUNTIME140.memmove+119: C3                    - ret 
VCRUNTIME140.memmove+11A: 8B 0A                 - mov ecx,[rdx]
VCRUNTIME140.memmove+11C: 89 08                 - mov [rax],ecx
VCRUNTIME140.memmove+11E: C3                    - ret 
VCRUNTIME140.memmove+11F: 90                    - nop 
VCRUNTIME140.memmove+120: 49 83 F8 20           - cmp r8,20
VCRUNTIME140.memmove+124: 77 17                 - ja VCRUNTIME140.memmove+13D
VCRUNTIME140.memmove+126: F3 0F 6F 0A           - movdqu xmm1,[rdx]
VCRUNTIME140.memmove+12A: F3 42 0F 6F 54 02 F0  - movdqu xmm2,[rdx+r8-10]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>108810</ID>
              <Description>"No description"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>tst1</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>108818</ID>
          <Description>"Cordinates on Jump"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-03
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(GetCordinatesOnJumpA,Palworld-Win64-Shipping.exe,0F 10 80 70 02 00 00 F2 0F 11 85 A0) // should be unique
alloc(newmem,$1000,GetCordinatesOnJumpA)

alloc(originalbytesHi,9)
registersymbol(originalbytesHi)

originalbytesHi:
readmem(GetCordinatesOnJumpA,9)

label(code)
label(return)

label(seeCoords)
registersymbol(seeCoords)

newmem:

mov [seeCoords],rax

code:
  movups xmm0,[rax+00000270]
  jmp return

  seeCoords:
  dq 0

GetCordinatesOnJumpA:
  jmp newmem
  nop 2
return:
registersymbol(GetCordinatesOnJumpA)

[DISABLE]

GetCordinatesOnJumpA:
readmem(originalbytesHi,9)
  //db 0F 10 80 70 02 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+490929F

Palworld-Win64-Shipping.exe+4909265: F6 85 CD 00 00 00 01     - test byte ptr [rbp+000000CD],01
Palworld-Win64-Shipping.exe+490926C: 0F 84 7F 05 00 00        - je Palworld-Win64-Shipping.exe+49097F1
Palworld-Win64-Shipping.exe+4909272: 48 8B 07                 - mov rax,[rdi]
Palworld-Win64-Shipping.exe+4909275: 4C 8D 45 20              - lea r8,[rbp+20]
Palworld-Win64-Shipping.exe+4909279: 48 8D 95 90 02 00 00     - lea rdx,[rbp+00000290]
Palworld-Win64-Shipping.exe+4909280: 48 8B CF                 - mov rcx,rdi
Palworld-Win64-Shipping.exe+4909283: 4C 8B 88 60 09 00 00     - mov r9,[rax+00000960]
Palworld-Win64-Shipping.exe+490928A: 48 8B 87 A0 00 00 00     - mov rax,[rdi+000000A0]
Palworld-Win64-Shipping.exe+4909291: 0F 10 80 60 02 00 00     - movups xmm0,[rax+00000260]
Palworld-Win64-Shipping.exe+4909298: 0F 11 85 90 02 00 00     - movups [rbp+00000290],xmm0
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+490929F: 0F 10 80 70 02 00 00     - movups xmm0,[rax+00000270]
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+49092A6: F2 0F 11 85 A0 02 00 00  - movsd [rbp+000002A0],xmm0
Palworld-Win64-Shipping.exe+49092AE: 41 FF D1                 - call r9
Palworld-Win64-Shipping.exe+49092B1: 84 C0                    - test al,al
Palworld-Win64-Shipping.exe+49092B3: 0F 85 D3 0E 00 00        - jne Palworld-Win64-Shipping.exe+490A18C
Palworld-Win64-Shipping.exe+49092B9: F6 85 CD 00 00 00 02     - test byte ptr [rbp+000000CD],02
Palworld-Win64-Shipping.exe+49092C0: 41 0F 28 C5              - movaps xmm0,xmm13
Palworld-Win64-Shipping.exe+49092C4: 0F 10 8F C0 00 00 00     - movups xmm1,[rdi+000000C0]
Palworld-Win64-Shipping.exe+49092CB: F2 41 0F 59 07           - mulsd xmm0,[r15]
Palworld-Win64-Shipping.exe+49092D0: 66 41 0F 59 CD           - mulpd xmm1,xmm13
Palworld-Win64-Shipping.exe+49092D5: F2 0F 11 44 24 50        - movsd [rsp+50],xmm0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>108809</ID>
          <Description>"Group 9"</Description>
          <GroupHeader>1</GroupHeader>
          <Address>0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>109414</ID>
          <Description>"Auto Assemble script"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-03
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,Palworld-Win64-Shipping.exe,44 0F 11 B7 60 02 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return w)

newmem:
movss xmm14,[w]
code:
  movups [rdi+00000260],xmm14
  jmp return

  w:
  dd (int)1

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 44 0F 11 B7 60 02 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+498AFEE

Palworld-Win64-Shipping.exe+498AFCA: 75 0D                       - jne Palworld-Win64-Shipping.exe+498AFD9
Palworld-Win64-Shipping.exe+498AFCC: 45 84 C9                    - test r9b,r9b
Palworld-Win64-Shipping.exe+498AFCF: 75 08                       - jne Palworld-Win64-Shipping.exe+498AFD9
Palworld-Win64-Shipping.exe+498AFD1: 45 33 C9                    - xor r9d,r9d
Palworld-Win64-Shipping.exe+498AFD4: 45 33 C0                    - xor r8d,r8d
Palworld-Win64-Shipping.exe+498AFD7: EB 33                       - jmp Palworld-Win64-Shipping.exe+498B00C
Palworld-Win64-Shipping.exe+498AFD9: 44 0F 11 87 40 02 00 00     - movups [rdi+00000240],xmm8
Palworld-Win64-Shipping.exe+498AFE1: 45 8B C6                    - mov r8d,r14d
Palworld-Win64-Shipping.exe+498AFE4: B2 01                       - mov dl,01
Palworld-Win64-Shipping.exe+498AFE6: 44 0F 11 BF 50 02 00 00     - movups [rdi+00000250],xmm15
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+498AFEE: 44 0F 11 B7 60 02 00 00     - movups [rdi+00000260],xmm14
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+498AFF6: 0F 11 A7 70 02 00 00        - movups [rdi+00000270],xmm4
Palworld-Win64-Shipping.exe+498AFFD: 0F 11 B7 80 02 00 00        - movups [rdi+00000280],xmm6
Palworld-Win64-Shipping.exe+498B004: 44 0F 11 8F 90 02 00 00     - movups [rdi+00000290],xmm9
Palworld-Win64-Shipping.exe+498B00C: 48 8B CF                    - mov rcx,rdi
Palworld-Win64-Shipping.exe+498B00F: E8 8C 60 FF FF              - call Palworld-Win64-Shipping.exe+49810A0
Palworld-Win64-Shipping.exe+498B014: 44 0F 28 B4 24 80 03 00 00  - movaps xmm14,[rsp+00000380]
Palworld-Win64-Shipping.exe+498B01D: 44 0F 28 9C 24 B0 03 00 00  - movaps xmm11,[rsp+000003B0]
Palworld-Win64-Shipping.exe+498B026: 44 0F 28 94 24 C0 03 00 00  - movaps xmm10,[rsp+000003C0]
Palworld-Win64-Shipping.exe+498B02F: 44 0F 28 8C 24 D0 03 00 00  - movaps xmm9,[rsp+000003D0]
Palworld-Win64-Shipping.exe+498B038: 44 0F 28 84 24 E0 03 00 00  - movaps xmm8,[rsp+000003E0]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>90387</ID>
          <Description>"Item On Pick Up"</Description>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Palworld-Win64-Shipping.exe
  Version: 
  Date   : 2024-02-01
  Author : SilverRabbit9O

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ItemOnPickUpAa,$process,89 B3 04 01 00 00 85) // should be unique
alloc(newmem,$1000,ItemOnPickUpAa)

alloc(originalbytesAt,9)
registersymbol(originalbytesAt)

originalbytesAt:
readmem(ItemOnPickUpAa,9)

label(code)
label(return)

label(addItemV2)
registersymbol(addItemV2)

newmem:

add esi,[addItemV2]

code:
  mov [rbx+00000104],esi
  jmp return

  addItemV2:
  dd (int)1

ItemOnPickUpAa:
  jmp newmem
  nop
return:
registersymbol(ItemOnPickUpAa)

[DISABLE]

ItemOnPickUpAa:
readmem(originalbytesAt,9)
  //db 89 B3 04 01 00 00

unregistersymbol(*)
dealloc(*)

{
// ORIGINAL CODE - INJECTION POINT: Palworld-Win64-Shipping.exe+2A40C02

Palworld-Win64-Shipping.exe+2A40BCF: E8 AC 81 FF FF           - call Palworld-Win64-Shipping.exe+2A38D80
Palworld-Win64-Shipping.exe+2A40BD4: 44 8B 5D B0              - mov r11d,[rbp-50]
Palworld-Win64-Shipping.exe+2A40BD8: 44 8B 55 A8              - mov r10d,[rbp-58]
Palworld-Win64-Shipping.exe+2A40BDC: 44 8B 75 B4              - mov r14d,[rbp-4C]
Palworld-Win64-Shipping.exe+2A40BE0: 0F 10 07                 - movups xmm0,[rdi]
Palworld-Win64-Shipping.exe+2A40BE3: 0F 11 83 DC 00 00 00     - movups [rbx+000000DC],xmm0
Palworld-Win64-Shipping.exe+2A40BEA: 0F 10 4F 10              - movups xmm1,[rdi+10]
Palworld-Win64-Shipping.exe+2A40BEE: 0F 11 8B EC 00 00 00     - movups [rbx+000000EC],xmm1
Palworld-Win64-Shipping.exe+2A40BF5: F2 0F 10 47 20           - movsd xmm0,[rdi+20]
Palworld-Win64-Shipping.exe+2A40BFA: F2 0F 11 83 FC 00 00 00  - movsd [rbx+000000FC],xmm0
// ---------- INJECTING HERE ----------
Palworld-Win64-Shipping.exe+2A40C02: 89 B3 04 01 00 00        - mov [rbx+00000104],esi
// ---------- DONE INJECTING  ----------
Palworld-Win64-Shipping.exe+2A40C08: 85 F6                    - test esi,esi
Palworld-Win64-Shipping.exe+2A40C0A: 7F 2C                    - jg Palworld-Win64-Shipping.exe+2A40C38
Palworld-Win64-Shipping.exe+2A40C0C: 0F 10 05 25 AB C9 05     - movups xmm0,[Palworld-Win64-Shipping.exe+86DB738]
Palworld-Win64-Shipping.exe+2A40C13: 0F 11 83 DC 00 00 00     - movups [rbx+000000DC],xmm0
Palworld-Win64-Shipping.exe+2A40C1A: 0F 10 0D 27 AB C9 05     - movups xmm1,[Palworld-Win64-Shipping.exe+86DB748]
Palworld-Win64-Shipping.exe+2A40C21: 0F 11 8B EC 00 00 00     - movups [rbx+000000EC],xmm1
Palworld-Win64-Shipping.exe+2A40C28: F2 0F 10 05 28 AB C9 05  - movsd xmm0,[Palworld-Win64-Shipping.exe+86DB758]
Palworld-Win64-Shipping.exe+2A40C30: F2 0F 11 83 FC 00 00 00  - movsd [rbx+000000FC],xmm0
Palworld-Win64-Shipping.exe+2A40C38: 8B 8B F4 00 00 00        - mov ecx,[rbx+000000F4]
Palworld-Win64-Shipping.exe+2A40C3E: 8B C1                    - mov eax,ecx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>109420</ID>
          <Description>"coord"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>1E20AA21FBC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>109425</ID>
          <Description>"Captured Pal Quantity"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>236B3744A08</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
